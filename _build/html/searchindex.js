Search.setIndex({"docnames": ["apl-quest/2013/Float-Your-Boat-APLQuest-2013-7", "apl-quest/2013/Go-Forth-And-Multiply-APLQuest-2013-8", "apl-quest/2013/Home-On-The-Range-APLQuest-2013-6", "apl-quest/2013/Identity-Crisis-APLQuest-2013-5", "apl-quest/2013/It-Isa-Moving-Experience-APLQuest-2013-9", "apl-quest/2013/Keeping-Things-In-Balance-APLQuest-2013-4", "apl-quest/2013/Making-The-Grade-APLQuest-2013-2", "apl-quest/2013/Seemsa-Bit-Odd-To-Me-APLQuest-2013-1", "apl-quest/2013/Solution-Salvation-APLQuest-2013-10", "apl-quest/2013/Untitled", "apl-quest/2013/What's in a Worda", "apl-quest/2013/What-Is-Ina-Word-APLQuest-2013-3", "apl-quest/2013/index", "apl-quest/2013/old/1", "apl-quest/2013/old/1a", "apl-quest/2013/old/2", "apl-quest/2013/old/2-bTranscript", "apl-quest/2013/old/2-transcript", "apl-quest/2013/old/3", "apl-quest/2013/old/3 (copy)", "apl-quest/2013/old/4", "apl-quest/2013/old/5", "apl-quest/2013/old/6", "apl-quest/2013/old/7", "apl-quest/2013/old/8", "apl-quest/2014/Go-The-Distance-APLQuest-2014-8", "apl-quest/2014/Going-Ballistic-APLQuest-2014-9", "apl-quest/2014/How-Tweet-It-Is-APLQuest-2014-2", "apl-quest/2014/It-Is-All-Right-APLQuest-2014-1", "apl-quest/2014/Mirror-Mirror-APLQuest-2014-5", "apl-quest/2014/Revolutionary-Thinking-APLQuest-2014-7", "apl-quest/2014/Sales-Are-Up-APLQuest-2014-10", "apl-quest/2014/Space-The-Final-Frontier-APLQuest-2014-4", "apl-quest/2014/Tell-a-Fib-APLQuest-2014-3", "apl-quest/2014/index", "apl-quest/2015/Blazing-A-Trail-APLQuest-2015-10", "apl-quest/2015/Farey-Tales-APLQuest-2015-3", "apl-quest/2015/Hes-So-Mean-He-Has-No-Standard-Deviation-APLQuest-2015-5", "apl-quest/2015/Hey-Thisis-My-Space-APLQuest-2015-6-EXTENDED", "apl-quest/2015/Id-Like-Mine-Scrambled-Please-APLQuest-2015-9", "apl-quest/2015/Justin-Upper-Case-APLQuest-2015-7", "apl-quest/2015/Longest-Streak-APLQuest-2015-2", "apl-quest/2015/Nag-A-Ram-APLQuest-2015-1", "apl-quest/2015/Progessive-Dyadic-Iota-APLQuest-2015-4", "apl-quest/2015/index", "apl-quest/2016/3-sand-5-s-APLQuest-2016-7", "apl-quest/2016/Delimited-Text-APLQuest-2016-9", "apl-quest/2016/Order-Total-APLQuest-2016-10", "apl-quest/2016/Separating-Outthe-Negative-APLQuest-2016-8", "apl-quest/2016/Shorter-Onestothe-Front-APLQuest-2016-6", "apl-quest/2016/Statistics-Mean-APLQuest-2016-1", "apl-quest/2016/Statistics-Median-APLQuest-2016-2", "apl-quest/2016/Statistics-Mode-APLQuest-2016-3", "apl-quest/2016/Youre-Unique-Just-Like-Everyone-Else-APLQuest-2016-5", "apl-quest/2016/index", "apl-quest/2017/Be-the-First-1-APLQuest-2017-8", "apl-quest/2017/Counting-DNANucleotides-APLQuest-2017-7", "apl-quest/2017/DNA-APLQuest-2017-5", "apl-quest/2017/Double-Trouble-APLQuest-2017-9", "apl-quest/2017/Good-Evening-APLQuest-2017-2", "apl-quest/2017/Miss-Quoted-APLQuest-2017-3", "apl-quest/2017/Slices-of-Pies-APLQuest-2017-4", "apl-quest/2017/Squaring-Off-APLQuest-2017-10", "apl-quest/2017/What-an-Odd-Bunch-APLQuest-2017-1", "apl-quest/2017/index", "apl-quest/2017/k-mers-APLQuest-2017-6", "apl-quest/2018/Anagrammatically-Correct-APLQuest-2018-10", "apl-quest/2018/Earlier-Later-or-the-Same-APLQuest-2018-9", "apl-quest/2018/Makinga-Good-Argument-APLQuest-2018-8", "apl-quest/2018/Number-Splitting-APLQuest-2018-2", "apl-quest/2018/Oh-Say-Can-You-See-APLQuest-2018-1", "apl-quest/2018/Rolling-Along-APLQuest-2018-3", "apl-quest/2018/Unconditionally-Shifty-APLQuest-2018-7", "apl-quest/2018/Whats-Your-Angle-APLQuest-2018-6", "apl-quest/2018/Whats-Your-Sign-APLQuest-2018-4", "apl-quest/2018/Whats-Your-Sign-Revisited-APLQuest-2018-5", "apl-quest/2018/index", "apl-quest/2019/Area-Code-Gauss-APLQuest-2019-9", "apl-quest/2019/Chunky-Monkey-APLQuest-2019-1", "apl-quest/2019/Doubling-Up-APLQuest-2019-5", "apl-quest/2019/Goingthe-Distance-APLQuest-2019-8", "apl-quest/2019/Grade-Distribution-APLQuest-2019-3", "apl-quest/2019/In-the-Center-of-it-All-APLQuest-2019-7", "apl-quest/2019/Knight-Moves-APLQuest-2019-4", "apl-quest/2019/Makingthe-Grade-APLQuest-2019-2", "apl-quest/2019/Odds-Evens-APLQuest-2019-10", "apl-quest/2019/Telephone-Names-APLQuest-2019-6", "apl-quest/2019/index", "apl-quest/2020/Character-Building-APLQuest-2020-2", "apl-quest/2020/Excel-lent-Columns-APLQuest-2020-3", "apl-quest/2020/Lets-Split-APLQuest-2020-1", "apl-quest/2020/Movetothe-Front-APLQuest-2020-6", "apl-quest/2020/Riseand-Fall-APLQuest-2020-9", "apl-quest/2020/See-Youina-Bit-APLQuest-2020-7", "apl-quest/2020/Stacking-It-Up-APLQuest-2020-10", "apl-quest/2020/Steppinginthe-Proper-Direction-APLQuest-2020-5", "apl-quest/2020/Takea-Leap-APLQuest-2020-4", "apl-quest/2020/Zigzag-Numbers-APLQuest-2020-8", "apl-quest/2020/index", "apl-quest/2021/Are-You-a--Bacteria-APLQuest-2021-1", "apl-quest/2021/Can-You-Feelthe-Magic-APLQuest-2021-7", "apl-quest/2021/Fischer-Random-Chess-APLQuest-2021-6", "apl-quest/2021/Index-Of-Modified-APLQuest-2021-2", "apl-quest/2021/Inthe-Long-Run-APLQuest-2021-9", "apl-quest/2021/Multiplicity-APLQuest-2021-3", "apl-quest/2021/Onthe-Right-Side-APLQuest-2021-10", "apl-quest/2021/Rect-ify-APLQuest-2021-5", "apl-quest/2021/Square-Peg-Round-Hole-APLQuest-2021-4", "apl-quest/2021/Timeto-Makea-Difference-APLQuest-2021-8", "apl-quest/2021/index", "apl-quest/2022/An-Average-Windowora-Windowed-Average-APLQuest-2022-9", "apl-quest/2022/Attackofthe-Mutations-APLQuest-2022-2", "apl-quest/2022/Counting-DNA-Nucleotides-APLQuest-2022-1", "apl-quest/2022/Inthe-Long-One-APLQuest-2022-4", "apl-quest/2022/Just-Golfing-Around-APLQuest-2022-7", "apl-quest/2022/Lets-Split-APLQuest-2022-8", "apl-quest/2022/Pyramid-Scheme-APLQuest-2022-6", "apl-quest/2022/Separation-Anxiety-APLQuest-2022-10", "apl-quest/2022/Stairwayto-Heaven-APLQuest-2022-5", "apl-quest/2022/Uniquely-Qualified-APLQuest-2022-3", "apl-quest/2022/index", "apl-quest/2023/Caesar-Salad-APLQuest-2023-3", "apl-quest/2023/Critical-Thinking-APLQuest-2023-8", "apl-quest/2023/EXTENDEDFlipping-Pairs-APLQuest-2023-9", "apl-quest/2023/Elimination-Sort-APLQuest-2023-1", "apl-quest/2023/Flipping-Pairs-APLQuest-2023-9", "apl-quest/2023/Key-Value-Pairs-APLQuest-2023-6", "apl-quest/2023/Lets-Be-Rational-APLQuest-2023-7", "apl-quest/2023/Like-a-Version-APLQuest-2023-4", "apl-quest/2023/Partition-witha-Twist-APLQuest-2023-10", "apl-quest/2023/Put-It-In-Reverse-APLQuest-2023-2", "apl-quest/2023/Risky-Business-APLQuest-2023-5", "apl-quest/2023/index", "intro", "master", "outer-product"], "filenames": ["apl-quest/2013/Float-Your-Boat-APLQuest-2013-7.md", "apl-quest/2013/Go-Forth-And-Multiply-APLQuest-2013-8.md", "apl-quest/2013/Home-On-The-Range-APLQuest-2013-6.md", "apl-quest/2013/Identity-Crisis-APLQuest-2013-5.md", "apl-quest/2013/It-Isa-Moving-Experience-APLQuest-2013-9.md", "apl-quest/2013/Keeping-Things-In-Balance-APLQuest-2013-4.md", "apl-quest/2013/Making-The-Grade-APLQuest-2013-2.md", "apl-quest/2013/Seemsa-Bit-Odd-To-Me-APLQuest-2013-1.md", "apl-quest/2013/Solution-Salvation-APLQuest-2013-10.md", "apl-quest/2013/Untitled.md", "apl-quest/2013/What's in a Worda.md", "apl-quest/2013/What-Is-Ina-Word-APLQuest-2013-3.md", "apl-quest/2013/index.md", "apl-quest/2013/old/1.md", "apl-quest/2013/old/1a.md", "apl-quest/2013/old/2.md", "apl-quest/2013/old/2-bTranscript.md", "apl-quest/2013/old/2-transcript.md", "apl-quest/2013/old/3.md", "apl-quest/2013/old/3 (copy).md", "apl-quest/2013/old/4.md", "apl-quest/2013/old/5.md", "apl-quest/2013/old/6.md", "apl-quest/2013/old/7.md", "apl-quest/2013/old/8.md", "apl-quest/2014/Go-The-Distance-APLQuest-2014-8.md", "apl-quest/2014/Going-Ballistic-APLQuest-2014-9.md", "apl-quest/2014/How-Tweet-It-Is-APLQuest-2014-2.md", "apl-quest/2014/It-Is-All-Right-APLQuest-2014-1.md", "apl-quest/2014/Mirror-Mirror-APLQuest-2014-5.md", "apl-quest/2014/Revolutionary-Thinking-APLQuest-2014-7.md", "apl-quest/2014/Sales-Are-Up-APLQuest-2014-10.md", "apl-quest/2014/Space-The-Final-Frontier-APLQuest-2014-4.md", "apl-quest/2014/Tell-a-Fib-APLQuest-2014-3.md", "apl-quest/2014/index.md", "apl-quest/2015/Blazing-A-Trail-APLQuest-2015-10.md", "apl-quest/2015/Farey-Tales-APLQuest-2015-3.md", "apl-quest/2015/Hes-So-Mean-He-Has-No-Standard-Deviation-APLQuest-2015-5.md", "apl-quest/2015/Hey-Thisis-My-Space-APLQuest-2015-6-EXTENDED.md", "apl-quest/2015/Id-Like-Mine-Scrambled-Please-APLQuest-2015-9.md", "apl-quest/2015/Justin-Upper-Case-APLQuest-2015-7.md", "apl-quest/2015/Longest-Streak-APLQuest-2015-2.md", "apl-quest/2015/Nag-A-Ram-APLQuest-2015-1.md", "apl-quest/2015/Progessive-Dyadic-Iota-APLQuest-2015-4.md", "apl-quest/2015/index.md", "apl-quest/2016/3-sand-5-s-APLQuest-2016-7.md", "apl-quest/2016/Delimited-Text-APLQuest-2016-9.md", "apl-quest/2016/Order-Total-APLQuest-2016-10.md", "apl-quest/2016/Separating-Outthe-Negative-APLQuest-2016-8.md", "apl-quest/2016/Shorter-Onestothe-Front-APLQuest-2016-6.md", "apl-quest/2016/Statistics-Mean-APLQuest-2016-1.md", "apl-quest/2016/Statistics-Median-APLQuest-2016-2.md", "apl-quest/2016/Statistics-Mode-APLQuest-2016-3.md", "apl-quest/2016/Youre-Unique-Just-Like-Everyone-Else-APLQuest-2016-5.md", "apl-quest/2016/index.md", "apl-quest/2017/Be-the-First-1-APLQuest-2017-8.md", "apl-quest/2017/Counting-DNANucleotides-APLQuest-2017-7.md", "apl-quest/2017/DNA-APLQuest-2017-5.md", "apl-quest/2017/Double-Trouble-APLQuest-2017-9.md", "apl-quest/2017/Good-Evening-APLQuest-2017-2.md", "apl-quest/2017/Miss-Quoted-APLQuest-2017-3.md", "apl-quest/2017/Slices-of-Pies-APLQuest-2017-4.md", "apl-quest/2017/Squaring-Off-APLQuest-2017-10.md", "apl-quest/2017/What-an-Odd-Bunch-APLQuest-2017-1.md", "apl-quest/2017/index.md", "apl-quest/2017/k-mers-APLQuest-2017-6.md", "apl-quest/2018/Anagrammatically-Correct-APLQuest-2018-10.md", "apl-quest/2018/Earlier-Later-or-the-Same-APLQuest-2018-9.md", "apl-quest/2018/Makinga-Good-Argument-APLQuest-2018-8.md", "apl-quest/2018/Number-Splitting-APLQuest-2018-2.md", "apl-quest/2018/Oh-Say-Can-You-See-APLQuest-2018-1.md", "apl-quest/2018/Rolling-Along-APLQuest-2018-3.md", "apl-quest/2018/Unconditionally-Shifty-APLQuest-2018-7.md", "apl-quest/2018/Whats-Your-Angle-APLQuest-2018-6.md", "apl-quest/2018/Whats-Your-Sign-APLQuest-2018-4.md", "apl-quest/2018/Whats-Your-Sign-Revisited-APLQuest-2018-5.md", "apl-quest/2018/index.md", "apl-quest/2019/Area-Code-Gauss-APLQuest-2019-9.md", "apl-quest/2019/Chunky-Monkey-APLQuest-2019-1.md", "apl-quest/2019/Doubling-Up-APLQuest-2019-5.md", "apl-quest/2019/Goingthe-Distance-APLQuest-2019-8.md", "apl-quest/2019/Grade-Distribution-APLQuest-2019-3.md", "apl-quest/2019/In-the-Center-of-it-All-APLQuest-2019-7.md", "apl-quest/2019/Knight-Moves-APLQuest-2019-4.md", "apl-quest/2019/Makingthe-Grade-APLQuest-2019-2.md", "apl-quest/2019/Odds-Evens-APLQuest-2019-10.md", "apl-quest/2019/Telephone-Names-APLQuest-2019-6.md", "apl-quest/2019/index.md", "apl-quest/2020/Character-Building-APLQuest-2020-2.md", "apl-quest/2020/Excel-lent-Columns-APLQuest-2020-3.md", "apl-quest/2020/Lets-Split-APLQuest-2020-1.md", "apl-quest/2020/Movetothe-Front-APLQuest-2020-6.md", "apl-quest/2020/Riseand-Fall-APLQuest-2020-9.md", "apl-quest/2020/See-Youina-Bit-APLQuest-2020-7.md", "apl-quest/2020/Stacking-It-Up-APLQuest-2020-10.md", "apl-quest/2020/Steppinginthe-Proper-Direction-APLQuest-2020-5.md", "apl-quest/2020/Takea-Leap-APLQuest-2020-4.md", "apl-quest/2020/Zigzag-Numbers-APLQuest-2020-8.md", "apl-quest/2020/index.md", "apl-quest/2021/Are-You-a--Bacteria-APLQuest-2021-1.md", "apl-quest/2021/Can-You-Feelthe-Magic-APLQuest-2021-7.md", "apl-quest/2021/Fischer-Random-Chess-APLQuest-2021-6.md", "apl-quest/2021/Index-Of-Modified-APLQuest-2021-2.md", "apl-quest/2021/Inthe-Long-Run-APLQuest-2021-9.md", "apl-quest/2021/Multiplicity-APLQuest-2021-3.md", "apl-quest/2021/Onthe-Right-Side-APLQuest-2021-10.md", "apl-quest/2021/Rect-ify-APLQuest-2021-5.md", "apl-quest/2021/Square-Peg-Round-Hole-APLQuest-2021-4.md", "apl-quest/2021/Timeto-Makea-Difference-APLQuest-2021-8.md", "apl-quest/2021/index.md", "apl-quest/2022/An-Average-Windowora-Windowed-Average-APLQuest-2022-9.md", "apl-quest/2022/Attackofthe-Mutations-APLQuest-2022-2.md", "apl-quest/2022/Counting-DNA-Nucleotides-APLQuest-2022-1.md", "apl-quest/2022/Inthe-Long-One-APLQuest-2022-4.md", "apl-quest/2022/Just-Golfing-Around-APLQuest-2022-7.md", "apl-quest/2022/Lets-Split-APLQuest-2022-8.md", "apl-quest/2022/Pyramid-Scheme-APLQuest-2022-6.md", "apl-quest/2022/Separation-Anxiety-APLQuest-2022-10.md", "apl-quest/2022/Stairwayto-Heaven-APLQuest-2022-5.md", "apl-quest/2022/Uniquely-Qualified-APLQuest-2022-3.md", "apl-quest/2022/index.md", "apl-quest/2023/Caesar-Salad-APLQuest-2023-3.md", "apl-quest/2023/Critical-Thinking-APLQuest-2023-8.md", "apl-quest/2023/EXTENDEDFlipping-Pairs-APLQuest-2023-9.md", "apl-quest/2023/Elimination-Sort-APLQuest-2023-1.md", "apl-quest/2023/Flipping-Pairs-APLQuest-2023-9.md", "apl-quest/2023/Key-Value-Pairs-APLQuest-2023-6.md", "apl-quest/2023/Lets-Be-Rational-APLQuest-2023-7.md", "apl-quest/2023/Like-a-Version-APLQuest-2023-4.md", "apl-quest/2023/Partition-witha-Twist-APLQuest-2023-10.md", "apl-quest/2023/Put-It-In-Reverse-APLQuest-2023-2.md", "apl-quest/2023/Risky-Business-APLQuest-2023-5.md", "apl-quest/2023/index.md", "intro.md", "master.md", "outer-product.md"], "titles": ["Float your Boat 2013-7", "Go forth and Multiply 2013-8", "Home on the range 2013-6", "Identity Crisis 2013-5", "It\u2019s a moving experience 2013-9", "Keeping things in balance 2013-4", "Making the Grade 2013-2", "Seems a Bit Odd To Me 2013-1", "Solution Salvation 2013-10", "&lt;no title&gt;", "What\u2019s in a Word", "What\u2019s in a Word 2013-3", "APL Quest 2013", "Seems a Bit Odd To Me", "Making the Grade", "Making the Grade", "Making the Grade", "&lt;no title&gt;", "Whats in a Word", "Whats in a Word", " Keeping Things In Balance", "Identity Crisis", "Home on the range", "Float your Boat", "&lt;no title&gt;", "Welcome to the APL Quest", "APL Quest", "APL Quest: Problem Solving and Performance of Text Processing Techniques", "Welcome to the APL Quest", "Welcome to the APL Quest", "Welcome to the APL Quest", "APL Quest: Analyzing the Largest Percentage Increase", "APL Quest: Normalizing Text Spaces", "Computing the Fibonacci Sequence", "APL Quest 2014", "API Quest: Generating a Centered Pascal\u2019s Triangle", "Welcome to the APL Quest", "APL Quest: Standard Deviation Calculation", "APL Quest: Problem Six Overview", "APL Quest: Swapping Interior Letters", "APL Quest: Problem 7 from the 2015 APL Problem Solver Competition", "APL Quest", "APL Quest: Anagrams Problem", "APL Quest Cap Wiki: Progressive Dyadic Iota", "APL Quest 2015", "Welcome to the APL Quest", "APL Quest: Delimiter Splitting Challenge", "Welcome to the APL Quest", "APL Quest: 8th Quest Overview", "Welcome to the APL Quest", "Welcome to the APL Quest", "Welcome to the APL Quest", "Welcome to APL Quest", "Welcome to the Appeal Quest", "APL Quest 2016", "Understanding Boolean Vector Processing in APL", "Counting Letters in a String: A Guide", "Checking Character Vectors for Valid Letters", "Finding Locations of Identical Characters in Text", "Ensure Odd Numbers Become Even Using APL", "Removing Text Between Double Quotes Using Regular Expressions", "Computing Areas of Circle Sectors Using APL", "Fitting Elements into a Square Array", "Welcome to the APL Quest", "APL Quest 2017", "Chopping Text into Sequences of a Given Length", "Comparing Two Character Vectors: An Anagram Checker", "Comparing Dates in APL: A Guide", "Validating Dyadic Transpose Arguments", "Splitting Numbers into Integer and Fractional Parts", "Counting Visible Buildings", "Simulating Dice Rolls and Analyzing Outcomes", "Shifting Boolean Data: An Introduction", "A Simple Test for XML Validity", "Converting Gregorian Year Numbers to Chinese Zodiac Animals", "Computing Zodiac Signs from Dates", "APL Quest 2018", "Calculating the Area of a Polygon Using the Shoelace Formula", "Chunking a List into Segments", "Checking for Consecutive Identical Letters in Words", "Computing the Distance Around a Path Defined by Points", "Compiling Simple Statistics on Grades", "Centering Words in a Matrix", "Understanding the Movement of a Chess Knight", "Converting Scores into Letter Grades", "Splitting a List of Words by Length", "Translating Telephone Numbers from Digits and Letters to Plain Numbers", "APL Quest 2019", "Understanding Byte Sequences and UTF-8 Encoding", "Understanding Column Label Conversion in Spreadsheet Software", "Understanding Vector Partitioning in APL", "Moving Elements in a Numeric Vector to the Front in APL", "Analyzing Non-Decreasing and Non-Increasing Patterns in a List of Numbers", "Checking Bit States in APL", "Emulating APL Array Printing Behavior", "Generating Inclusive Integer Ranges in APL", "Understanding Leap Years: A Guide", "Analyzing Alternating Digit Growth in Numbers", "APL Quest 2020", "Calculating Percentage of Characters in a DNA String", "Checking for Magic Squares", "Chess Setup Challenge", "Creating a Cover for the Dyadic Iota in APL", "Finding the Longest Consecutive Sequence in a List of Numbers", "Grouping Integers by Divisibility", "Justified Text Transformation in APL", "Finding Rectangle Dimensions with Given Area", "Finding the Difference in Area Between an Inscribed Square and Its Circumscribing Circle", "Calculating Absolute Time Difference in Minutes", "APL Quest 2021", "Calculating the Window Average of a List of Numbers in APL", "Comparing DNA Strings: A Guide", "Counting DNA Letters in a Character Vector", "Finding the Longest Run of Ones in a Boolean Vector", "Analyzing Golf Scores: Rank Calculation with Average Position for Tied Scores", "Splitting Text in APL", "Constructing Concentric Rings of Numbers", "Inserting Separators in Large Integers", "Building a Staircase in APL", "Finding the Symmetric Difference Between Two Sets", "APL Quest 2022", "Implementing a Simple Caesar Cipher for Uppercase Characters and Spaces", "Computing the Next Double Critical Day", "Interchanging Horizontally Adjacent Elements in a Multi-Dimensional Array", "Removing Non-Decreasing Elements from a List", "Interchanging Adjacent Elements in a Multi-Dimensional Array", "Parsing Key-Value Pairs into a Matrix", "Finding a Reduced Fraction for a Given Number", "Comparing Version Numbers", "APL Quest: Splitting Text on Spaces", "Finding End Points of One Array in Another", "Understanding Dice Mechanics in Risk", "APL Quest 2023", "Welcome to APL Quest", "APL Quest {year}", "Outer Product in APL: A Comprehensive Overview"], "terms": {"problem": [0, 1, 2, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 36, 43, 45, 46, 48, 49, 50, 53, 55, 60, 63, 72, 73, 75, 78, 82, 85, 90, 91, 106, 112, 113, 115, 123, 126, 133], "write": [0, 1, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 33, 37, 40, 46, 47, 50, 51, 52, 119], "dfn": [0, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 33, 35, 39, 41, 42, 70, 80, 103, 117], "which": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 94, 96, 97, 99, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 130, 131, 135], "select": [0, 3, 4, 8, 21, 22, 23, 24, 31, 36, 65, 74, 90, 91, 104], "non": [0, 2, 10, 11, 22, 23, 27, 31, 32, 36, 41, 42, 48, 68, 69, 96, 100, 104, 106, 128, 129], "integ": [0, 7, 13, 23, 24, 36, 41, 45, 62, 68, 88, 90, 93, 106, 116, 122, 127, 131], "number": [0, 1, 2, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 33, 35, 36, 41, 45, 47, 48, 49, 50, 52, 53, 55, 56, 62, 63, 65, 67, 68, 70, 71, 72, 75, 76, 78, 81, 82, 84, 85, 88, 89, 90, 91, 93, 95, 98, 99, 100, 104, 108, 111, 112, 117, 118, 121, 122, 124, 129, 130, 131, 135], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135], "numer": [0, 2, 7, 10, 11, 13, 18, 19, 20, 21, 22, 23, 33, 35, 36, 41, 50, 51, 55, 74, 75, 84, 86, 89, 107, 113, 124, 127], "vector": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 33, 37, 41, 42, 45, 46, 47, 49, 50, 51, 65, 67, 71, 72, 75, 77, 80, 81, 82, 83, 93, 94, 95, 99, 102, 104, 105, 110, 111, 115, 117, 119, 121, 123, 124, 125, 126, 129, 131, 135], "video": [0, 1, 2, 5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 43, 95, 104, 105, 117, 129, 131], "http": [0, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24], "youtu": [0, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24], "w5lvimfvi2m": [0, 23], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 33, 35, 37, 41, 46, 47, 48, 65, 68, 70, 75, 77, 81, 83, 87, 88, 95, 100, 101, 104, 106, 113, 115, 133, 135], "abrudz": [0, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 112], "apl_quest": [0, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24], "In": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135], "todai": [0, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 63, 65, 66, 72, 119], "": [0, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134], "quest": [0, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 66, 68, 119], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135], "task": [0, 1, 2, 3, 4, 10, 11, 18, 19, 21, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 43, 45, 47, 49, 60, 67, 72, 74, 78, 81, 82, 90, 104, 111, 112, 117, 123], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135], "i": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134], "seven": [0, 1, 23, 24, 78], "apl": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 35, 53, 56, 57, 58, 60, 65, 66, 68, 69, 71, 74, 75, 77, 78, 80, 81, 82, 83, 85, 88, 89, 92, 96, 99, 100, 101, 103, 106, 107, 108, 111, 113, 116, 119, 121, 125, 127, 128, 130], "solv": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 63, 64, 76, 82, 85, 87, 90, 91, 98, 106, 109, 112, 118, 120, 126, 132, 133, 134], "competit": [0, 1, 2, 4, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 63, 82, 95], "first": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 36, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 77, 78, 80, 81, 84, 85, 86, 90, 91, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 108, 110, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 128, 129, 131, 135], "let": [0, 1, 2, 3, 5, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 105, 106, 108, 110, 113, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 135], "creat": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 18, 19, 20, 21, 22, 23, 24, 27, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 50, 52, 53, 58, 61, 63, 65, 66, 69, 71, 73, 74, 78, 80, 81, 85, 88, 94, 95, 96, 101, 103, 105, 106, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 129, 131, 133, 135], "some": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 33, 37, 40, 41, 42, 43, 45, 48, 49, 50, 51, 55, 56, 57, 59, 61, 65, 70, 73, 77, 78, 79, 80, 81, 85, 88, 93, 94, 101, 105, 113, 117, 122, 135], "ourselv": [0, 20, 23, 24, 65], "what": [0, 1, 6, 7, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 37, 43, 47, 50, 55, 57, 61, 63, 64, 65, 69, 72, 76, 89, 92, 126, 129], "defin": [0, 2, 3, 5, 8, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 35, 36, 38, 39, 40, 42, 43, 46, 48, 49, 50, 51, 52, 56, 60, 61, 62, 63, 65, 67, 70, 72, 73, 74, 77, 81, 82, 84, 88, 90, 97, 100, 102, 103, 105, 107, 110, 111, 112, 115, 116, 119, 121, 122, 123, 124, 125, 126, 127, 135], "isn": [0, 20, 21, 22, 23, 24, 25, 37, 40, 89, 100, 102], "t": [0, 1, 5, 6, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 37, 40, 41, 42, 44, 45, 46, 49, 50, 54, 56, 57, 58, 59, 60, 64, 65, 66, 69, 70, 73, 76, 78, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 100, 102, 105, 109, 110, 112, 114, 116, 117, 120, 124, 129, 132, 133, 134], "an": [0, 1, 2, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 131, 133], "There": [0, 1, 2, 5, 7, 11, 13, 18, 19, 21, 22, 23, 24, 38, 40, 41, 47, 50, 51, 53, 55, 67, 74, 78, 83, 95, 102, 115, 130], "variou": [0, 2, 3, 4, 5, 8, 10, 11, 21, 23, 24, 26, 27, 29, 32, 33, 37, 38, 42, 43, 52, 56, 60, 65, 68, 71, 74, 85, 88, 90, 92, 94, 95, 97, 99, 105, 108, 110, 113, 114, 118, 123, 126, 135], "wai": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 39, 42, 44, 46, 48, 50, 51, 53, 54, 61, 62, 63, 64, 66, 67, 71, 75, 76, 78, 79, 81, 83, 84, 85, 87, 91, 94, 95, 98, 99, 100, 102, 103, 104, 109, 113, 114, 115, 116, 119, 120, 123, 125, 126, 132, 133, 134, 135], "veri": [0, 3, 11, 18, 19, 20, 21, 22, 23, 25, 45, 50, 53, 55, 63, 88, 113, 129], "simpl": [0, 1, 3, 5, 8, 20, 21, 22, 23, 24, 25, 27, 31, 37, 39, 40, 42, 45, 47, 50, 53, 55, 56, 57, 60, 62, 63, 69, 70, 72, 80, 86, 90, 92, 94, 96, 105, 110, 115, 118, 123, 130, 133], "effect": [0, 3, 4, 7, 13, 24, 26, 27, 28, 31, 37, 39, 40, 43, 45, 46, 47, 50, 52, 55, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 72, 74, 79, 80, 81, 83, 84, 86, 89, 91, 92, 93, 94, 95, 96, 97, 100, 102, 108, 113, 115, 116, 121, 123, 124, 130, 131, 135], "method": [0, 2, 4, 5, 6, 7, 8, 13, 15, 16, 17, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 43, 52, 53, 56, 58, 60, 62, 67, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 91, 92, 94, 97, 99, 103, 104, 105, 106, 108, 110, 111, 112, 113, 116, 118, 119, 123, 125, 126, 128, 131], "compar": [0, 3, 5, 6, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 45, 53, 55, 56, 70, 73, 79, 81, 83, 91, 92, 96, 97, 104, 105, 112, 114, 117, 118, 123, 124, 129, 131, 135], "happen": [0, 11, 18, 19, 20, 21, 23, 50, 55, 92, 135], "ani": [0, 1, 2, 5, 7, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 32, 34, 36, 41, 44, 46, 48, 50, 52, 54, 55, 58, 59, 60, 64, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 89, 90, 92, 94, 96, 98, 105, 108, 109, 117, 120, 121, 122, 124, 126, 129, 132, 134], "remain": [0, 1, 5, 30, 36, 39, 45, 51, 67, 69, 72, 86, 90, 92, 100, 105, 111, 113, 115, 123, 125, 129], "unchang": [0, 39, 55, 59, 72, 105, 111, 113], "when": [0, 2, 4, 5, 6, 7, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 35, 37, 40, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 65, 67, 69, 70, 71, 72, 74, 77, 78, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 104, 105, 106, 107, 110, 112, 113, 114, 115, 121, 122, 127, 129, 135], "while": [0, 1, 2, 4, 5, 6, 8, 15, 16, 17, 23, 24, 25, 26, 27, 29, 30, 31, 33, 35, 37, 38, 39, 41, 42, 45, 48, 53, 55, 56, 57, 59, 60, 61, 62, 63, 67, 68, 70, 73, 74, 75, 77, 78, 79, 81, 83, 84, 88, 89, 91, 92, 94, 95, 97, 100, 101, 102, 103, 105, 110, 112, 113, 114, 115, 117, 118, 119, 123, 126, 129, 130, 131], "chang": [0, 5, 7, 11, 18, 19, 20, 21, 22, 23, 28, 39, 43, 47, 55, 65, 71, 72, 92, 94, 125, 129], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135], "find": [0, 2, 3, 4, 5, 6, 7, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 32, 35, 37, 40, 42, 43, 47, 49, 50, 60, 61, 66, 71, 74, 81, 82, 84, 86, 88, 91, 99, 101, 102, 104, 108, 110, 111, 112, 114, 117, 121, 122, 123, 124, 125, 128, 131, 135], "valu": [0, 2, 7, 11, 13, 18, 19, 21, 22, 23, 24, 28, 29, 31, 33, 36, 41, 46, 48, 50, 51, 53, 55, 56, 62, 63, 68, 69, 72, 75, 77, 80, 82, 83, 88, 89, 91, 92, 93, 95, 97, 99, 103, 104, 107, 108, 111, 113, 114, 116, 118, 121, 122, 124, 125, 128, 131, 132, 135], "our": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], "floor": [0, 23, 24, 69, 81], "function": [0, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 39, 40, 46, 50, 62, 65, 68, 69, 72, 73, 77, 79, 81, 83, 89, 92, 93, 94, 95, 97, 99, 100, 101, 103, 105, 107, 110, 115, 117, 121, 122, 123, 124, 127, 129, 130, 131], "allow": [0, 1, 5, 6, 7, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 37, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 55, 56, 58, 59, 60, 61, 65, 67, 68, 70, 71, 72, 74, 75, 77, 80, 81, 82, 86, 88, 90, 92, 93, 94, 96, 100, 101, 102, 104, 111, 112, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135], "u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "filter": [0, 20, 21, 23, 24, 29, 32, 36, 45, 48, 53, 55, 60, 68, 124], "here": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 32, 34, 35, 38, 40, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 125, 127, 128, 129, 130, 131, 132, 134, 135], "how": [0, 3, 5, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 34, 35, 36, 37, 43, 45, 46, 49, 50, 51, 53, 55, 56, 57, 59, 60, 62, 63, 65, 66, 67, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "implement": [0, 8, 20, 24, 30, 35, 39, 40, 42, 51, 59, 62, 70, 75, 77, 89, 95, 102, 117], "call": [0, 1, 5, 6, 11, 15, 16, 17, 18, 19, 20, 22, 23, 24, 30, 37, 40, 42, 45, 47, 48, 49, 50, 52, 53, 55, 56, 57, 66, 79, 84, 86, 96, 105, 111, 112, 115, 117, 129], "v": [0, 8, 22, 23, 26, 32, 42, 43, 48, 131], "3": [0, 1, 2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 49, 50, 52, 54, 56, 62, 63, 64, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 106, 108, 109, 110, 111, 113, 115, 116, 118, 120, 122, 124, 127, 128, 129, 132], "1": [0, 1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "4": [0, 1, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 34, 35, 36, 37, 38, 41, 44, 45, 47, 49, 50, 52, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 107, 109, 110, 113, 115, 116, 117, 118, 120, 121, 124, 127, 128, 131, 132], "5": [0, 1, 2, 4, 6, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 28, 30, 33, 34, 37, 38, 41, 43, 44, 45, 47, 49, 50, 51, 52, 54, 59, 62, 63, 64, 68, 69, 70, 71, 72, 74, 76, 80, 81, 82, 83, 85, 86, 87, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 114, 116, 118, 120, 122, 124, 125, 127, 128, 131, 132], "92": [0, 23, 103], "6": [0, 1, 6, 8, 12, 14, 15, 16, 21, 22, 23, 25, 31, 37, 40, 41, 43, 44, 45, 49, 50, 52, 54, 59, 61, 63, 64, 70, 71, 72, 75, 76, 78, 81, 83, 86, 87, 91, 94, 95, 98, 100, 103, 106, 107, 109, 110, 116, 118, 120, 124, 127, 128, 129, 131, 132], "test": [0, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 50, 54, 56, 57, 58, 59, 60, 62, 63, 64, 67, 72, 76, 79, 80, 82, 84, 87, 90, 97, 98, 103, 104, 109, 111, 112, 113, 114, 120, 123, 129, 132, 133, 134], "against": [0, 20, 21, 23, 26, 42, 53, 56, 60, 68, 74, 102, 104, 105, 113, 118, 135], "version": [0, 6, 10, 14, 15, 16, 20, 21, 23, 24, 25, 26, 30, 37, 38, 42, 66, 100, 119, 121, 132], "same": [0, 1, 2, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 33, 35, 41, 42, 46, 49, 50, 52, 56, 58, 59, 62, 66, 67, 69, 70, 72, 73, 76, 78, 80, 84, 85, 86, 92, 95, 97, 100, 101, 103, 111, 114, 119, 121, 122, 124, 126, 127, 128], "int": [0, 23], "differ": [0, 3, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 48, 50, 51, 53, 54, 59, 60, 64, 65, 66, 67, 70, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 87, 94, 95, 98, 99, 100, 102, 103, 105, 106, 109, 113, 114, 115, 117, 118, 120, 122, 123, 125, 126, 128, 130, 132, 134, 135], "down": [0, 1, 6, 11, 15, 16, 18, 19, 20, 21, 23, 24, 27, 28, 51, 53, 59, 69, 82, 83, 88, 89, 95, 100, 103, 110, 116, 122], "nearest": [0, 23, 62, 69], "real": [0, 13, 20, 21, 23, 24, 55, 78, 97], "Not": [0, 6, 10, 11, 14, 15, 16, 18, 19, 22, 23, 93, 96], "equal": [0, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 28, 33, 36, 40, 41, 45, 48, 51, 52, 53, 56, 58, 60, 68, 79, 82, 88, 89, 91, 93, 97, 100, 102, 106, 107, 111, 129], "whether": [0, 3, 5, 7, 11, 18, 19, 20, 21, 22, 23, 24, 29, 36, 40, 41, 42, 51, 52, 60, 66, 67, 68, 73, 74, 78, 83, 85, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 115, 124, 128, 130, 133], "argument": [0, 1, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 61, 62, 63, 65, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 89, 90, 91, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 117, 121, 122, 126, 127, 129, 130], "unequ": [0, 23, 91], "return": [0, 2, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 30, 32, 33, 38, 40, 48, 49, 50, 51, 52, 53, 55, 57, 60, 65, 67, 68, 69, 70, 75, 78, 81, 83, 85, 92, 93, 95, 97, 99, 102, 104, 112, 114, 115, 116, 122, 123, 124, 126, 128, 130], "boolean": [0, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 32, 36, 41, 46, 52, 70, 73, 82, 85, 91, 93, 99, 104, 115, 118, 126], "arrai": [0, 1, 3, 6, 7, 8, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 27, 34, 35, 39, 43, 44, 45, 48, 49, 51, 52, 54, 56, 64, 65, 68, 70, 71, 72, 76, 77, 81, 82, 84, 87, 90, 92, 98, 99, 100, 103, 105, 107, 109, 110, 111, 113, 114, 117, 118, 119, 120, 126, 129, 132, 133, 134], "where": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 56, 58, 60, 61, 63, 65, 67, 68, 72, 77, 82, 83, 88, 89, 90, 91, 92, 93, 97, 99, 100, 102, 103, 104, 107, 108, 112, 113, 114, 115, 116, 118, 121, 124, 125, 126, 128, 130, 131, 135], "indic": [0, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 35, 36, 38, 39, 40, 41, 43, 45, 46, 49, 50, 52, 53, 55, 56, 57, 58, 60, 63, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 83, 84, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 101, 102, 103, 104, 106, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 128, 131], "compress": [0, 11, 18, 19, 20, 21, 23, 24, 27, 32], "right": [0, 1, 4, 6, 7, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 33, 34, 37, 40, 41, 43, 46, 47, 48, 49, 50, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 72, 73, 77, 78, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 99, 100, 102, 104, 107, 109, 110, 111, 112, 113, 115, 117, 118, 119, 122, 126, 127, 128, 129, 130, 131, 135], "left": [0, 1, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 34, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 77, 78, 81, 82, 84, 86, 87, 89, 90, 91, 92, 93, 95, 98, 99, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135], "commut": [0, 3, 7, 10, 11, 18, 19, 20, 21, 22, 23, 24, 28, 43, 45, 48, 78], "aka": [0, 6, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24], "swap": [0, 7, 8, 10, 11, 13, 18, 19, 20, 21, 22, 23, 24, 45, 46, 48, 62, 78, 119, 123, 125], "put": [0, 1, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 39, 49, 50, 63, 72, 132], "gener": [0, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 31, 32, 33, 41, 42, 43, 45, 58, 60, 69, 70, 71, 73, 74, 75, 80, 81, 82, 83, 85, 89, 94, 96, 97, 100, 105, 112, 113, 115, 119, 123, 125, 129, 131], "step": [0, 1, 6, 7, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 29, 30, 33, 35, 39, 51, 53, 55, 57, 62, 69, 71, 74, 75, 77, 80, 83, 89, 90, 97, 100, 108, 110, 112, 117, 126, 130, 131], "2": [0, 1, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 49, 50, 52, 54, 56, 58, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 89, 91, 92, 93, 94, 96, 97, 98, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 113, 116, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132], "b": [0, 1, 3, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 36, 38, 40, 41, 42, 47, 55, 66, 80, 81, 89, 101, 104, 113, 119], "The": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135], "rightmost": [0, 41, 45, 48, 57, 58, 63, 84, 105], "selfi": [0, 20, 21, 22, 23, 24, 113], "monad": [0, 6, 10, 11, 14, 15, 16, 18, 19, 20, 21, 23, 24, 116, 135], "It": [0, 1, 6, 7, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 28, 31, 34, 35, 42, 47, 50, 52, 53, 60, 68, 70, 74, 75, 86, 88, 91, 96, 97, 98, 105, 111, 124, 132, 133, 135], "make": [0, 1, 7, 8, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 37, 39, 41, 43, 50, 56, 59, 63, 73, 74, 83, 99, 102, 107, 112, 113, 117, 121, 126, 128, 130, 133], "both": [0, 1, 5, 6, 7, 13, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 36, 38, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 56, 61, 62, 66, 67, 68, 69, 70, 74, 77, 80, 85, 86, 88, 91, 92, 93, 95, 97, 99, 100, 101, 103, 105, 107, 108, 110, 111, 113, 114, 118, 119, 121, 122, 124, 126, 127, 130, 131, 133], "side": [0, 1, 20, 21, 22, 23, 24, 28, 61, 62, 71, 72, 80, 82, 83, 84, 92, 93, 94, 95, 106, 107, 109, 110], "For": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 13, 15, 16, 18, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 60, 61, 65, 68, 69, 71, 72, 73, 74, 77, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 108, 110, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 130, 131, 135], "input": [0, 2, 10, 11, 12, 18, 19, 20, 21, 25, 26, 30, 32, 34, 39, 41, 43, 44, 46, 50, 51, 53, 54, 56, 58, 59, 60, 64, 65, 67, 70, 73, 74, 75, 76, 77, 80, 86, 87, 90, 92, 93, 95, 96, 97, 98, 107, 109, 110, 113, 114, 115, 118, 120, 122, 124, 126, 132, 133, 134, 135], "equival": [0, 1, 4, 6, 15, 16, 17, 22, 23, 24, 25, 28, 47, 61, 89], "composit": [0, 23, 32, 37, 82, 135], "appli": [0, 1, 2, 3, 6, 7, 8, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 77, 79, 80, 81, 83, 84, 85, 86, 89, 90, 92, 93, 94, 96, 97, 100, 102, 104, 105, 106, 110, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 128, 129, 130, 135], "Then": [0, 1, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 50, 103, 117], "result": [0, 1, 2, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135], "origin": [0, 1, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 41, 43, 45, 49, 52, 53, 59, 60, 62, 68, 69, 72, 73, 74, 80, 84, 88, 91, 92, 97, 100, 102, 103, 105, 110, 112, 113, 114, 117, 124, 126, 129], "so": [0, 1, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 53, 54, 58, 61, 63, 64, 66, 69, 70, 74, 76, 77, 78, 87, 88, 89, 91, 97, 98, 99, 105, 106, 109, 116, 117, 120, 124, 127, 128, 132, 134], "doe": [0, 5, 7, 11, 13, 14, 18, 19, 20, 22, 23, 24, 30, 33, 35, 40, 42, 45, 48, 55, 56, 58, 61, 62, 70, 74, 79, 80, 81, 84, 89, 92, 100, 102, 113, 115], "deriv": [0, 3, 11, 18, 19, 20, 21, 23, 24, 28, 33, 39, 40, 45, 52, 53, 55, 56, 57, 60, 62, 63, 66, 67, 69, 72, 74, 77, 89, 90, 97, 107, 110, 111, 113, 119, 122, 128, 135], "take": [0, 1, 5, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 35, 39, 40, 41, 45, 46, 48, 49, 50, 51, 55, 56, 57, 58, 60, 62, 65, 66, 69, 72, 73, 75, 77, 78, 80, 82, 85, 86, 88, 90, 92, 94, 97, 99, 100, 101, 102, 104, 105, 106, 108, 111, 112, 113, 115, 116, 121, 126, 127, 129, 135], "singl": [0, 10, 11, 18, 19, 20, 21, 22, 24, 27, 28, 32, 33, 37, 43, 46, 47, 48, 55, 57, 66, 68, 71, 72, 74, 77, 78, 81, 82, 88, 94, 97, 100, 103, 105, 110, 111, 114, 115, 123, 126, 135], "combin": [0, 5, 6, 15, 16, 20, 21, 22, 23, 25, 27, 31, 32, 35, 45, 46, 47, 50, 52, 53, 56, 57, 68, 69, 71, 74, 82, 83, 86, 88, 90, 91, 93, 94, 99, 100, 101, 105, 106, 111, 112, 118, 126, 129], "mask": [0, 6, 7, 10, 13, 14, 15, 16, 18, 19, 20, 21, 23, 27, 36, 41, 46, 48, 52, 58, 78, 82, 83, 85, 101, 113, 115, 117, 123, 125, 126, 129], "identifi": [0, 10, 27, 30, 31, 32, 36, 39, 41, 51, 52, 53, 56, 58, 63, 74, 79, 82, 84, 88, 89, 91, 96, 101, 103, 111, 114, 118, 122, 124, 126, 128, 130], "outermost": 0, "ensur": [0, 2, 4, 7, 11, 13, 23, 25, 27, 28, 29, 31, 32, 33, 36, 37, 38, 47, 50, 51, 52, 56, 57, 58, 62, 65, 66, 68, 70, 72, 73, 74, 75, 77, 81, 82, 84, 85, 86, 92, 94, 95, 96, 97, 101, 102, 106, 108, 111, 112, 113, 114, 115, 116, 119, 124, 126, 128, 129], "creation": [0, 94], "structur": [0, 2, 4, 5, 7, 22, 27, 38, 42, 55, 58, 68, 75, 77, 79, 80, 81, 82, 86, 94, 102, 103, 104, 116, 117, 118, 123, 125, 126, 131, 135], "condit": [0, 4, 5, 20, 22, 30, 33, 38, 41, 45, 51, 55, 70, 95, 96, 101, 113, 124], "one": [0, 1, 2, 3, 4, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 41, 42, 46, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 65, 66, 67, 70, 72, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 88, 89, 90, 92, 94, 95, 97, 99, 100, 101, 102, 103, 105, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 125, 128, 130, 133, 135], "concis": [0, 12, 22, 34, 40, 44, 45, 54, 55, 62, 64, 67, 76, 77, 87, 90, 91, 98, 109, 120, 132, 133, 134, 135], "oper": [0, 4, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 40, 42, 43, 46, 47, 48, 49, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 65, 68, 69, 71, 72, 75, 77, 82, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 105, 106, 108, 110, 111, 115, 118, 119, 122, 123, 130, 133], "see": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 32, 33, 38, 40, 42, 46, 49, 51, 53, 55, 57, 69, 70, 73, 74, 76, 77, 79, 80, 88, 89, 92, 93, 98, 100, 103, 104, 105, 113, 114, 119, 123, 129, 130, 135], "bind": [0, 6, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 24, 37, 57, 66, 69, 86, 88, 99, 102, 127], "more": [0, 2, 4, 7, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 36, 37, 40, 42, 43, 47, 50, 52, 53, 59, 60, 62, 69, 70, 71, 72, 73, 75, 77, 81, 86, 88, 89, 95, 102, 104, 112, 113, 114, 117, 121, 124, 128, 129], "inform": [0, 12, 34, 35, 39, 44, 49, 54, 64, 75, 76, 87, 96, 98, 109, 117, 120, 132, 134], "note": [0, 6, 7, 14, 15, 16, 17, 23, 24, 25, 31, 33, 42, 43, 50, 51, 53, 56, 59, 60, 61, 63, 74, 75, 78, 86, 91, 94, 97, 111, 113, 118, 122, 123, 125], "anoth": [0, 3, 4, 7, 8, 11, 13, 18, 19, 21, 22, 23, 24, 25, 28, 29, 33, 37, 39, 45, 47, 50, 56, 58, 62, 63, 65, 69, 75, 80, 83, 86, 88, 91, 97, 100, 101, 102, 104, 112, 115, 117, 118, 119, 125, 127, 128], "intern": [0, 11, 18, 19, 23, 27, 32, 74], "By": [0, 2, 3, 4, 5, 7, 11, 21, 25, 26, 27, 29, 30, 32, 33, 35, 36, 41, 42, 43, 46, 47, 52, 53, 55, 56, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 100, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 128, 130, 131], "check": [0, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 20, 21, 22, 23, 27, 28, 29, 32, 33, 36, 39, 40, 41, 42, 43, 45, 46, 48, 52, 53, 58, 60, 65, 68, 70, 73, 74, 80, 96, 97, 101, 102, 103, 104, 106, 111, 115, 121, 124, 126, 131, 135], "actual": [0, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 40, 42, 49, 50, 53, 68, 110, 127], "type": [0, 6, 11, 15, 16, 17, 18, 19, 20, 23, 24, 42, 46, 47, 52, 55, 56, 60, 84, 105, 111, 118], "e": [0, 1, 10, 11, 18, 19, 21, 22, 23, 24, 26, 31, 41, 42, 43, 46, 51, 53, 55, 67, 68, 70, 72, 73, 79, 93, 105, 106, 116, 123, 125, 130, 133, 135], "g": [0, 6, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 30, 31, 32, 36, 39, 43, 46, 51, 55, 56, 57, 59, 65, 67, 68, 70, 80, 81, 86, 99, 103, 111, 112, 113, 114, 115, 116, 117, 118, 119, 130, 135], "64": [0, 6, 14, 15, 16, 22, 23, 135], "bit": [0, 6, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 50, 53, 72, 74, 75, 89, 96, 98, 99, 102, 106, 118, 128, 129, 135], "binari": [0, 21, 23, 88, 95, 113, 124, 128, 135], "other": [0, 1, 5, 7, 10, 11, 13, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 38, 42, 43, 46, 48, 50, 51, 53, 55, 56, 63, 66, 67, 69, 71, 73, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 104, 106, 107, 110, 115, 117, 118, 135], "work": [0, 1, 2, 3, 5, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 37, 40, 41, 43, 47, 50, 53, 55, 56, 63, 65, 69, 70, 73, 78, 79, 80, 81, 86, 89, 90, 94, 95, 102, 112, 114, 117, 122, 123, 128, 129, 135], "well": [0, 1, 2, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 43, 46, 50, 59, 63, 92, 103, 114, 115, 122, 123, 126, 133], "most": [0, 4, 11, 12, 18, 19, 22, 23, 24, 27, 34, 39, 41, 43, 44, 52, 53, 54, 55, 64, 66, 76, 79, 87, 95, 98, 99, 105, 109, 118, 120, 132, 133, 134], "case": [0, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 28, 29, 32, 41, 44, 48, 50, 51, 55, 56, 57, 60, 62, 65, 66, 67, 69, 70, 72, 73, 79, 83, 91, 93, 95, 97, 103, 105, 111, 112, 113, 123, 127, 128, 135], "fail": [0, 4, 6, 11, 23, 40, 41, 79, 93, 94], "larg": [0, 4, 6, 11, 15, 16, 18, 19, 20, 21, 22, 23, 29, 31, 42, 62, 63, 70, 71, 82, 88, 113, 116, 124], "x": [0, 8, 10, 11, 18, 19, 21, 22, 23, 24, 26, 36, 38, 41, 42, 43, 67, 68, 77, 85, 122, 135], "1e400": [0, 23], "d": [0, 1, 20, 21, 22, 23, 24, 26, 27, 29, 32, 40, 42, 43, 45, 46, 49, 51, 52, 75, 81, 86, 88, 94, 102, 105, 107, 115, 117, 119, 135], "645": [0, 23], "dr": [0, 23], "per": [0, 11, 18, 19, 23, 47, 50, 51, 68, 82, 125, 131], "element": [0, 1, 2, 3, 4, 7, 10, 11, 13, 18, 19, 20, 21, 22, 23, 24, 27, 28, 33, 36, 37, 39, 40, 41, 43, 45, 46, 48, 50, 55, 56, 57, 59, 63, 66, 68, 71, 72, 73, 78, 80, 81, 82, 83, 84, 90, 92, 93, 95, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 117, 119, 121, 126, 130], "mean": [0, 5, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 39, 43, 44, 45, 46, 48, 49, 50, 53, 54, 59, 62, 82, 84, 86, 88, 89, 92, 93, 97, 101, 106, 119, 121, 122, 130], "convert": [0, 5, 11, 18, 19, 20, 22, 23, 24, 26, 27, 31, 40, 59, 63, 67, 69, 75, 77, 81, 86, 88, 89, 90, 94, 105, 113, 122, 126], "its": [0, 1, 2, 5, 7, 20, 21, 22, 23, 24, 26, 27, 28, 30, 37, 45, 46, 47, 50, 52, 55, 56, 58, 59, 61, 67, 69, 71, 72, 74, 75, 77, 78, 79, 84, 86, 88, 89, 94, 96, 97, 102, 107, 113, 117, 119, 121, 125, 126, 133, 135], "y": [0, 5, 8, 11, 18, 19, 20, 21, 23, 24, 38, 42, 43, 67, 68, 74, 77, 102, 115, 119, 135], "accord": [0, 22, 23, 28, 65, 78, 83, 126], "specif": [0, 2, 22, 23, 25, 27, 30, 32, 40, 42, 46, 49, 50, 51, 55, 56, 60, 62, 63, 65, 66, 75, 78, 79, 80, 83, 85, 86, 88, 92, 94, 96, 97, 100, 101, 102, 105, 110, 122, 123, 126, 129, 133], "each": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 123, 125, 129, 131, 132, 133, 134, 135], "omega": [0, 1, 7, 11, 13, 18, 19, 20, 21, 22, 23, 24, 40, 45, 46, 47, 50, 56, 57, 61, 63, 66, 72, 80, 84, 90, 100, 101, 103, 105, 108, 111, 113, 119, 126, 127], "1287": [0, 23], "128": [0, 23, 88], "member": [0, 20, 22, 23, 29, 40, 42, 46, 57], "representiaton": [0, 23], "human": [0, 23, 35, 67, 75], "readabl": [0, 23, 25, 40, 48, 67, 74, 75, 102, 121], "format": [0, 5, 20, 23, 35, 46, 47, 55, 56, 65, 67, 69, 71, 75, 80, 81, 86, 88, 96, 97, 102, 108, 116, 117, 122, 126], "f": [0, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 35, 36, 37, 39, 40, 42, 43, 56, 57, 59, 65, 66, 67, 68, 70, 73, 74, 77, 79, 80, 81, 82, 86, 88, 90, 92, 93, 95, 97, 103, 110, 111, 113, 114, 115, 116, 117, 118, 121, 130, 131, 135], "charact": [0, 5, 10, 11, 18, 19, 20, 21, 23, 24, 25, 27, 29, 32, 35, 39, 42, 43, 46, 50, 55, 60, 63, 65, 73, 79, 81, 82, 86, 88, 89, 94, 98, 102, 105, 111, 118, 119, 126, 129], "compos": [0, 11, 18, 19, 23, 106], "membership": [0, 20, 22, 23, 27, 29, 40, 42, 57, 83, 99, 126], "without": [0, 5, 6, 7, 8, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 33, 39, 40, 41, 43, 45, 47, 48, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 66, 70, 71, 72, 73, 74, 75, 79, 80, 82, 86, 91, 92, 94, 95, 97, 100, 113, 114, 115, 118, 121, 123, 124, 125, 128], "entir": [0, 1, 2, 3, 5, 6, 7, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 33, 35, 38, 40, 45, 46, 50, 55, 67, 69, 70, 73, 96, 104, 111, 112, 123, 125, 130], "improv": [0, 11, 18, 19, 20, 27, 31, 35, 37, 74, 80, 105, 121, 123, 124, 125, 126], "increas": [0, 5, 7, 13, 20, 35, 41, 70, 78, 100, 103, 118], "print": [0, 6, 15, 16, 17, 23, 35, 49, 55, 60], "precis": [0, 7, 13, 23, 35, 50, 56], "pp": [0, 23, 35, 42], "34": [0, 23, 67, 71], "signific": [0, 6, 11, 14, 15, 16, 17, 18, 19, 23, 27, 39, 74, 89, 94, 103, 113, 123, 125, 128], "digit": [0, 21, 23, 42, 89, 117, 128], "displai": [0, 23, 65, 103, 104, 118], "output": [0, 2, 4, 7, 11, 12, 13, 23, 34, 35, 39, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 80, 82, 83, 84, 87, 88, 89, 91, 93, 94, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 113, 116, 117, 118, 120, 122, 126, 131, 132, 133, 134], "default": [0, 2, 6, 7, 13, 14, 15, 16, 23, 84], "10": [0, 6, 12, 15, 16, 17, 21, 23, 25, 30, 34, 39, 41, 44, 45, 54, 59, 63, 64, 69, 70, 71, 74, 76, 82, 86, 87, 93, 94, 95, 97, 98, 103, 104, 106, 107, 109, 111, 113, 114, 116, 117, 120, 122, 124, 132, 133, 134], "max": [0, 22, 23, 38], "properti": [0, 1, 3, 7, 13, 24, 26, 29, 42, 48, 53, 68, 70, 82, 95, 124], "h": [0, 1, 6, 10, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 39, 53, 56, 70, 79, 80, 97, 111, 113, 117, 118, 121, 135], "ct": [0, 23], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 101, 102, 103, 104, 106, 108, 111, 113, 115, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 131, 135], "j": [0, 1, 10, 11, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 32, 39, 56], "k": [0, 10, 11, 14, 15, 16, 18, 19, 22, 23, 24, 32, 64, 65, 101, 105], "residu": [0, 7, 13, 21, 23, 24], "modulo": [0, 23, 59], "give": [0, 1, 2, 3, 4, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 35, 37, 41, 43, 45, 46, 47, 50, 53, 56, 58, 61, 62, 63, 65, 66, 69, 70, 72, 79, 80, 82, 83, 85, 86, 88, 92, 94, 96, 97, 99, 100, 103, 104, 105, 107, 110, 111, 112, 113, 116, 118, 119, 127, 129, 130, 131, 135], "remaind": [0, 13, 21, 23, 24, 30, 45, 59, 74, 85, 90, 96, 101, 106], "divis": [0, 6, 13, 14, 15, 16, 17, 21, 23, 74, 96, 99, 127], "between": [0, 1, 6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31, 32, 36, 38, 41, 43, 48, 50, 51, 58, 63, 65, 67, 68, 69, 70, 77, 80, 83, 88, 92, 93, 94, 95, 97, 101, 103, 105, 108, 111, 117, 128, 129, 135], "two": [0, 1, 2, 3, 5, 7, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 31, 33, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 55, 57, 58, 59, 60, 61, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 80, 81, 83, 84, 85, 90, 91, 93, 95, 97, 100, 101, 104, 106, 107, 108, 110, 111, 113, 114, 115, 122, 123, 124, 125, 126, 127, 128, 129, 131, 135], "signum": [0, 21, 23, 24, 67, 97, 128], "three": [0, 4, 8, 11, 18, 19, 20, 21, 22, 23, 24, 28, 41, 47, 49, 50, 58, 67, 70, 71, 72, 73, 80, 81, 84, 85, 89, 90, 96, 103, 108, 114, 117, 119, 122, 123, 125, 128, 129, 131], "possibl": [0, 12, 21, 22, 23, 34, 36, 44, 47, 53, 54, 55, 64, 71, 72, 76, 83, 86, 87, 93, 98, 105, 106, 109, 110, 117, 120, 132, 134], "posit": [0, 3, 21, 23, 24, 27, 30, 38, 39, 41, 46, 48, 53, 58, 59, 66, 72, 74, 79, 81, 83, 89, 91, 92, 95, 97, 101, 102, 111, 113, 118, 121, 123, 124, 126, 128, 130], "neg": [0, 7, 13, 20, 21, 22, 23, 24, 31, 41, 48, 51, 54, 59, 63, 72, 74, 75, 83, 84, 93, 95, 97, 108, 113, 121, 128, 130], "zero": [0, 1, 2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 35, 36, 41, 48, 50, 55, 60, 62, 69, 70, 72, 84, 85, 89, 90, 91, 96, 97, 102, 104, 106, 108, 113, 118, 128], "alwai": [0, 7, 11, 20, 21, 23, 24, 39, 48, 51, 55, 70, 79, 80, 84, 100, 113, 119, 124, 135], "If": [0, 1, 4, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 33, 38, 39, 41, 42, 46, 47, 50, 51, 52, 53, 55, 57, 59, 63, 65, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 81, 84, 85, 89, 90, 91, 92, 95, 96, 97, 100, 102, 104, 105, 106, 108, 110, 111, 113, 114, 117, 118, 124, 128, 129, 131, 133, 135], "divd": [0, 6, 15, 16, 23], "base": [0, 2, 3, 4, 5, 10, 11, 13, 20, 21, 23, 24, 26, 36, 38, 39, 41, 42, 45, 46, 51, 60, 62, 68, 71, 72, 74, 75, 77, 78, 79, 81, 83, 85, 88, 90, 91, 93, 97, 102, 104, 106, 108, 111, 114, 115, 118, 122, 124, 125, 126, 128, 129, 130, 131], "have": [0, 1, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 34, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 132, 134, 135], "orgin": [0, 23], "determin": [0, 2, 7, 13, 20, 21, 23, 27, 28, 29, 30, 31, 35, 36, 38, 40, 41, 42, 49, 52, 53, 56, 58, 61, 62, 66, 67, 68, 70, 72, 73, 74, 75, 79, 81, 82, 83, 85, 86, 89, 90, 92, 93, 95, 96, 99, 100, 101, 103, 106, 107, 108, 110, 111, 113, 114, 117, 125, 127, 128, 130], "judg": [0, 23], "exact": [0, 23, 66, 79], "1e": [0, 23, 35, 70, 103], "13": [0, 4, 23, 38, 45, 59, 71, 94], "15": [0, 21, 23, 45, 59, 61, 65, 70, 71, 94, 100, 108, 110, 116], "14": [0, 23, 42, 45, 50, 59, 71, 77, 94, 122], "w": [0, 21, 23, 27, 39, 82], "all": [0, 1, 2, 3, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 35, 36, 39, 41, 42, 48, 49, 50, 52, 53, 55, 57, 58, 59, 60, 63, 66, 67, 71, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 91, 93, 94, 95, 97, 100, 102, 106, 110, 112, 114, 115, 118, 119, 123, 125, 129, 131, 133, 135], "repres": [0, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 27, 28, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 77, 78, 83, 84, 88, 89, 93, 96, 97, 99, 103, 105, 107, 108, 110, 111, 113, 114, 116, 119, 121, 125, 126, 127, 128, 130, 131], "To": [0, 2, 4, 5, 8, 11, 12, 18, 19, 20, 22, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134], "address": [0, 2, 30, 40, 42, 58, 60, 65, 70, 71, 79, 85, 112, 123, 125], "issu": [0, 2, 7, 13, 27, 42, 46, 50, 53, 58, 65, 71, 74, 83, 85, 94, 112, 113, 129, 130], "includ": [0, 2, 5, 10, 11, 12, 22, 23, 29, 34, 35, 36, 43, 44, 46, 49, 54, 55, 57, 58, 64, 73, 74, 76, 78, 80, 81, 83, 85, 87, 98, 104, 108, 109, 110, 112, 115, 120, 125, 126, 128, 129, 132, 134], "temporarili": [0, 23, 129], "set": [0, 3, 5, 7, 12, 13, 20, 21, 23, 26, 28, 29, 31, 34, 40, 42, 44, 45, 46, 53, 54, 56, 57, 64, 65, 70, 71, 74, 75, 76, 80, 84, 86, 87, 88, 93, 94, 96, 98, 109, 112, 114, 117, 120, 126, 128, 129, 132, 133, 134, 135], "classifi": 0, "smallest": [0, 2, 22, 23, 106, 115, 118], "unit": [0, 21, 23, 28, 69, 97], "mani": [0, 1, 6, 7, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 35, 41, 45, 49, 50, 51, 53, 63, 68, 70, 71, 72, 81, 82, 85, 90, 95, 111, 117, 121, 122, 129, 131], "ones": [0, 1, 5, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 41, 42, 49, 52, 53, 56, 68, 70, 72, 89, 91, 95, 97, 104, 112, 113, 119, 125, 129, 130], "exactli": [0, 21, 22, 23, 52, 74, 102, 119], "doesn": [0, 11, 18, 19, 20, 21, 22, 23, 24, 25, 28, 45, 49, 50, 58, 59, 60, 83, 94], "care": [0, 23, 41, 53, 66, 77, 105, 114, 128], "about": [0, 11, 18, 19, 20, 21, 22, 23, 37, 41, 46, 53, 61, 66, 74, 81, 101, 123, 125, 128], "fun": [0, 12, 20, 21, 22, 24, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "unconvent": [0, 5], "replic": [0, 1, 21, 22, 23, 24, 52, 106, 118, 126], "error": [0, 2, 5, 20, 22, 23, 47, 50, 68, 71, 79, 86, 114, 115, 119], "handl": [0, 5, 10, 11, 27, 31, 32, 40, 43, 46, 50, 55, 70, 74, 75, 80, 88, 89, 95, 105, 106, 110, 121, 123, 126], "l": [0, 10, 11, 18, 19, 23, 24, 29, 30, 32, 42, 43, 53, 60, 78, 79, 83, 115, 119], "want": [0, 1, 2, 3, 7, 11, 13, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 41, 42, 45, 46, 48, 49, 50, 52, 53, 55, 58, 59, 61, 63, 65, 69, 70, 72, 74, 77, 82, 85, 90, 91, 95, 102, 104, 105, 106, 107, 110, 111, 115, 119, 121, 129, 130], "otherwis": [0, 20, 21, 22, 23, 24, 30, 33, 50, 68, 99, 100], "empti": [0, 4, 10, 11, 18, 19, 20, 21, 22, 23, 24, 33, 46, 49, 50, 58, 65, 70, 74, 104], "attempt": [0, 7, 11, 13, 18, 19, 25, 40, 46, 47, 50, 58, 65, 68, 71, 72, 129], "factor": [0, 23, 63, 99, 106, 107], "catch": [0, 4, 20, 22, 46, 110], "interpret": [0, 11, 18, 19, 20, 33, 37, 42, 47, 67, 89, 90, 94, 124], "desir": [0, 7, 13, 21, 31, 46, 53, 65, 72, 82, 84, 85, 91, 94, 95, 102, 104, 112, 115, 116, 119, 122, 125, 126, 130], "copi": [0, 6, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 95, 110, 113, 117], "given": [0, 8, 10, 11, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 41, 42, 47, 51, 56, 58, 60, 61, 63, 67, 68, 70, 72, 74, 75, 77, 79, 81, 83, 84, 92, 93, 97, 99, 100, 103, 104, 107, 112, 113, 114, 115, 116, 118, 122, 124, 135], "time": [0, 1, 3, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 32, 33, 36, 39, 42, 46, 51, 52, 53, 58, 61, 66, 67, 70, 80, 89, 90, 93, 95, 96, 97, 99, 100, 106, 113, 114, 117, 118, 122, 123, 124, 125, 135], "zild": [0, 23], "guard": [0, 5, 20, 22, 23, 68], "express": [0, 1, 3, 4, 5, 7, 8, 10, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 42, 43, 45, 49, 50, 55, 56, 57, 58, 61, 62, 63, 66, 69, 70, 74, 75, 78, 79, 82, 90, 92, 96, 99, 102, 104, 107, 110, 113, 115, 119, 124, 126, 127, 128, 133, 135], "evalu": [0, 5, 7, 10, 11, 14, 18, 19, 20, 22, 23, 32, 33, 35, 39, 40, 52, 55, 67, 70, 79, 80, 83, 88, 89, 93, 96, 101, 110, 111, 113, 124, 131, 135], "appear": [0, 22, 23, 53, 58, 60, 65, 70, 81, 85, 86, 91, 94, 97, 112, 119, 135], "scalar": [0, 6, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 41, 49, 50, 66, 67, 105, 112, 114, 115, 116, 119], "requir": [0, 2, 6, 11, 15, 16, 17, 18, 19, 23, 26, 40, 46, 50, 51, 62, 63, 70, 72, 74, 80, 81, 82, 88, 93, 94, 95, 102, 110, 115, 122, 125, 129], "either": [0, 7, 11, 13, 18, 19, 20, 21, 22, 23, 24, 30, 35, 42, 45, 50, 51, 55, 59, 63, 83, 94, 95, 99, 100, 103, 119, 128, 135], "retain": [0, 20, 23, 72, 119, 124, 135], "discard": [0, 23, 27, 52, 68, 124, 129], "dyadic": [0, 3, 6, 14, 15, 16, 21, 23, 24, 37, 44, 90], "thu": [0, 23, 29, 33, 35, 42, 45, 50, 55, 57, 59, 61, 66, 67, 70, 72, 75, 78, 84, 89, 90, 93, 94, 96, 107, 108, 110, 111, 113, 115, 119, 126, 127, 128, 129], "dydact": [0, 23], "column": [0, 2, 21, 22, 23, 24, 40, 41, 43, 47, 50, 53, 56, 62, 74, 81, 82, 83, 84, 98, 100, 116, 117, 123, 125, 126, 131], "width": [0, 23, 41, 82, 88, 93, 105, 118], "place": [0, 11, 18, 19, 22, 23, 24, 25, 46, 48, 52, 61, 72, 74, 78, 101, 114, 116, 121, 123, 125, 135], "operand": [0, 1, 20, 21, 22, 23, 24, 27, 37, 60, 135], "turn": [0, 20, 22, 23, 30, 48, 80], "list": [0, 1, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 36, 39, 43, 45, 48, 50, 52, 53, 62, 71, 72, 74, 75, 77, 79, 81, 82, 83, 84, 86, 94, 97, 101, 104, 105, 106, 112, 117, 126, 131], "mix": [0, 1, 20, 21, 23, 24, 25, 71, 77, 80, 105, 108, 126], "program": [0, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 30, 34, 44, 50, 54, 56, 57, 59, 64, 67, 71, 76, 77, 84, 85, 87, 88, 89, 91, 94, 96, 97, 98, 102, 103, 109, 114, 118, 120, 125, 126, 130, 132, 133, 134], "hook": [0, 23], "begin": [0, 5, 7, 11, 12, 13, 18, 19, 20, 21, 23, 24, 27, 29, 32, 34, 37, 40, 41, 44, 46, 52, 54, 58, 59, 64, 67, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 94, 95, 98, 103, 105, 109, 113, 115, 120, 121, 124, 125, 127, 129, 130, 132, 134], "parenthesi": [0, 5, 14, 20, 22, 23, 43], "own": [0, 23, 27, 37, 71, 78, 102], "preprocess": [0, 20, 23, 28, 37, 40, 42, 67, 92, 108, 115], "jot": [0, 6, 14, 15, 16, 23, 135], "initi": [0, 3, 4, 21, 23, 26, 27, 29, 30, 36, 38, 46, 58, 60, 65, 67, 70, 72, 75, 81, 82, 84, 88, 90, 103, 105, 108, 113, 122, 125], "r": [0, 5, 8, 20, 23, 27, 30, 32, 33, 42, 43, 55, 59, 60, 61, 74, 75, 101, 107, 117, 135], "hello": [0, 5, 8, 11, 20, 23, 29, 31, 32, 46, 53, 65, 79, 90, 121], "welcom": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 54, 64, 76, 87, 98, 109, 120, 129, 132, 134], "wiki": [0, 3, 4, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 32, 33, 36, 38, 39, 42, 46, 47, 51, 53, 129], "detail": [0, 3, 4, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 31, 32, 34, 35, 36, 39, 42, 44, 46, 47, 48, 51, 53, 54, 64, 76, 87, 98, 104, 109, 120, 129, 132, 134], "interest": [0, 3, 4, 5, 10, 11, 18, 19, 21, 22, 23, 26, 29, 30, 31, 45, 50, 60, 61, 71, 79, 85, 86, 89, 93, 101, 106, 108, 122, 123, 128, 133, 135], "thing": [0, 1, 6, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 50, 63, 74, 102, 135], "constitut": [0, 23, 68], "becaus": [0, 1, 2, 7, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 30, 33, 40, 41, 43, 46, 50, 52, 55, 63, 70, 71, 73, 82, 89, 99, 101, 102, 106, 112, 118, 129], "realli": [0, 1, 11, 18, 19, 20, 21, 22, 23, 24, 25, 49, 63], "good": [0, 8, 11, 12, 18, 19, 21, 22, 23, 34, 44, 54, 60, 64, 76, 87, 98, 109, 120, 132, 134], "distinct": [0, 23, 51, 70, 85, 90, 97, 112, 121, 127], "ll": [0, 2, 3, 5, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 31, 33, 38, 52, 53, 59, 65, 67, 68, 69, 78, 86, 88, 89, 91, 92, 94, 95, 96, 104, 105, 113, 117, 118, 121, 124, 127], "do": [0, 1, 5, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 33, 34, 37, 38, 39, 42, 44, 46, 49, 50, 51, 53, 54, 58, 63, 64, 65, 70, 74, 76, 79, 87, 91, 94, 96, 97, 98, 106, 107, 109, 111, 120, 124, 126, 128, 129, 130, 132, 134], "best": [0, 3, 6, 11, 15, 16, 18, 19, 21, 23, 33, 35, 94, 117, 125], "would": [0, 7, 8, 13, 20, 21, 22, 23, 24, 25, 37, 38, 45, 46, 47, 49, 50, 51, 52, 57, 59, 60, 62, 63, 69, 70, 71, 77, 81, 84, 88, 89, 91, 95, 99, 102, 104, 105, 106, 108, 110, 114, 115, 118, 119, 124, 126, 129], "consid": [0, 2, 4, 6, 15, 16, 23, 25, 27, 29, 31, 42, 45, 51, 55, 58, 61, 67, 69, 70, 77, 78, 79, 83, 84, 86, 88, 89, 91, 92, 93, 97, 100, 103, 106, 110, 111, 113, 115, 119, 122, 123, 125, 127, 128, 130], "correct": [0, 6, 7, 8, 13, 15, 16, 17, 22, 23, 28, 47, 51, 52, 58, 65, 72, 76, 86, 89, 90, 111, 112, 116, 118, 123, 126, 129], "off": [0, 6, 8, 15, 16, 17, 20, 21, 22, 23, 24, 27, 39, 63, 64, 72, 86, 129], "probabl": [0, 20, 21, 22, 23, 50, 71], "were": [0, 7, 10, 11, 13, 18, 19, 22, 23, 27, 43, 47, 60, 82, 84, 95, 106, 126], "stai": [0, 23, 35, 92, 103], "re": [0, 1, 4, 5, 6, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 36, 41, 42, 48, 50, 52, 53, 56, 65, 89, 101, 133], "go": [0, 5, 6, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 33, 34, 38, 41, 50, 63, 65, 74, 84, 92, 95, 100, 103, 118, 127], "name": [0, 1, 7, 11, 13, 18, 19, 20, 21, 22, 23, 24, 40, 50, 53, 62, 63, 66, 73, 74, 80, 82, 86, 87, 92, 111, 113, 118, 119, 125, 130], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "somebodi": [0, 21, 23], "who": [0, 4, 6, 15, 16, 17, 23], "particip": [0, 23, 28, 32, 39, 52, 72, 133], "live": [0, 7, 13, 21, 23, 72], "chat": [0, 21, 23, 72, 95, 104, 117], "event": [0, 7, 13, 21, 23, 72, 117, 122], "notic": [0, 6, 7, 11, 13, 14, 15, 16, 18, 19, 23, 53, 55, 58, 62, 77, 83, 86, 88, 90, 99], "written": [0, 1, 22, 23, 24, 50, 63, 86, 119], "even": [0, 1, 3, 7, 11, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 50, 62, 63, 64, 77, 80, 85, 87, 91, 94, 96, 97, 101, 104, 108, 111, 112, 133], "train": [0, 6, 7, 13, 14, 15, 16, 20, 23, 24, 40, 47, 69], "togeth": [0, 1, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 39, 50, 56, 69, 72, 81, 82, 93, 108, 114, 123, 125, 127, 129], "transform": [0, 10, 11, 18, 19, 21, 23, 26, 56, 58, 59, 67, 71, 72, 73, 74, 75, 81, 82, 88, 90, 92, 94, 97, 101, 115, 122], "form": [0, 2, 5, 20, 21, 22, 23, 28, 30, 45, 48, 56, 58, 61, 65, 69, 71, 79, 80, 82, 88, 90, 106, 116, 118, 119, 125, 126, 127, 135], "need": [0, 1, 2, 3, 4, 5, 7, 8, 11, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 55, 56, 57, 62, 63, 66, 67, 72, 73, 74, 75, 77, 79, 80, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 125, 126, 128, 129, 130, 131, 135], "rid": [0, 1, 22, 23, 24], "nois": [0, 23, 50], "keep": [0, 4, 11, 12, 18, 19, 22, 23, 24, 26, 27, 36, 39, 45, 46, 48, 52, 55, 59, 63, 70, 74, 80, 86, 111, 117, 124], "just": [0, 1, 3, 7, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 29, 32, 33, 34, 37, 38, 44, 46, 49, 50, 53, 54, 55, 63, 64, 72, 76, 87, 89, 98, 109, 111, 115, 118, 120, 123, 125, 132, 134], "outer": [0, 3, 7, 20, 21, 22, 23, 24, 35, 36, 50, 55, 73, 81, 90, 96, 104, 105, 107, 110, 112, 116, 118, 119, 126], "itself": [0, 7, 11, 13, 18, 19, 21, 22, 23, 24, 28, 30, 33, 50, 51, 59, 83, 91, 97, 107, 126, 135], "flow": [0, 22, 23, 60, 104], "feed": [0, 23, 47, 79, 94], "like": [0, 1, 5, 6, 8, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 33, 34, 40, 41, 42, 43, 44, 46, 47, 49, 50, 53, 54, 58, 59, 60, 61, 62, 63, 64, 69, 76, 77, 81, 83, 85, 86, 87, 88, 89, 92, 96, 97, 98, 99, 102, 103, 105, 108, 109, 113, 114, 115, 117, 118, 120, 121, 124, 125, 126, 128, 132, 134, 135], "think": [0, 6, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 34, 37, 44, 54, 61, 64, 69, 71, 76, 80, 87, 89, 98, 109, 116, 118, 120, 127, 132, 133, 134], "besid": [0, 23, 69, 94, 135], "And": [0, 6, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 45, 49, 63, 69, 82, 110, 127], "pattern": [0, 6, 10, 11, 14, 15, 16, 18, 19, 23, 27, 78, 90, 93, 97, 101, 105, 116, 117, 118, 122, 126], "again": [0, 1, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 72, 81, 89, 105, 117, 123], "parenthes": [0, 7, 13, 20, 21, 23, 40, 45, 46, 47, 48, 50, 56, 59, 63, 102, 111, 130], "over": [0, 1, 4, 6, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 35, 45, 47, 48, 50, 55, 65, 71, 77, 79, 92, 104, 113, 118, 125, 135], "fulli": [0, 23, 36, 72, 93], "howev": [0, 2, 4, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 53, 57, 58, 62, 63, 65, 67, 69, 74, 83, 84, 85, 86, 89, 91, 94, 95, 96, 97, 99, 102, 105, 106, 112, 113, 114, 115, 116, 122, 124, 126, 128, 129], "don": [0, 6, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 34, 44, 46, 50, 54, 64, 66, 76, 84, 87, 91, 96, 98, 105, 109, 116, 120, 129, 132, 133, 134], "perfectli": [0, 21, 23, 62], "exercis": [0, 1, 3, 23, 24, 118], "sake": [0, 23, 81], "convers": [0, 3, 11, 21, 23, 30, 38, 72, 81, 90, 95, 108, 111, 122], "now": [0, 1, 5, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 37, 38, 40, 41, 42, 45, 46, 48, 49, 50, 51, 53, 55, 57, 59, 61, 62, 66, 69, 72, 74, 77, 79, 80, 82, 83, 84, 86, 91, 92, 93, 94, 95, 97, 101, 103, 107, 110, 112, 113, 116, 118, 122, 123, 125, 126, 127, 129], "mention": [0, 23, 24, 47, 50, 56, 61, 63, 68, 90, 97, 111, 122], "question": [0, 22, 23, 50, 77, 107, 114], "regard": [0, 23, 90, 105, 114], "sai": [0, 1, 3, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 37, 53, 63, 65, 76, 82, 105, 116, 121, 129, 130], "small": [0, 4, 21, 22, 23, 37, 50, 52, 90, 91, 105, 130], "power": [0, 1, 3, 5, 7, 8, 12, 13, 20, 21, 22, 23, 24, 25, 30, 33, 34, 37, 44, 47, 54, 59, 64, 67, 76, 87, 90, 91, 93, 98, 103, 107, 109, 115, 117, 118, 120, 125, 132, 133, 134, 135], "add": [0, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 36, 46, 59, 63, 65, 74, 80, 82, 89, 95, 102, 103, 105, 128, 129], "through": [0, 2, 3, 4, 5, 8, 20, 23, 24, 27, 29, 35, 38, 39, 52, 53, 55, 56, 58, 60, 65, 66, 70, 71, 77, 79, 80, 84, 86, 89, 90, 91, 94, 96, 97, 106, 107, 110, 114, 115, 117, 118, 121, 122, 123, 124, 126, 127, 128, 131, 133], "thei": [0, 3, 6, 10, 11, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 30, 36, 38, 39, 40, 42, 43, 50, 60, 61, 66, 67, 73, 75, 78, 81, 82, 84, 86, 88, 91, 92, 93, 94, 95, 97, 101, 104, 108, 112, 114, 115, 119, 124, 125, 128, 129, 130], "look": [0, 2, 3, 4, 5, 6, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 33, 41, 43, 47, 53, 60, 61, 62, 65, 69, 70, 74, 81, 83, 84, 86, 88, 94, 102, 103, 106, 108, 114, 115, 118, 119, 121, 122, 124, 125, 126, 129], "ve": [0, 2, 3, 4, 5, 6, 11, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 37, 50, 74, 77, 88, 94, 105, 110, 122, 123, 130, 131], "onli": [0, 1, 3, 11, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 36, 42, 45, 46, 50, 52, 53, 55, 56, 57, 58, 60, 63, 65, 66, 70, 73, 74, 75, 82, 83, 84, 85, 86, 91, 93, 100, 101, 102, 105, 106, 110, 112, 113, 114, 118, 119, 123, 128, 130, 135], "ad": [0, 1, 4, 7, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 29, 37, 42, 60, 63, 72, 74, 82, 86, 89, 92, 112, 117, 118, 129], "could": [0, 1, 2, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 38, 39, 42, 46, 48, 50, 52, 63, 70, 83, 85, 90, 94, 102, 108, 112, 114, 118, 119, 128, 129], "also": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 37, 38, 40, 41, 42, 43, 46, 47, 48, 50, 51, 55, 58, 61, 63, 67, 69, 70, 72, 74, 75, 78, 83, 84, 85, 88, 91, 93, 96, 97, 99, 100, 105, 113, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 135], "cours": [0, 6, 15, 16, 17, 20, 21, 22, 23, 24, 50, 63], "minu": [0, 2, 6, 7, 13, 15, 16, 17, 20, 21, 22, 23, 41, 51, 63, 95], "inaccuraci": [0, 23, 26], "level": [0, 5, 20, 22, 23, 90, 105, 133], "should": [0, 4, 6, 10, 11, 14, 15, 16, 20, 21, 23, 24, 25, 30, 32, 39, 40, 41, 42, 49, 50, 51, 55, 68, 72, 73, 74, 75, 77, 80, 89, 93, 95, 97, 101, 103, 105, 113, 117, 119, 124, 130], "try": [0, 1, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 40, 50, 71, 112, 123, 129], "oh": [0, 23, 76], "9": [0, 2, 7, 11, 12, 13, 22, 23, 25, 26, 34, 38, 41, 44, 45, 52, 54, 59, 61, 62, 63, 64, 71, 76, 80, 81, 83, 86, 87, 88, 89, 91, 94, 95, 98, 100, 103, 104, 106, 109, 110, 116, 117, 118, 120, 121, 132], "odd": [0, 12, 23, 63, 64, 85, 87, 101], "reason": [0, 7, 11, 13, 18, 19, 20, 22, 23, 60, 61, 93, 101, 103, 129], "ha": [0, 2, 5, 7, 11, 13, 18, 19, 20, 21, 22, 23, 24, 27, 30, 39, 43, 44, 48, 49, 50, 55, 58, 67, 68, 79, 82, 85, 93, 101, 102, 103, 108, 112, 115, 118, 125, 130, 133, 135], "someth": [0, 6, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 50, 60, 61, 63, 103, 112, 118], "multipl": [0, 3, 4, 6, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 36, 42, 44, 46, 47, 50, 51, 52, 53, 54, 61, 62, 63, 64, 67, 71, 72, 76, 78, 83, 84, 87, 94, 98, 100, 102, 105, 109, 111, 116, 120, 122, 125, 126, 132, 134], "fuzz": [0, 23], "long": [0, 23, 24, 46, 61, 63, 78, 109, 120, 124], "ratio": [0, 23, 28, 33], "than": [0, 2, 4, 6, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 31, 32, 33, 36, 40, 41, 43, 47, 48, 50, 53, 58, 59, 60, 65, 70, 73, 74, 77, 79, 80, 88, 93, 95, 97, 102, 103, 113, 122, 124, 125, 128, 130, 131], "plu": [0, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 50, 53, 58, 110, 111], "why": [0, 22, 23, 50, 55, 128], "chose": [0, 23], "soon": [0, 2, 20, 23], "hit": [0, 20, 23, 71, 102], "reach": [0, 7, 8, 11, 20, 23, 26, 89, 92, 95, 116], "order": [0, 3, 6, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 35, 36, 40, 42, 43, 46, 49, 50, 51, 54, 56, 62, 66, 70, 71, 72, 73, 74, 78, 86, 90, 100, 101, 104, 108, 112, 114, 115, 117, 119, 124, 125], "magnitud": [0, 3, 21, 22, 23, 24, 28, 59], "therefor": [0, 3, 7, 11, 13, 18, 19, 20, 23, 29, 30, 62, 75, 83, 89, 95, 108, 130], "awai": [0, 20, 23, 121, 122], "counteract": [0, 23], "local": [0, 23], "after": [0, 2, 6, 14, 15, 16, 17, 20, 21, 23, 27, 31, 32, 33, 39, 42, 43, 45, 46, 51, 53, 58, 59, 60, 67, 68, 70, 71, 73, 74, 75, 77, 82, 85, 89, 90, 92, 94, 102, 103, 105, 108, 112, 113, 115, 117, 118, 121, 122, 123, 124, 125], "formula": [0, 20, 23, 25, 31, 33, 37, 48, 61, 107, 110, 117, 119, 130], "befor": [0, 1, 4, 20, 21, 23, 24, 29, 37, 39, 41, 45, 46, 50, 51, 53, 60, 67, 74, 75, 77, 85, 86, 99, 102, 108, 112, 115, 129, 131], "fc": [0, 23], "definit": [0, 6, 15, 16, 17, 20, 23, 24, 30, 37, 42, 46, 50, 55, 74, 84, 95], "normal": [0, 1, 11, 18, 19, 20, 21, 22, 23, 24, 41, 43, 65, 72, 88, 89, 92, 101, 102], "much": [0, 1, 6, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 32, 53, 72, 117], "unless": [0, 23, 96], "possibli": [0, 23, 49], "perform": [0, 3, 4, 14, 17, 18, 19, 20, 21, 23, 25, 26, 40, 47, 50, 51, 52, 55, 57, 58, 60, 61, 62, 65, 66, 67, 68, 73, 75, 79, 82, 90, 91, 92, 93, 95, 99, 100, 102, 104, 108, 122, 129, 135], "optim": [0, 5, 11, 18, 19, 21, 23, 27, 31, 36, 39, 40, 42, 47, 48, 53, 75, 86, 95, 102, 103, 105, 113, 124], "usual": [0, 23, 33], "themselv": [0, 20, 23, 24, 29, 50, 53, 58, 77], "But": [0, 11, 18, 19, 20, 21, 22, 23, 24, 50, 55, 69, 70], "ask": [0, 7, 13, 21, 23, 37, 41, 47, 77, 88], "back": [0, 7, 8, 11, 13, 18, 19, 21, 23, 26, 27, 39, 41, 59, 80, 81, 88, 93, 94, 97, 111, 117, 122, 123, 125], "store": [0, 23, 48, 118], "quad": [0, 5, 6, 7, 11, 13, 14, 15, 16, 18, 19, 20, 23, 29, 40, 60, 67, 74, 88, 96, 112, 118], "tri": [0, 23], "compact": [0, 23, 32, 62, 69, 77], "everi": [0, 1, 5, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 33, 42, 43, 45, 46, 52, 53, 57, 60, 63, 72, 73, 78, 83, 93, 96, 97, 117, 123, 135], "tell": [0, 11, 23, 34, 49, 129], "separ": [0, 11, 18, 19, 23, 35, 43, 46, 48, 54, 63, 69, 72, 75, 82, 94, 100, 111, 120, 126], "them": [0, 1, 2, 3, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 36, 39, 40, 42, 43, 46, 48, 49, 50, 52, 53, 56, 58, 63, 65, 66, 72, 75, 77, 79, 80, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 111, 114, 117, 119, 122, 123, 129, 130], "fit": [0, 7, 13, 21, 23, 35, 80, 82, 89, 92, 94, 122, 129, 131], "second": [0, 1, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 39, 41, 43, 48, 50, 51, 55, 67, 68, 69, 70, 73, 75, 83, 84, 85, 90, 95, 97, 100, 101, 112, 128, 131, 135], "8": [0, 5, 12, 20, 21, 23, 24, 26, 34, 35, 41, 45, 49, 50, 52, 54, 59, 63, 64, 71, 72, 76, 77, 81, 83, 86, 87, 91, 93, 94, 95, 98, 99, 100, 103, 104, 106, 107, 109, 110, 116, 118, 120, 124, 127, 132], "That": [0, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 50], "byte": [0, 11, 18, 19, 23], "exploit": [0, 23, 59], "fact": [0, 21, 22, 23, 30, 50, 75, 93], "addit": [0, 4, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 27, 39, 56, 63, 70, 78, 80, 85, 95, 102, 111, 127, 129, 131, 135], "matter": [0, 1, 7, 11, 13, 14, 18, 19, 21, 22, 23, 24, 80, 84, 100], "400": [0, 23, 96], "answer": [0, 20, 23, 113], "instead": [0, 2, 3, 4, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 59, 60, 61, 62, 63, 72, 75, 80, 81, 86, 89, 90, 91, 94, 95, 97, 99, 100, 102, 104, 105, 106, 112, 113, 116, 118, 123, 124, 126, 129, 130], "rather": [0, 11, 18, 19, 21, 22, 23, 33, 40, 41, 47, 55, 58, 68, 77, 79, 80, 89, 97, 103, 122, 125], "run": [0, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 22, 23, 27, 35, 37, 41, 42, 43, 52, 53, 71, 78, 80, 81, 89, 93, 96, 109, 110, 118, 124, 126, 129, 131], "spectacularli": [0, 23], "upgrad": [0, 23, 25], "stuck": [0, 23], "becam": [0, 23], "sinc": [0, 1, 11, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 37, 40, 46, 48, 51, 52, 53, 56, 62, 63, 67, 70, 74, 78, 79, 83, 85, 86, 93, 101, 105, 106, 111, 115, 123, 125, 126, 127, 128, 129, 130, 133, 135], "anyth": [0, 11, 18, 19, 22, 23, 24, 27, 33], "amend": [0, 3, 21, 23], "contain": [0, 5, 11, 22, 23, 40, 45, 46, 48, 49, 58, 59, 65, 66, 68, 71, 75, 79, 90, 95, 99, 104, 106, 112, 115, 119, 124, 126, 133], "gd": [0, 23], "match": [0, 6, 10, 11, 14, 15, 16, 18, 19, 20, 22, 23, 27, 28, 29, 43, 46, 56, 58, 60, 62, 73, 74, 75, 91, 93, 101, 102, 115, 117, 124, 129, 130], "said": [0, 23], "none": [0, 11, 18, 19, 20, 22, 23, 55], "m": [0, 1, 3, 6, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 36, 48, 50, 52, 60, 130], "sure": [0, 3, 11, 18, 19, 21, 22, 23], "agre": [0, 23], "depend": [0, 13, 23, 30, 51, 104, 105, 117, 135], "understand": [0, 4, 5, 21, 22, 23, 32, 35, 38, 43, 51, 60, 68, 69, 71, 72, 110, 112, 116, 118, 123, 135], "simplist": [0, 23], "perspect": [0, 3, 23, 130], "bunch": [0, 6, 11, 15, 16, 17, 18, 19, 21, 22, 23, 47, 63, 64, 65], "out": [0, 3, 6, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 37, 41, 42, 43, 53, 55, 60, 62, 66, 68, 69, 73, 82, 84, 105, 106, 111, 112, 118, 122, 123, 124, 130, 131, 135], "dot": [0, 6, 14, 15, 16, 23, 111, 135], "scale": [0, 23, 24, 28, 59, 81], "insid": [0, 22, 23, 50, 53, 60, 63, 66], "loop": [0, 23, 24, 47, 51, 80, 104, 105], "fuse": [0, 23, 24, 47], "simpli": [0, 1, 2, 7, 12, 13, 21, 22, 23, 24, 34, 41, 44, 47, 50, 51, 53, 54, 55, 64, 76, 78, 79, 85, 87, 89, 94, 95, 97, 98, 109, 111, 112, 119, 120, 121, 126, 129, 130, 132, 134], "rememb": [0, 12, 21, 22, 23, 34, 41, 44, 54, 64, 76, 78, 87, 88, 91, 95, 98, 109, 119, 120, 129, 132, 134], "littl": [0, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "being": [0, 4, 6, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 48, 50, 61, 78, 85, 96, 106, 118, 128, 135], "close": [0, 5, 20, 23, 26, 37, 53, 73, 94], "too": [0, 4, 21, 23, 50, 63, 65, 68, 71, 72, 129], "underscor": [0, 23, 88], "cannot": [0, 11, 18, 19, 23, 62, 70, 73, 100, 106], "figur": [0, 23, 31, 84, 107], "printout": [0, 23], "17": [0, 23, 35, 71, 94, 112], "implicit": [0, 23], "maximum": [0, 2, 22, 23, 31, 40, 41, 50, 71, 92, 103, 124], "new": [0, 7, 11, 12, 18, 19, 20, 21, 23, 27, 30, 34, 37, 41, 44, 52, 54, 56, 57, 59, 60, 62, 63, 64, 67, 75, 76, 78, 80, 87, 88, 92, 98, 102, 109, 110, 112, 113, 117, 119, 120, 121, 125, 132, 133, 134, 135], "post": [0, 20, 23, 33], "okai": [0, 11, 18, 19, 20, 21, 22, 23, 24], "regular": [0, 5, 10, 18, 19, 20, 23, 24], "exot": [0, 23], "known": [0, 8, 21, 23, 40, 41, 43, 46, 47, 50, 65, 70, 73, 77, 78, 80, 89, 97, 107, 111, 126, 127, 133], "wa": [0, 7, 11, 13, 18, 19, 20, 21, 22, 23, 26, 74, 114, 129], "multipli": [0, 6, 7, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 26, 28, 31, 33, 47, 59, 61, 81, 83, 89, 97, 99, 102, 106, 127], "Of": [0, 6, 15, 16, 17, 21, 22, 23, 24, 50, 109], "wherev": [0, 23, 41], "whenev": [0, 20, 23, 45, 47, 55, 60], "nonzero": [0, 23], "sign": [0, 21, 23, 24, 52, 63, 74, 76, 83, 90, 95, 122, 128], "never": [0, 4, 5, 11, 18, 19, 20, 23, 70, 97], "ic": [0, 23], "tricki": [0, 23], "radix": [0, 3, 21, 23, 97, 108], "full": [0, 2, 20, 21, 22, 23, 35, 61, 65, 71, 105, 110, 116, 122, 127, 128], "know": [0, 5, 6, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 61, 75, 79, 80, 107, 119, 129], "explain": [0, 23, 43], "sens": [0, 7, 13, 23, 102], "end": [0, 5, 11, 18, 19, 20, 21, 22, 23, 24, 27, 29, 31, 32, 41, 46, 49, 50, 51, 58, 69, 72, 73, 74, 78, 85, 94, 95, 101, 102, 103, 113, 117, 124, 129], "up": [0, 1, 3, 5, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 33, 34, 35, 39, 46, 47, 50, 58, 59, 62, 69, 72, 74, 77, 80, 84, 85, 86, 87, 88, 89, 98, 99, 102, 103, 104, 115, 117, 123, 124, 126, 129], "larger": [0, 2, 5, 6, 15, 16, 17, 21, 22, 23, 24, 29, 53, 60, 88, 92, 97, 102, 103, 123, 125], "abus": [0, 11, 18, 19, 20, 23], "specifi": [0, 6, 16, 20, 21, 23, 24, 40, 56, 57, 65, 67, 72, 75, 78, 81, 82, 84, 88, 90, 92, 95, 97, 99, 105, 106, 107, 110, 118, 122, 126, 135], "clear": [0, 20, 22, 23, 33, 39, 58, 71, 82, 103, 104, 133], "product": [0, 3, 6, 14, 15, 16, 20, 21, 22, 23, 24, 28, 35, 36, 55, 81, 89, 96, 97, 104, 112, 116], "better": [0, 4, 6, 11, 15, 16, 18, 19, 20, 21, 23, 27, 31, 41, 42, 74, 75, 86, 97, 99, 108, 113, 114, 123, 130], "reader": [0, 23, 35], "around": [0, 2, 21, 23, 24, 27, 30, 41, 49, 63, 81, 82, 102, 104, 116, 120], "measur": [0, 23, 27, 29, 36, 39, 41, 80, 103, 105], "rel": [0, 23, 51, 52, 68, 88, 103], "consequ": [0, 23, 55, 62, 72, 80, 93, 107, 112], "true": [0, 1, 6, 7, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 45, 48, 55, 56, 57, 83, 92, 104, 111], "300": [0, 23, 96], "spoke": [0, 23], "system": [0, 2, 10, 11, 18, 19, 20, 21, 22, 23, 38, 67, 71, 74, 86, 89, 97, 108, 118, 128, 135], "special": [0, 3, 21, 22, 23, 31, 42, 45, 53, 58, 69, 74, 112, 119, 135], "oop": [0, 11, 18, 19, 21, 23, 24], "sorri": [0, 21, 23, 24], "wrong": [0, 20, 23, 72], "final": [0, 5, 6, 7, 13, 15, 16, 17, 20, 21, 22, 23, 24, 27, 29, 32, 33, 34, 37, 39, 40, 43, 45, 47, 48, 51, 55, 56, 61, 62, 70, 71, 72, 78, 83, 85, 95, 100, 101, 102, 112, 114, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131], "joke": [0, 23], "subject": [0, 20, 21, 23, 24, 42], "limit": [0, 2, 10, 11, 18, 19, 23, 24, 59, 65, 102, 128], "domain": [0, 2, 22, 23, 113], "main": [0, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 35, 56, 73, 83, 100, 112, 114, 135], "gap": [0, 23, 113], "enlist": [0, 2, 20, 22, 23], "collaps": [0, 21, 23], "horribl": [0, 23], "complet": [0, 2, 5, 7, 13, 22, 23, 24, 30, 40, 58, 62, 72, 74, 84, 89, 110, 122], "deal": [0, 2, 6, 7, 13, 14, 15, 16, 23, 58, 60, 65, 74, 89, 93], "pleas": [0, 7, 13, 23, 25, 28, 36, 42, 44, 46, 47, 53, 77, 129], "tabl": [1, 4, 20, 21, 22, 24, 43, 50, 55, 56, 68, 74, 83, 84, 86, 116, 122], "eighth": [1, 24, 25], "onc": [1, 7, 11, 13, 18, 19, 21, 22, 24, 27, 33, 42, 53, 56, 69, 71, 86, 90, 94, 108, 115, 117, 121, 125, 130], "straight": [1, 24, 26], "certain": [1, 24, 25, 31, 35, 50, 75, 91, 97, 106, 114, 135], "target": [1, 24, 91, 104, 110, 130], "provid": [1, 3, 4, 12, 18, 20, 24, 25, 26, 27, 34, 37, 38, 40, 44, 45, 47, 48, 49, 54, 59, 61, 62, 64, 65, 67, 68, 72, 74, 76, 83, 85, 87, 91, 94, 95, 96, 98, 100, 102, 103, 105, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 132, 134], "vertic": [1, 3, 20, 21, 24, 38, 45, 83, 100, 135], "horizont": [1, 3, 21, 24, 26, 38, 75, 77, 83, 100, 125, 135], "basic": [1, 2, 4, 5, 7, 12, 22, 24, 32, 33, 34, 38, 44, 45, 50, 54, 61, 63, 64, 76, 79, 87, 97, 98, 105, 109, 120, 123, 132, 134], "A": [1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 53, 54, 55, 57, 59, 60, 61, 64, 65, 66, 68, 70, 71, 74, 75, 76, 77, 81, 85, 86, 87, 88, 90, 91, 94, 98, 100, 101, 102, 103, 104, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 124, 129, 130, 131, 132, 133, 134], "get": [1, 6, 7, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 39, 41, 45, 47, 48, 50, 52, 53, 55, 57, 62, 63, 66, 70, 75, 77, 78, 80, 86, 88, 91, 94, 95, 100, 105, 106, 112, 113, 114, 115, 118, 129, 131], "alreadi": [1, 11, 18, 19, 20, 21, 22, 24, 39, 50, 58, 70, 72, 97, 105, 110], "pair": [1, 5, 10, 11, 18, 19, 20, 21, 24, 33, 36, 38, 43, 50, 58, 60, 72, 75, 78, 79, 80, 83, 97, 104, 106, 111, 118, 123, 125, 132, 135], "util": [1, 3, 5, 6, 7, 8, 10, 13, 15, 16, 17, 26, 27, 29, 31, 36, 37, 46, 48, 52, 56, 62, 65, 66, 68, 69, 70, 71, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 92, 94, 95, 96, 97, 103, 110, 111, 112, 113, 114, 117, 118, 121, 123, 124, 126, 127, 128, 130, 131], "distribut": [1, 21, 24, 45, 71, 87], "rank": [1, 20, 21, 22, 24, 25, 43, 68, 71, 79, 104, 115, 123, 125], "iota": [1, 6, 7, 13, 14, 15, 16, 17, 21, 24, 40, 44, 63, 118], "7": [1, 2, 7, 12, 13, 23, 24, 25, 34, 41, 43, 44, 45, 49, 52, 54, 59, 63, 64, 71, 72, 76, 77, 78, 81, 82, 83, 86, 87, 91, 92, 94, 95, 98, 100, 102, 103, 104, 106, 109, 111, 115, 118, 120, 124, 128, 132], "approach": [1, 3, 5, 7, 8, 10, 11, 13, 18, 19, 20, 23, 24, 27, 29, 32, 37, 38, 40, 42, 45, 47, 53, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 72, 74, 75, 79, 80, 81, 82, 86, 88, 89, 92, 93, 95, 99, 101, 104, 105, 108, 111, 127, 129, 130, 131, 133], "hidden": [1, 24], "interestingli": [1, 20, 37], "shape": [1, 2, 3, 7, 13, 18, 19, 20, 21, 22, 24, 36, 43, 59, 72, 83, 84, 118, 119, 123, 125], "hold": [1, 24, 72, 92, 93, 128], "those": [1, 4, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 35, 36, 41, 42, 43, 50, 53, 58, 60, 66, 82, 92, 94, 97, 102, 114, 119, 123, 124], "correspond": [1, 5, 7, 8, 11, 13, 18, 19, 21, 24, 27, 35, 46, 47, 53, 61, 68, 72, 73, 74, 75, 78, 83, 84, 86, 89, 91, 92, 95, 104, 111, 113, 114, 126, 131], "across": [1, 5, 24, 45, 50, 52, 53, 67, 72, 79, 93, 114, 116, 123, 125], "reduc": [1, 10, 11, 14, 18, 19, 20, 22, 24, 25, 27, 32, 33, 36, 41, 45, 48, 50, 53, 55, 58, 65, 77, 80, 94, 97, 99, 110, 111, 112, 113, 129], "start": [1, 2, 3, 4, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 36, 39, 41, 42, 43, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 74, 75, 78, 80, 82, 83, 84, 85, 88, 89, 91, 92, 94, 95, 104, 105, 107, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 129, 130], "repetit": [1, 24, 77], "seri": [1, 7, 13, 24, 41, 97, 133], "On": [1, 12, 21, 24, 69], "row": [1, 2, 4, 8, 20, 21, 22, 24, 41, 43, 47, 50, 53, 56, 58, 62, 68, 74, 75, 77, 80, 83, 84, 94, 100, 112, 116, 123, 125], "third": [1, 10, 11, 18, 19, 22, 24, 36, 39, 55, 75, 85, 89, 100, 101, 128, 131], "easili": [1, 2, 5, 22, 24, 39, 43, 51, 57, 61, 69, 72, 74, 81, 91, 112, 121, 126, 130], "observ": [1, 7, 13, 21, 22, 24, 26, 29, 31, 33, 41, 42, 53, 55, 66, 68, 70, 82, 90, 97, 107, 114, 123, 130], "applic": [1, 24, 32, 43, 51, 56, 57, 65, 69, 74, 82, 85, 105, 115, 128], "duplic": [1, 21, 22, 24, 36, 40, 53, 58, 68, 77, 79, 100, 110, 114, 116, 135], "self": [1, 3, 21, 24, 25, 28, 29, 83], "concaten": [1, 4, 11, 18, 19, 20, 21, 22, 24, 29, 36, 37, 46, 53, 65, 81, 85, 86, 90, 91, 94, 96, 100, 104, 108, 110, 115, 119, 122, 127, 129, 135], "treatedli": 1, "next": [1, 2, 5, 7, 8, 11, 13, 18, 19, 20, 21, 22, 24, 29, 31, 33, 37, 41, 42, 43, 46, 48, 49, 50, 55, 56, 57, 59, 60, 62, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 88, 89, 90, 93, 94, 97, 101, 102, 103, 105, 106, 107, 108, 110, 112, 113, 116, 117, 118, 119, 121, 124], "elimin": [1, 4, 8, 20, 24, 27, 29, 32, 33, 36, 45, 50, 57, 75, 80, 90, 97, 102, 107, 111, 112, 119, 124, 128, 129, 130, 132], "proce": [1, 20, 24, 29, 35, 69, 93], "testedli": [1, 24], "sum": [1, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 47, 50, 56, 71, 77, 80, 81, 82, 83, 89, 95, 99, 100, 107, 110, 111, 112, 135], "mai": [1, 2, 3, 7, 11, 12, 13, 18, 19, 24, 25, 26, 28, 30, 31, 32, 34, 35, 38, 42, 43, 44, 52, 53, 54, 62, 64, 65, 70, 73, 75, 76, 77, 79, 82, 83, 87, 88, 89, 92, 94, 97, 98, 99, 101, 103, 108, 109, 113, 114, 117, 119, 120, 123, 131, 132, 133, 134], "seem": [1, 2, 24, 26, 50, 53, 77, 83, 89, 90, 92, 93], "silli": [1, 24], "nice": [1, 20, 21, 24, 63, 129], "insight": [1, 5, 24, 71, 72, 89, 122, 123], "relationship": [1, 8, 24, 25, 30, 38, 39, 58, 67, 70, 107, 128], "recycl": [1, 24], "until": [1, 3, 5, 8, 20, 21, 24, 30, 50, 51, 52, 92, 95, 116, 124, 129], "enough": [1, 11, 18, 19, 20, 21, 24, 30, 129], "fill": [1, 2, 3, 7, 13, 21, 22, 24, 62, 72, 99, 118], "repeat": [1, 7, 20, 21, 24, 63, 82, 121, 124], "repeatedli": [1, 4, 7, 13, 29, 30, 33, 42, 124], "transpos": [1, 3, 21, 24, 41, 74, 75, 94, 100, 131, 135], "had": [1, 6, 15, 16, 17, 22, 24, 46, 63, 89], "yield": [1, 5, 8, 25, 27, 30, 31, 33, 39, 40, 41, 42, 43, 45, 46, 49, 50, 52, 55, 56, 57, 59, 60, 62, 70, 71, 72, 74, 79, 80, 83, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 106, 107, 108, 112, 113, 114, 115, 116, 123, 124, 125, 127], "wrap": [1, 11, 18, 19, 20, 22, 24, 66, 71, 82, 102, 105, 110, 130], "simplifi": [1, 4, 8, 22, 26, 29, 35, 36, 38, 40, 45, 46, 57, 59, 65, 67, 71, 73, 75, 86, 90, 93, 94, 112, 113, 118, 119, 126, 131], "enclos": [1, 11, 18, 19, 20, 21, 24, 40, 59, 72, 77, 79, 80, 88, 94, 105, 135], "matrix": [1, 2, 8, 20, 21, 22, 24, 25, 35, 36, 38, 40, 47, 50, 62, 68, 74, 77, 80, 84, 88, 94, 96, 100, 105, 112, 131, 135], "miss": [1, 11, 18, 19, 21, 24, 60, 64, 70, 102, 108, 112], "proper": [1, 11, 18, 19, 21, 24, 25, 31, 72, 73, 75, 84, 89, 90, 95, 98, 114], "ultim": [1, 4, 5, 24, 27, 30, 36, 51, 60, 62, 67, 82, 83], "though": [1, 27, 40, 41, 51, 117], "might": [1, 4, 10, 11, 18, 19, 20, 22, 24, 25, 26, 29, 31, 40, 41, 47, 50, 58, 61, 65, 69, 70, 77, 88, 89, 94, 95, 103, 110, 112, 114, 117, 124, 128, 129], "imposs": [1, 24, 30], "count": [1, 4, 6, 7, 10, 11, 13, 15, 16, 17, 18, 19, 24, 35, 41, 50, 51, 52, 53, 62, 64, 71, 78, 79, 85, 97, 100, 103, 113, 118, 120, 122, 129, 135], "stick": [1, 24], "exampl": [1, 2, 5, 8, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 33, 34, 37, 38, 39, 40, 42, 44, 47, 52, 53, 54, 57, 58, 60, 61, 63, 64, 65, 69, 70, 71, 73, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 90, 97, 98, 99, 100, 103, 107, 109, 111, 116, 117, 118, 120, 121, 124, 127, 129, 130, 132, 133, 134, 135], "twice": [1, 7, 13, 21, 22, 24, 25, 53, 63, 68, 102], "must": [1, 2, 5, 7, 11, 13, 18, 19, 20, 21, 22, 27, 28, 29, 30, 35, 36, 38, 41, 43, 46, 48, 55, 58, 61, 62, 66, 67, 68, 70, 72, 73, 74, 78, 92, 93, 101, 108, 114, 115, 116, 119, 124, 131], "cell": [1, 4, 7, 11, 13, 18, 19, 20, 21, 24, 40, 43, 135], "ravel": [1, 2, 6, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 24, 77, 115], "whatsoev": [1, 24], "tradit": [1, 21, 33, 35, 38, 43, 88, 116], "clever": [1, 2, 3, 7, 13, 20, 22, 32, 58, 104, 121, 128], "simplest": [1, 4, 21, 26, 78, 94, 135], "show": [1, 8, 18, 19, 20, 24, 27, 35, 36, 45, 50, 55, 56, 69, 71, 72, 73, 85, 89, 90, 92, 93, 100, 101, 103, 104, 111, 112, 123, 125, 131], "flexibl": [1, 7, 24, 56, 60, 85, 115, 130], "reveal": [1, 31, 93, 107, 123], "thank": [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "read": [1, 4, 7, 12, 21, 29, 34, 43, 44, 48, 54, 55, 57, 59, 60, 64, 67, 68, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 103, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 124, 125, 127, 128, 130, 131, 132, 134], "explan": [1, 2, 5, 13, 14, 43, 60, 91], "dyalog": [1, 24, 90, 102, 115, 119, 135], "github": [1, 2, 5, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 112], "repositori": [1, 5], "discuss": [2, 5, 7, 13, 30, 40, 43, 45, 60, 78, 81, 83, 84, 95, 103, 104, 117, 119, 131], "revolv": 2, "round": [2, 4, 8, 10, 11, 18, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 59, 62, 63, 69, 82, 109], "straightforward": [2, 3, 8, 11, 18, 19, 35, 37, 47, 49, 50, 51, 56, 67, 71, 73, 85, 89, 94, 99, 100, 105, 110, 112, 117], "highest": [2, 22, 25, 92], "lowest": [2, 6, 15, 16, 22, 114], "explor": [2, 3, 4, 5, 8, 12, 28, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134], "along": [2, 7, 11, 13, 18, 19, 20, 21, 22, 24, 25, 29, 30, 31, 33, 38, 39, 42, 45, 47, 50, 53, 62, 71, 75, 76, 86, 100, 102, 121, 123], "us": [2, 4, 5, 8, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 49, 53, 54, 55, 57, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 76, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 115, 116, 118, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 134], "reduct": [2, 6, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 24, 27, 28, 31, 32, 36, 38, 41, 45, 47, 50, 52, 53, 57, 58, 65, 70, 77, 79, 80, 93, 94, 95, 97, 111, 113, 115, 131, 135], "found": [2, 20, 21, 35, 40, 43, 58, 73, 102, 106, 115, 124, 126], "minimum": [2, 22, 92, 113, 115], "numeric_rang": 2, "calcul": [2, 3, 4, 5, 6, 7, 8, 21, 25, 28, 29, 30, 31, 35, 41, 45, 50, 59, 62, 70, 71, 74, 83, 93, 95, 97, 100, 103, 111, 122, 127, 128], "encapsul": [2, 31, 32, 41, 45, 48, 51, 56, 69, 73, 75, 77, 79, 96, 103, 112, 115, 116, 125, 130], "logic": [2, 5, 20, 31, 36, 38, 41, 43, 48, 52, 53, 56, 57, 60, 62, 68, 74, 75, 81, 82, 83, 92, 93, 103, 114, 122, 124, 125, 126], "within": [2, 8, 27, 29, 32, 38, 56, 58, 60, 68, 82, 83, 86, 88, 89, 100, 107, 115, 122, 123, 125, 126, 130], "comput": [2, 4, 6, 7, 8, 13, 15, 16, 17, 20, 22, 24, 25, 30, 31, 35, 36, 37, 38, 41, 42, 47, 50, 52, 56, 67, 70, 71, 72, 73, 83, 86, 89, 95, 103, 107, 110, 114, 119, 125, 126, 133, 135], "numeric_range_funct": 2, "With": [2, 6, 15, 16, 18, 19, 35, 37, 40, 45, 55, 56, 66, 69, 72, 74, 80, 81, 96, 97, 104, 113, 118], "encount": [2, 4, 7, 13, 46, 47, 53, 58, 60, 65, 73, 85, 94, 112], "construct": [2, 7, 13, 21, 35, 52, 60, 61, 69, 71, 79, 88, 89, 104, 105, 113, 118, 130], "four": [2, 11, 18, 19, 21, 22, 24, 40, 50, 55, 59, 65, 74, 75, 79, 80, 88, 96, 129], "resolv": [2, 7, 13, 27, 46, 51, 86, 91, 114, 129], "critic": [2, 42, 47, 82, 132], "rais": [2, 7, 13, 21, 24, 25, 81, 117], "treat": [2, 36, 51, 55, 72, 79, 112, 122, 123, 125, 128, 135], "represent": [2, 11, 18, 19, 20, 22, 23, 35, 65, 71, 72, 75, 83, 86, 89, 94, 97, 113, 117, 119, 128], "rectifi": [2, 75], "modifi": [2, 6, 15, 16, 17, 21, 30, 42, 48, 50, 57, 59, 72, 75, 78, 92, 102, 109], "examin": [2, 7, 13, 28, 29, 41, 46, 58, 70, 72, 74, 79, 85, 93, 105, 125], "addition": [2, 42, 56, 74, 102, 112, 121, 122], "emphas": [2, 103], "produc": [2, 7, 11, 13, 21, 22, 24, 35, 38, 45, 46, 47, 53, 55, 58, 60, 67, 68, 71, 79, 88, 94, 95, 103, 110, 112, 124, 126, 127, 131], "opposit": [2, 21, 22, 24, 40, 41, 72, 78, 101], "length": [2, 4, 6, 7, 14, 15, 16, 21, 22, 24, 28, 33, 39, 40, 47, 49, 51, 55, 58, 63, 68, 70, 72, 73, 78, 82, 90, 95, 99, 102, 105, 107, 110, 111, 117, 125, 129, 130, 131], "guarante": [2, 112, 119], "sever": [2, 5, 36, 39, 67, 83, 102, 105, 106, 115, 130], "achiev": [2, 3, 6, 11, 14, 15, 16, 18, 19, 27, 29, 31, 33, 35, 37, 39, 40, 42, 45, 46, 47, 48, 52, 56, 58, 59, 61, 62, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 84, 85, 86, 90, 91, 92, 94, 95, 97, 99, 100, 102, 105, 111, 112, 113, 115, 116, 117, 119, 121, 123, 125, 126, 130, 131], "effici": [2, 4, 5, 10, 21, 22, 24, 25, 29, 30, 31, 35, 36, 38, 39, 41, 43, 48, 51, 52, 53, 56, 57, 61, 67, 69, 70, 74, 75, 77, 80, 81, 86, 88, 90, 96, 97, 99, 100, 103, 104, 105, 110, 112, 114, 115, 119, 121, 122, 126, 128], "sort": [2, 22, 24, 29, 36, 39, 42, 49, 71, 84, 124, 125, 131, 132], "access": [2, 11, 18, 19, 21, 24, 51, 67, 102, 118], "last": [2, 6, 8, 11, 15, 16, 17, 18, 19, 20, 22, 25, 28, 29, 31, 32, 33, 39, 46, 47, 58, 69, 72, 73, 75, 80, 90, 93, 94, 100, 102, 110, 117, 129], "append": [2, 10, 11, 18, 19, 22, 33, 58, 80, 95, 117], "condition": [2, 32, 90, 102], "complex": [2, 12, 21, 26, 27, 30, 34, 41, 44, 46, 54, 56, 59, 60, 64, 73, 74, 76, 77, 87, 88, 89, 98, 105, 109, 113, 114, 115, 120, 122, 132, 133, 134, 135], "flatten": [2, 20, 21, 22, 37, 51, 71, 72, 77, 80, 94, 117, 119], "help": [2, 3, 7, 13, 20, 21, 29, 39, 41, 43, 47, 51, 52, 53, 55, 60, 74, 75, 80, 84, 86, 88, 91, 94, 95, 97, 102, 103, 105, 113, 116, 126, 128, 130, 131], "prevent": [2, 11, 18, 19, 30, 115, 125], "aris": [2, 6, 15, 16, 30, 51, 74, 75, 93], "nest": [2, 5, 20, 22, 24, 43, 47, 52, 73, 77, 79, 80, 103, 105, 113, 117, 125, 129, 130], "leverag": [2, 3, 5, 7, 12, 20, 26, 34, 40, 42, 43, 44, 46, 54, 57, 61, 64, 67, 70, 71, 75, 76, 83, 84, 87, 95, 97, 98, 102, 103, 109, 114, 120, 132, 133, 134], "potenti": [2, 8, 20, 29, 80, 81, 83, 92, 95, 106, 111, 113, 119, 124, 128, 131], "consist": [2, 4, 12, 20, 22, 28, 30, 34, 35, 42, 44, 49, 50, 54, 57, 64, 65, 66, 72, 73, 75, 76, 83, 87, 88, 90, 98, 101, 103, 106, 108, 109, 120, 125, 126, 127, 128, 132, 134], "tackl": [2, 8, 27, 30, 37, 48, 67, 83, 85, 95, 115, 130], "divers": [2, 115], "join": [2, 5, 8, 27, 30, 32, 37, 42, 51, 65, 129], "forward": [2, 8, 11, 18, 19], "week": [2, 7, 11, 13, 18, 19, 22], "world": [2, 11, 29, 32, 53, 71, 79, 121], "studi": 2, "refer": [2, 7, 11, 13, 18, 19, 20, 24, 28, 36, 43, 47, 53, 57, 58, 63, 69, 70, 74, 78, 79, 80, 84, 85, 86, 97, 100, 101, 104, 107, 108, 113, 117, 119], "avail": [2, 7, 11, 13, 18, 19, 22, 25, 42, 53, 65, 67, 83, 117], "episod": [3, 6, 7, 8, 13, 15, 16, 17, 21], "n": [3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 31, 33, 35, 39, 41, 43, 78, 85, 86, 89, 90, 117, 125, 127], "plenti": 3, "accomplish": [3, 7, 13, 42, 46, 50, 53, 57, 66, 97, 100, 114, 116, 130], "dive": [3, 32, 45, 48, 99, 118, 128, 133], "seriou": [3, 21], "afterward": [3, 42], "dimens": [3, 21, 24, 47, 50, 53, 68, 71, 79, 125, 135], "index": [3, 5, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 36, 39, 40, 43, 63, 65, 74, 83, 86, 88, 89, 90, 91, 109, 115, 121, 123, 133], "follow": [3, 5, 6, 7, 8, 13, 15, 16, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 55, 56, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 80, 81, 83, 84, 85, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 131, 135], "identitymatrix": 3, "directli": [3, 22, 33, 36, 37, 41, 43, 47, 48, 49, 51, 53, 61, 63, 65, 66, 67, 70, 75, 80, 81, 86, 93, 97, 102, 105, 111, 113, 118, 119, 126], "dimension": [3, 21, 22, 25, 45, 47, 50, 59, 77, 79, 81, 96, 111, 135], "diagon": [3, 21, 24, 28, 53, 80, 107, 118], "assign": [3, 10, 11, 20, 21, 46, 48, 59, 74, 75, 86, 114, 121], "verbos": [3, 21], "matric": [3, 20, 41, 43, 50, 94, 100], "strategi": [3, 4, 31, 32, 48, 85, 130], "rearrang": [3, 26, 37, 43, 48, 68, 75, 77, 91], "obtain": [3, 5, 7, 8, 13, 21, 36, 41, 42, 49, 51, 53, 55, 59, 69, 72, 74, 81, 83, 86, 94, 95, 100, 102, 106, 107, 108, 112], "tacit": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 29, 30, 50, 56], "twist": [3, 108, 132], "indirectli": 3, "behav": [3, 79, 102, 115], "uniqu": [3, 21, 35, 36, 37, 43, 52, 54, 68, 70, 71, 75, 85, 94, 100, 112, 114, 118, 120, 129, 133], "assess": [3, 5, 42, 70, 93, 101, 114, 128], "12": [3, 21, 24, 26, 45, 59, 61, 67, 71, 74, 75, 80, 81, 89, 94, 104, 110, 112, 116], "0j1": [3, 21, 26, 28], "\u03c0": [3, 21], "arg": [3, 21, 25], "ai": [3, 21], "mod": [3, 21, 102], "throughout": [3, 5, 77, 124], "uncov": 3, "classic": [3, 5, 7, 13, 20, 43, 58], "adopt": [3, 35, 43, 135], "trick": [3, 20, 21, 41, 129], "feel": [3, 10, 51, 77, 82, 105, 114, 131], "free": [3, 21, 50, 51, 77, 82, 90, 105, 114, 131, 135], "choos": [3, 7, 13, 21, 22, 24, 46, 67, 94, 110, 133, 135], "whichev": [3, 7, 13], "practic": [3, 24, 43, 71, 96, 117, 128], "purpos": [3, 42, 65, 74, 88, 92], "watch": [3, 5, 6, 11, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 35, 40, 41, 45, 46, 47, 48, 49, 50, 53, 63, 66, 69, 84, 93, 101, 105, 119, 126, 129, 130], "hi": [4, 22, 37], "ninth": [4, 39], "averag": [4, 50, 82, 120], "sub": [4, 11, 18, 19, 21, 41, 50, 68, 86], "period": [4, 117, 122], "year": [4, 8, 12, 34, 44, 54, 64, 75, 76, 87, 98, 109, 120, 132, 133], "worth": [4, 6, 15, 16, 17, 60, 105], "obviou": [4, 11, 18, 19, 24], "suppos": [4, 7, 13, 22, 25, 28, 47, 63, 84, 115], "sale": [4, 31, 34], "group": [4, 11, 18, 19, 21, 24, 41, 43, 56, 75, 81, 85, 86, 117, 125], "window": [4, 10, 11, 18, 19, 31, 39, 41, 58, 65, 79, 97, 120, 125, 126, 135], "goal": [4, 5, 8, 12, 31, 34, 36, 41, 43, 44, 46, 48, 52, 54, 56, 58, 59, 64, 68, 70, 72, 76, 80, 83, 87, 90, 91, 92, 94, 98, 103, 106, 109, 112, 113, 114, 115, 117, 118, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 134], "idiomat": 4, "divid": [4, 6, 14, 15, 16, 17, 21, 22, 24, 26, 28, 30, 31, 36, 45, 50, 59, 61, 69, 74, 77, 81, 85, 88, 99, 101, 104, 106, 107, 110, 113, 127], "avgsal": 4, "naiv": [4, 27, 95, 124], "month": [4, 75], "naiveavg": 4, "although": [4, 5, 7, 13, 26, 30, 41, 48, 61, 72, 81, 83, 86, 89, 93, 101], "improvedavg": 4, "tacitavg": 4, "vari": [4, 38, 67, 70, 88, 105, 113, 114, 117], "properli": [4, 43, 56, 73, 75, 97, 104], "edg": [4, 10, 11, 22, 38, 65, 70, 95], "exce": [4, 36, 65, 71, 93, 105, 106, 129], "greater": [4, 6, 14, 15, 16, 17, 20, 33, 41, 59, 60, 65, 74, 88, 93, 95, 102, 103, 113, 128], "twelv": 4, "instanc": [4, 5, 29, 31, 40, 46, 47, 55, 58, 69, 71, 77, 79, 81, 82, 83, 84, 86, 88, 90, 91, 92, 97, 100, 101, 103, 106, 108, 110, 113, 114, 119, 122, 123, 124], "thirteen": 4, "fourteen": 4, "clampedavg": 4, "prefer": [4, 7, 13, 46, 53, 78, 89, 117], "dynam": [4, 65, 79], "adjust": [4, 7, 13, 27, 31, 40, 41, 43, 50, 65, 69, 74, 75, 78, 95, 112, 114, 122, 125, 129, 130], "univers": [4, 42], "generalizedavg": 4, "involv": [4, 30, 31, 33, 35, 36, 38, 39, 53, 58, 60, 68, 69, 70, 72, 73, 77, 79, 80, 82, 83, 85, 88, 89, 92, 94, 95, 96, 99, 101, 105, 106, 110, 113, 115, 117, 119, 122, 125, 127, 128, 130, 131], "scenario": [4, 27, 32, 42, 47, 60, 72, 80, 83, 113, 131], "due": [4, 26, 27, 46, 53, 75, 101, 105, 113, 125, 135], "errorhandledavg": 4, "explicit": [4, 22, 48, 62, 80, 90, 130], "assert": [4, 27], "safeavg": 4, "relianc": 4, "mainten": 4, "essenti": [4, 31, 42, 47, 67, 69, 74, 75, 79, 80, 82, 83, 84, 86, 97, 105, 112, 122, 130, 135], "situat": [4, 79, 89], "shapepreservingavg": 4, "accur": [4, 10, 11, 26, 52, 74, 75, 86, 89, 96, 110, 114, 128, 130, 131], "intend": [4, 86, 123], "articl": [4, 40, 43, 45, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131], "refin": [4, 27, 31, 52, 60, 82, 130], "happi": [4, 38, 65, 75, 121, 133], "fourth": [5, 20, 32, 39, 43, 75, 96, 131], "session": [5, 72], "open": [5, 20, 22, 53, 73], "vice": [5, 41, 83, 97], "versa": [5, 41, 83, 97], "aren": [5, 20, 112], "unclos": 5, "data": [5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 35, 42, 47, 48, 55, 59, 62, 65, 70, 71, 78, 80, 88, 95, 102, 103, 104, 112, 118, 126, 130, 131, 135], "depth": [5, 20, 21, 24, 43], "term": [5, 12, 22, 24, 26, 34, 41, 44, 50, 54, 62, 64, 69, 74, 76, 87, 92, 98, 99, 109, 120, 132, 133, 134, 135], "map": [5, 7, 13, 20, 21, 24, 43, 46, 59, 61, 68, 71, 80, 84, 95, 97, 100, 115, 118, 135], "decreas": [5, 20, 25, 31, 103, 116], "affect": [5, 20, 36, 58, 82, 83, 94], "track": [5, 30, 32, 36, 48, 60, 70, 74, 124, 129], "parenthesis_depth_chang": 5, "techniqu": [5, 24, 32, 37, 46, 47, 57, 70, 71, 75, 79, 85, 86, 92, 94, 95, 97, 112, 113, 123, 124, 125, 128, 131, 133], "di": [5, 20], "variat": [5, 6, 15, 16, 17, 25, 101, 131], "enhanc": [5, 30, 43, 48, 52, 67, 99, 113, 118, 126, 130], "capabl": [5, 8, 27, 50, 67, 80, 94, 103, 114, 121], "df": [5, 20], "sourc": [5, 20], "snippet": [5, 42, 67, 94, 113], "turtl": [5, 20, 85], "joi": [5, 20, 133], "languag": [5, 10, 11, 18, 19, 20, 56, 59, 71, 77, 88, 89, 91, 94, 102, 103, 114, 118, 125, 130, 133, 135], "unbalanc": [5, 20], "respect": [5, 20, 25, 43, 46, 48, 50, 55, 66, 85, 89, 92, 101, 111, 116], "reshap": [5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 47, 51, 62, 73, 78, 95, 110, 117, 125, 126], "conduct": [5, 29, 33, 73, 103, 114], "thorough": 5, "programmat": 5, "cmpx": [5, 6, 10, 11, 14, 15, 16, 18, 19, 20, 27, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 70, 80, 103, 113, 117, 118], "fastest": [5, 20, 21, 42, 86, 95, 114, 117], "under": [5, 20, 21, 25, 37, 55, 106], "100": [5, 6, 14, 15, 16, 17, 20, 26, 30, 31, 36, 81, 96, 99, 105, 111, 117], "vr": [5, 20], "establish": [5, 42, 43, 61, 67, 84, 86, 104, 127], "fulfil": [5, 6, 15, 16, 17, 43, 106], "At": [5, 21, 24, 50, 57, 66, 94, 128], "below": [5, 20, 30, 36, 39, 66, 74, 84, 100, 104, 113, 114, 126], "ba": [5, 20], "bn": [5, 20], "robust": [5, 29, 32, 42, 97, 110, 115], "focus": [5, 31, 33, 36, 38, 52, 55, 68, 69, 73, 88, 94, 101, 105, 123, 125, 128, 133], "methodologi": [5, 73, 114, 123, 131], "valid": [5, 22, 24, 29, 36, 89, 92, 93, 96, 97, 100, 106, 107, 127], "offer": [5, 60, 62, 67, 71, 72, 104, 123, 125, 133], "experi": [5, 12, 55, 125, 133], "perl": [5, 10, 11, 18, 19], "modern": [5, 135], "featur": [5, 20, 37, 45, 135], "replac": [5, 7, 13, 14, 20, 21, 24, 40, 43, 56, 60, 62, 111, 113, 117, 121, 126], "overhead": [5, 10, 38, 70, 95, 113], "regex": [5, 10, 11, 18, 19, 20, 27, 32, 60, 117], "less": [5, 11, 18, 19, 20, 33, 35, 36, 40, 41, 48, 50, 52, 70, 73, 88, 93, 95, 102, 103, 113, 124, 130], "pure": [5, 57], "develop": [5, 29, 56, 59, 70, 75, 95, 117, 133, 135], "relev": [5, 21, 73, 75, 128, 129, 131], "re0": [5, 20], "plain": [5, 20], "text": [5, 8, 10, 11, 18, 19, 20, 26, 29, 54, 61, 77, 99, 107, 126, 127], "escap": [5, 20, 60], "fi": [5, 20], "humor": 5, "yet": [5, 20, 21, 46, 58, 61, 82, 121, 124, 126, 130], "built": [5, 11, 18, 19, 48, 50, 65, 81, 130], "dure": [5, 7, 13, 21, 42, 47, 50, 55, 68, 72, 82, 95, 108, 125, 128], "deliber": 5, "mismatch": [5, 68, 73, 93], "invok": [5, 124], "report": 5, "nd": [5, 20], "np": [5, 20], "execut": [5, 6, 15, 16, 17, 20, 32, 36, 42, 43, 46, 47, 50, 59, 68, 80, 81, 92, 95, 103, 105, 112, 113, 114, 117, 118, 123, 125], "maintain": [5, 20, 25, 33, 35, 52, 56, 70, 73, 77, 80, 81, 84, 85, 86, 94, 114, 119, 123, 124, 126, 135], "except": [5, 22, 27, 48, 102, 119], "pars": [5, 6, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 93], "gain": [5, 27, 71, 89, 123], "consider": [5, 42, 77, 79, 113, 118], "elegantli": [5, 27, 35, 40, 131], "manag": [5, 38, 43, 62, 65, 75, 79, 89, 97, 113, 121], "statement": [5, 12, 20, 21, 22, 34, 40, 44, 46, 54, 64, 73, 76, 87, 98, 109, 120, 132, 133, 134], "phase": [6, 7, 13, 15, 16, 17, 21, 24], "point": [6, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 41, 50, 66, 74, 77, 83, 85, 88, 90, 92, 94, 95, 105, 119, 135], "peopl": [6, 15, 16, 17, 24], "score": [6, 14, 15, 16, 17], "65": [6, 14, 15, 16, 17, 29, 84], "higher": [6, 14, 15, 16, 17, 22, 25, 71, 78, 97, 104, 111, 129, 131, 135], "random": [6, 10, 11, 14, 15, 16, 17, 18, 19, 21, 31, 39, 40, 41, 42, 65, 71, 80, 105, 109, 113, 114], "total": [6, 11, 15, 16, 17, 18, 19, 20, 21, 24, 30, 42, 51, 54, 71, 73, 74, 80, 81, 83, 99, 108, 110, 111, 128, 129, 130, 131, 135], "individu": [7, 11, 13, 18, 19, 27, 47, 49, 55, 79, 88, 93, 94, 105, 122, 123, 125, 126, 128, 133], "succeed": [6, 15, 16, 17], "success": [6, 10, 11, 18, 19, 30, 116], "failur": [11, 92], "fraction": [6, 15, 16, 17, 31, 36, 61, 68], "expect": [11, 18, 19, 22, 35, 39, 40, 41, 43, 45, 58, 65, 73, 78, 95, 105, 107, 113, 115, 118], "These": [8, 10, 20, 47, 50, 62, 65, 67, 84, 88, 106, 128], "slightli": [30, 42, 48, 62], "import": [6, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 29, 31, 41, 42, 53, 75, 77, 79, 82, 85, 88, 91, 94, 102, 111, 112, 118, 122], "mathemat": [6, 7, 8, 13, 14, 15, 16, 17, 20, 21, 30, 47, 59, 61, 68, 70, 71, 77, 83, 88, 89, 95, 97, 99, 107, 122, 127, 133, 135], "significantli": [6, 15, 16, 31, 38, 43, 77, 80, 114, 118, 125], "impact": [6, 15, 16, 113], "comparison": [6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 38, 48, 55, 56, 58, 81, 88, 93, 103, 104, 111, 113, 124, 130], "dataset": [6, 15, 16, 42, 52, 56, 70, 72, 73, 103, 113, 114, 123], "1e6": [6, 10, 11, 14, 15, 16, 18, 19, 103, 117], "million": [6, 10, 11, 14, 15, 16, 17, 18, 19, 20, 103, 113, 117], "cy": [6, 10, 11, 14, 15, 16, 18, 19, 20, 27, 30, 31, 33, 35, 39, 41, 42, 70, 80, 103, 117], "load": [], "custom": [24, 47, 52, 60, 81], "6e": [6, 14, 15, 16, 43, 103, 117], "4e": [6, 14, 15, 16, 31], "3451": [6, 14, 15, 16], "8e": [6, 14, 15, 16, 35, 42, 43], "4126": [6, 14, 15, 16], "workload": [], "similar": [20, 21, 29, 30, 31, 42, 43, 49, 53, 63, 71, 90, 94, 95, 105, 111, 125, 126, 128], "high": [37, 43, 51, 63, 88, 133], "least": [6, 15, 16, 17, 20, 22, 30, 38, 79, 112, 113, 122, 124], "amount": [6, 15, 16, 17, 47], "done": [11, 18, 19, 20, 21, 24, 68, 73, 74, 91, 102, 126], "fridai": 72, "assum": [81, 105, 111, 125, 131], "wouldn": [22, 29], "remov": [11, 14, 18, 19, 20, 21, 22, 24, 27, 29, 32, 36, 42, 50, 51, 52, 53, 56, 72, 74, 80, 85, 90, 105, 106, 119, 128, 129], "interv": [6, 15, 16, 17, 29, 41, 86, 88], "cutoff": [14, 15, 84, 122, 129], "highlight": [24, 27, 30, 39, 83, 86, 111, 113, 127], "mj4wylkrbho": [7, 13], "io": [6, 7, 8, 13, 14, 15, 16, 21, 24], "demonstr": [6, 7, 13, 15, 16, 24, 27, 30, 40, 43, 52, 56, 57, 60, 65, 81, 85, 89, 91, 92, 94, 97, 99, 105, 113, 118, 121, 126, 128, 130], "sequenc": [7, 10, 18, 19, 39, 46, 73, 74, 95, 97, 112, 113, 114, 117, 124], "subtract": [7, 13, 20, 21, 22, 23, 25, 41, 59, 63, 80, 83, 95, 103, 108, 112, 113, 128], "natur": [7, 13, 24, 28, 29, 30, 70, 75, 83, 113, 125], "etc": [7, 13, 24, 33], "preserv": [13, 22, 27, 51, 129, 135], "clearli": [92, 110], "ident": [6, 7, 8, 12, 13, 14, 15, 16, 20, 22, 24, 26, 33, 37, 56, 59, 67, 92, 97, 100, 113], "abov": [6, 7, 13, 15, 16, 17, 20, 22, 31, 39, 53, 68, 70, 75, 79, 82, 107, 108, 119], "particularli": [7, 10, 13, 27, 35, 41, 65, 67, 68, 77, 81, 88, 97, 102, 133, 135], "altern": [7, 13, 20, 24, 26, 28, 35, 38, 39, 43, 46, 48, 58, 63, 72, 73, 83, 99, 102, 104], "design": [7, 12, 34, 44, 48, 54, 64, 76, 83, 87, 97, 98, 109, 120, 132, 133, 134], "notabl": [7, 28, 48, 105, 125], "modulu": [7, 13, 23, 86, 106, 122], "pariti": [7, 13, 60, 101], "beauti": [7, 30], "balanc": [7, 12, 70, 73], "correctli": [7, 11, 13, 18, 19, 30, 32, 47, 52, 60, 66, 68, 70, 81, 85, 86, 88, 94, 100, 102, 114], "regardless": [7, 108], "overtak": [7, 13, 21, 22, 24], "pad": [7, 13, 21, 22, 25, 35, 41, 65, 105, 108, 129], "ex": [7, 13, 21], "scan": [6, 7, 13, 14, 15, 16, 20, 21, 24, 33, 60, 70, 129], "cumul": [7, 13, 20, 21, 24, 55, 60, 95], "reli": [7, 24, 85, 102], "relat": [7, 13, 30, 31, 46, 73, 75, 84, 93, 111], "immun": 7, "fork": [6, 7, 13, 14, 15, 16, 20, 22, 24, 73, 88, 90, 130], "talli": [6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 50, 53, 78, 81, 135], "item": [11, 13, 18, 19, 22, 47, 53, 74, 79, 94, 102, 135], "notat": [6, 8, 13, 14, 15, 16, 50, 61, 62, 77], "describ": [13, 75, 94, 95, 123], "modul": [7, 13], "inaugur": [7, 13], "past": [7, 13, 42], "One": [7, 8, 11, 13, 18, 19, 22, 29, 30, 31, 33, 35, 41, 52, 56, 58, 61, 63, 74, 75, 83, 116, 120, 135], "focu": [7, 13, 31, 37, 41, 42, 43, 48, 65, 68, 72, 73, 75, 83, 95, 97, 103, 111, 122, 123, 131], "ten": [7, 13, 21, 66, 89], "consecut": [7, 13, 31, 41, 46, 58, 68, 70, 73, 119, 124], "offset": [7, 11, 13, 18, 19, 21, 86, 95, 130], "switch": [7, 13, 20, 22, 41, 48, 80, 90, 97, 102, 118, 125], "option": [6, 7, 11, 13, 15, 16, 17, 18, 19, 26, 70, 86, 90], "build": [7, 12, 13, 24, 33, 34, 35, 39, 44, 54, 64, 76, 87, 98, 109, 120, 121, 125, 132, 134], "As": [7, 11, 13, 18, 19, 20, 25, 30, 42, 58, 60, 70, 74, 80, 83, 110, 113, 116, 130], "scientist": [7, 13], "mathematician": [7, 13], "advantag": [7, 13, 47, 94, 97, 111, 125], "disadvantag": [7, 13], "benefit": [7, 13, 18, 19, 29, 113], "your": [6, 7, 12, 13, 14, 15, 16, 22, 34, 44, 54, 55, 56, 59, 61, 64, 72, 76, 80, 84, 87, 91, 94, 95, 98, 105, 109, 114, 117, 118, 120, 132, 133, 134], "person": [7, 13, 21], "share": [7, 13, 22, 113, 114], "yourself": [7, 13], "incorrect": [7, 13, 94, 102], "request": [7, 13, 65], "framework": [7, 13, 25, 67], "content": [7, 13, 60, 68], "locat": [7, 13, 21, 32, 46, 83, 91, 100, 103, 113, 115, 130], "longer": [7, 13, 25, 28, 35, 38], "mere": [7, 13, 38, 66, 74, 78, 94], "wish": [7, 13, 29], "o": [7, 11, 13, 20, 24, 43, 53, 79, 119], "fantast": [7, 13, 37], "idea": [7, 13, 80, 94, 112, 121, 135], "benefici": [7, 13], "occur": [7, 11, 13, 18, 19, 25, 38, 40, 52, 68, 72, 105, 122, 126, 129], "underbar": [7, 13, 21], "counterbalanc": [7, 13], "similarli": [7, 13, 20, 22, 38, 110, 113, 115, 119, 129], "still": [7, 11, 13, 18, 19, 20, 21, 22, 30, 35, 38, 40, 46, 50, 72, 74, 78, 82, 92, 135], "emploi": [7, 13, 31, 35, 48, 56, 67, 70, 72, 75, 77, 80, 83, 85, 86, 91, 93, 95, 97, 114, 123, 128], "manner": [7, 13, 20, 21, 27, 40, 68, 71, 86, 119], "fascin": [7, 13, 58, 71, 122, 133], "overtaken": [7, 13], "appropri": [7, 13, 31, 35, 65, 79, 82, 85, 86, 94, 95, 119, 130], "did": [6, 7, 13, 15, 16, 17, 20, 21, 24, 37], "influenc": [7, 13, 25, 37, 128], "formul": [7, 13, 43, 46, 61, 112], "began": [7, 13], "view": [7, 13, 31, 86, 117, 119, 130], "whatev": [7, 11, 13, 18, 19], "global": [7, 13], "current": [7, 13, 20, 22, 25, 26, 33, 40, 43, 60, 70, 124], "tie": [7, 13, 21], "major": [7, 11, 13, 18, 19, 20, 21, 24, 40, 43, 135], "symbol": [7, 13, 46, 50, 51, 56, 58, 79, 86, 88, 127, 135], "conclud": [7, 8, 13, 39, 46, 47, 73, 93], "object": [8, 26, 32, 53, 72, 94, 108, 123, 125], "linear": 8, "variabl": [6, 8, 10, 11, 15, 16, 17, 18, 19, 33, 46, 62, 65, 74, 75, 86, 88], "4x": 8, "1y": 8, "1z": 8, "2x": 8, "2y": 8, "2z": 8, "6x": 8, "3y": 8, "z": [8, 28, 57, 121], "verifi": [8, 10, 11, 18, 19, 28, 57, 68, 75, 89, 97, 100, 101], "substitut": [8, 26, 46, 50, 61, 102, 107, 127], "inde": [6, 8, 15, 16, 17, 21, 28, 40, 89, 93, 101], "outcom": [8, 28, 31, 56, 62, 91, 94, 131], "priori": 8, "cdot": [8, 26, 77, 107], "coeffici": [8, 33, 35], "satisfi": [8, 68, 93], "command": [8, 65, 68, 74, 97], "manipul": [8, 10, 12, 27, 34, 35, 39, 44, 54, 60, 61, 64, 65, 67, 70, 76, 81, 85, 87, 97, 98, 99, 107, 109, 115, 118, 120, 122, 125, 126, 128, 131, 132, 133, 134], "eleg": [8, 12, 34, 40, 44, 52, 54, 58, 59, 64, 67, 76, 83, 87, 91, 98, 107, 109, 114, 120, 126, 132, 134], "approxim": [8, 20, 26, 33, 35, 75], "invers": [8, 21, 24, 25, 28, 93, 97, 115], "hotel": [8, 123], "bodewig": 8, "scheme": [8, 120], "v_": 8, "v_n": 8, "2i": [8, 21], "v\u1d62": 8, "\u2081": 8, "2v\u1d62": 8, "estim": 8, "stabl": [8, 51], "11": [8, 38, 45, 59, 69, 71, 93, 94, 106, 122], "aspect": [8, 12, 29, 34, 37, 42, 44, 54, 64, 76, 86, 87, 98, 108, 109, 120, 132, 134], "recent": [8, 95], "propos": [8, 26], "solemani": 8, "suggest": [8, 35, 83, 85], "frac": [8, 26, 36, 61, 77, 99, 107, 127], "trace": 8, "mm\u1d40": 8, "systemat": [8, 65, 84, 90, 92, 94], "procedur": [8, 22, 40, 72, 123], "toward": [8, 12, 34, 44, 54, 64, 76, 87, 98, 109, 118, 120, 130, 132, 134], "gauss": [8, 87], "jordan": 8, "gaussjordan": 8, "ml": 8, "elim": 8, "col": 8, "p": [8, 24, 29, 32, 33, 50, 60, 77, 80, 103, 115, 122, 123, 130], "pivot": 8, "th": 8, "pth": 8, "mat": 8, "diag": 8, "red": 8, "2014": [8, 25, 26, 27, 28, 29, 30, 31, 32], "upcom": 8, "titl": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "space": [10, 18, 19, 20, 21, 25, 27, 34, 35, 41, 42, 44, 50, 58, 60, 65, 70, 71, 74, 105, 118], "delimit": [10, 11, 18, 19, 54, 126], "lead": [6, 10, 11, 15, 16, 18, 19, 21, 25, 26, 27, 28, 31, 32, 33, 35, 41, 48, 50, 52, 55, 56, 60, 71, 72, 74, 77, 83, 88, 89, 90, 95, 104, 112, 116, 119, 124, 126, 128, 129, 131], "trail": [10, 11, 18, 19, 32, 43, 44, 74, 75, 94, 103, 117, 128], "account": [11, 18, 19, 27, 40, 60, 74, 86, 95, 110, 112, 113, 114, 115, 121, 130, 131], "dash": [10, 11, 18, 19], "split": [10, 18, 19, 21, 22, 27, 32, 74, 76, 86, 88, 90, 94, 98, 117, 120], "letter": [11, 18, 19, 27, 29, 40, 43, 45, 46, 48, 53, 66, 74, 78, 81, 85, 89, 99, 101, 105, 121, 130], "string": [10, 11, 18, 19, 20, 22, 27, 42, 49, 57, 58, 60, 66, 84, 88, 115, 117, 121, 126, 129, 135], "partit": [10, 11, 18, 19, 27, 39, 41, 46, 74, 88, 113, 115, 123, 126, 129, 132], "extract": [52, 58, 75, 80, 83, 90, 128, 130], "snag": [], "fortun": [], "come": [11, 18, 19, 24, 27, 30, 42, 49, 85, 91, 117, 133], "background": [11, 12, 18, 19, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "search": [10, 11, 18, 19, 20, 46], "invert": [10, 11, 18, 19, 102], "class": [11, 18, 19, 67], "occurr": [36, 41, 43, 52, 53, 56, 60, 71, 81, 112, 114, 122, 129, 131, 135], "solut": [12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 29, 32, 34, 37, 38, 39, 41, 42, 44, 45, 47, 48, 52, 54, 56, 60, 63, 64, 67, 69, 72, 73, 76, 79, 82, 83, 87, 91, 93, 94, 95, 98, 100, 102, 103, 105, 109, 112, 114, 118, 120, 126, 130, 132, 134], "vfi": [10, 18, 19], "extran": [11, 18, 19], "metadata": [], "process": [20, 22, 33, 35, 36, 42, 43, 48, 51, 52, 53, 56, 58, 60, 65, 67, 68, 69, 70, 71, 72, 74, 75, 77, 79, 80, 82, 84, 88, 89, 90, 92, 94, 97, 99, 103, 106, 107, 110, 111, 112, 113, 114, 116, 119, 121, 122, 123, 125, 127, 128, 131], "extra": [46, 59, 86, 92, 95, 105, 117, 129], "further": [10, 20, 22, 24, 43, 45, 48, 49, 51, 52, 55, 60, 66, 67, 71, 77, 78, 80, 82, 83, 89, 94, 97, 105, 111, 113, 118, 128, 130, 131], "analyz": [11, 18, 19, 32, 38, 49, 56, 73, 81, 83, 93, 102, 104, 112, 113, 117, 124, 125, 128, 130, 131], "adjac": [10, 11, 18, 19, 27, 32, 33, 60, 65, 70, 80, 97, 103, 113, 124], "pairwis": [10, 11, 18, 19, 31, 41, 124], "insert": [11, 18, 19, 21, 22, 24, 36, 46, 50, 58, 86, 92, 93, 112, 113], "artifici": [], "avoid": [10, 11, 18, 19, 21, 22, 29, 33, 38, 39, 40, 41, 43, 47, 56, 80, 81, 94, 116, 118, 119], "unnecessari": [22, 25, 29, 41, 66, 70, 80, 94, 95, 125, 129], "maxim": [6, 15, 16, 17], "prepend": [10, 11, 18, 19, 21, 46, 70, 85, 117], "cheaper": [], "compil": [], "shown": [30, 52, 53, 72, 74, 99, 113, 126], "abc": [10, 11, 18, 19, 86, 121, 135], "substr": 130, "engin": [10, 11, 18, 19, 20], "tend": 117, "costli": [], "faster": [6, 15, 16, 20, 26, 30, 32, 43, 47, 70, 114], "confirm": [22, 26, 57, 60, 68, 79, 89, 92, 93, 96, 97, 100, 107, 113], "especi": [11, 18, 19, 29, 31, 43, 45], "challeng": [10, 11, 12, 24, 27, 30, 33, 34, 35, 38, 40, 44, 51, 54, 55, 64, 67, 74, 75, 76, 87, 93, 98, 102, 109, 114, 120, 130, 132, 133, 134], "skill": [12, 27, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 133, 134], "push": [12, 34, 44, 54, 64, 72, 76, 87, 98, 109, 120, 132, 134], "orient": [12, 27, 30, 34, 44, 54, 64, 76, 80, 87, 98, 109, 120, 132, 133, 134], "height": [12, 34, 44, 54, 64, 70, 76, 87, 98, 109, 118, 120, 132, 134], "algorithm": [12, 34, 44, 54, 64, 70, 76, 81, 87, 98, 109, 113, 120, 132, 133, 134], "puzzl": [12, 34, 44, 54, 64, 76, 83, 87, 98, 109, 120, 132, 134], "comprehens": [12, 34, 44, 54, 64, 73, 76, 87, 98, 109, 120, 132, 134], "workout": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "muscl": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "quick": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "seemsa": 12, "me": [12, 21, 27, 65], "aplquest": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132], "brief": [12, 34, 35, 44, 54, 64, 74, 76, 87, 98, 109, 120, 132], "descript": [12, 34, 43, 44, 54, 64, 72, 76, 80, 87, 95, 98, 104, 105, 109, 117, 120, 131, 132], "grade": [12, 17, 22, 24, 39, 42, 68, 87], "ina": 12, "word": [12, 27, 32, 38, 39, 42, 49, 58, 92, 105], "crisi": 12, "home": 12, "rang": [12, 24, 35, 75, 81, 86, 89, 110, 114, 118, 133], "float": [12, 21, 22, 24, 26, 135], "boat": 12, "forth": [12, 24, 40, 89], "isa": 12, "move": [11, 12, 18, 19, 20, 21, 22, 28, 30, 35, 78, 80, 82, 87, 92, 100, 116, 128], "salvat": 12, "click": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "navig": [12, 34, 44, 54, 58, 64, 76, 87, 98, 109, 120, 132, 133, 134], "menu": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "page": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 133, 134], "necessari": [12, 34, 39, 43, 44, 53, 54, 60, 61, 64, 65, 76, 77, 86, 87, 88, 93, 95, 98, 100, 105, 109, 110, 113, 114, 120, 122, 125, 131, 132, 134], "hint": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 133, 134], "guid": [12, 34, 44, 48, 54, 64, 76, 84, 86, 87, 95, 98, 109, 116, 118, 120, 132, 133, 134], "primit": [12, 25, 34, 44, 54, 64, 66, 76, 87, 90, 98, 102, 109, 120, 130, 132, 134], "strive": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "carefulli": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "simpler": [12, 21, 24, 34, 44, 54, 64, 71, 76, 83, 87, 98, 109, 117, 120, 132, 134], "momentum": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "hesit": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "revisit": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "document": [12, 18, 19, 34, 43, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "inspir": [12, 34, 44, 54, 64, 76, 87, 98, 109, 118, 120, 132, 134], "often": [11, 12, 18, 19, 27, 34, 35, 37, 43, 44, 46, 54, 56, 64, 65, 67, 76, 83, 87, 89, 98, 109, 112, 120, 132, 134, 135], "learn": [12, 20, 29, 34, 43, 44, 54, 64, 76, 87, 98, 109, 120, 132, 133, 134], "luck": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "ever": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 133, 134], "favor": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "com": [10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 112], "blob": [10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 112], "2013": [10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 133], "comment": [13, 14, 20, 21, 22, 23, 24, 114], "glyph": [13, 14, 18, 19, 20, 21, 22, 23, 24], "concept": [13, 14, 18, 19, 20, 21, 22, 23, 24, 38, 45, 70, 71, 83, 89, 90, 97, 100, 127, 135], "summari": [13, 28, 39, 40, 59, 60, 70, 84, 97, 99, 122, 126, 128, 130], "genter": 13, "percent": [6, 14, 15, 16], "pass": [6, 14, 15, 16, 17, 20, 22, 33, 75, 79, 102, 117, 125], "pxo2btomxp4": [6, 14, 15, 16], "scaler": [6, 7, 15, 16, 18, 19, 20, 21, 24], "fals": [6, 14, 15, 16, 20, 22, 28, 41, 48, 55, 57, 104, 111, 128], "percentag": [6, 14, 15, 16, 17], "mathmat": [], "siginific": [], "penalti": 14, "evalut": [6, 15, 16, 18, 19, 20], "librari": [6, 10, 11, 14, 15, 16, 18, 19, 20], "roll": [6, 10, 11, 14, 15, 16, 18, 19, 21, 24, 30, 76, 131], "workspac": [6, 10, 11, 14, 15, 16, 17, 18, 19, 20, 105, 117], "baselin": [6, 10, 11, 14, 15, 16, 18, 19], "inner": [6, 14, 15, 16, 28, 47, 82, 89, 90, 104, 126, 135], "bound": [6, 14, 15, 16, 38, 127, 135], "constant": [14, 20, 21, 24, 26, 29, 66, 67, 74, 86, 92, 103, 128], "revers": [6, 14, 15, 16, 20, 21, 22, 24, 29, 39, 52, 58, 72, 74, 89, 92, 93, 100, 105, 116, 117, 123, 125, 130, 132], "cuttoff": [6, 15, 16], "taken": [6, 14, 15, 16, 24, 39, 110], "atop": [6, 14, 15, 16, 20, 21, 22, 24, 47], "raveld": [6, 15, 16], "becuas": [6, 15, 16, 20, 21], "diamond": [6, 14, 15, 16, 20, 21, 22, 46], "scientif": [6, 14, 15, 16], "tack": [6, 7, 14, 15, 16, 20], "reus": [6, 14, 15, 16, 33, 53], "extens": [6, 14, 15, 16, 20, 21, 24, 43, 72, 112], "conform": [6, 14, 15, 16, 82, 92, 97], "transcript": [17, 18, 19, 20, 21, 22, 23, 24, 72, 104], "69": [6, 15, 16, 17], "72": [6, 15, 16, 17], "moment": [6, 15, 16, 17], "big": [6, 15, 16, 17, 21], "quit": [6, 15, 16, 17, 21, 22, 24, 26, 40, 45, 47, 61, 89], "summat": [6, 15, 16, 17, 24, 47, 95, 99, 104], "algebra": [6, 15, 16, 17, 28, 35, 61], "magnet": [6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 25, 46], "forget": [6, 15, 16, 17], "kind": [6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 52], "mgkm2qcpwa": [10, 11, 18, 19], "axi": [11, 18, 19, 20, 21, 22, 24, 38, 50, 68, 93, 94, 100, 122], "regexr": [11, 18, 19], "quot": [11, 18, 19, 64], "fix": [10, 11, 18, 19, 20, 41, 50, 52, 88, 121], "cut": [11, 18, 19, 27, 88, 129], "field": [10, 11, 18, 19, 75], "pick": [10, 11, 18, 19, 20, 22], "wise": [10, 11, 18, 19, 24, 31, 41, 65, 135], "caten": [11, 18, 19, 20, 21, 22, 24, 135], "flip": [11, 18, 19, 20, 23, 60, 71, 88, 90, 91, 100, 115, 118, 123, 125, 132, 135], "concatin": [18, 19, 24], "bracket": [10, 11, 18, 19, 20, 49, 59, 63, 91], "randomli": [10, 11, 18, 19], "compat": [18, 19, 37, 68], "mayb": [11, 18, 19, 24], "Or": [11, 18, 19, 20], "area": [11, 18, 19, 87], "petit": [11, 18, 19], "um": [11, 18, 19, 21, 24], "fairli": [11, 18, 19], "revel": [11, 18, 19, 21, 22, 41, 51, 72, 79, 112], "grab": [11, 18, 19, 22, 125], "num": [11, 18, 19], "noth": [11, 18, 19, 20, 22], "came": [11, 18, 19], "fine": [11, 18, 19, 21, 22], "e3": [11, 18, 19], "successfulli": [11, 18, 19, 53, 71, 79, 111, 121, 125], "token": [10, 11, 18, 19, 75], "superior": [11, 18, 19], "cheat": [11, 18, 19, 26], "far": [11, 18, 19, 20, 26, 70, 124], "uh": [11, 18, 19, 21], "env": [11, 18, 19], "overlap": [11, 18, 19, 39, 58, 126], "becom": [11, 18, 19, 20, 21, 22, 24, 40, 41, 55, 61, 67, 82, 89, 92, 127], "shorter": [11, 18, 19, 25, 28, 30, 41, 43, 50, 54, 70, 83, 91, 107, 124], "line": [11, 18, 19, 20, 21, 35, 65, 77, 94, 97, 112, 119, 121], "front": [11, 18, 19, 20, 21, 35, 46, 54, 70, 98, 121, 129], "trigger": [11, 18, 19], "brace": [11, 18, 19, 20, 22, 24, 47, 48, 49, 50, 51, 56, 59, 130], "pretti": [11, 18, 19], "memori": [11, 18, 19, 39, 70, 95, 113, 118], "whole": [11, 15, 16, 18, 19, 20, 21, 22, 23, 24, 45, 46, 50, 55, 62, 63, 69, 79, 125, 127], "later": [11, 18, 19, 20, 67, 76, 80, 113, 118, 128], "spend": [11, 18, 19], "lot": [11, 18, 19, 21, 24, 42, 48, 50], "everyth": [11, 18, 19, 20, 21, 24, 46, 50, 72, 81, 100, 125, 129], "unicod": [11, 18, 19, 29, 42, 86, 88, 135], "expens": [11, 18, 19, 29, 42], "somewhat": [11, 18, 19, 43, 135], "rewrit": [11, 18, 19, 28, 46], "cheap": [11, 18, 19], "extend": [11, 18, 19, 24, 33, 40, 44, 58, 65, 71, 118, 127, 135], "detect": [11, 18, 19, 29], "inequ": [11, 18, 19, 21, 111], "spin": [11, 18, 19], "blow": [11, 18, 19], "water": [11, 18, 19], "slowest": [11, 18, 19], "gave": [11, 18, 19], "speed": [11, 18, 19, 20, 22, 80, 103, 105, 113, 125], "save": [11, 18, 19, 25, 74], "el0_rb4ttpa": 20, "paren": 20, "norrmal": 20, "merg": [20, 119, 123, 125], "trade": [20, 27], "act": [20, 46, 68, 78, 88, 125], "top": [20, 21, 22, 24, 25, 33, 68, 89, 94, 118, 130], "explanatori": 20, "bottom": [20, 38, 68, 118], "independ": [20, 38, 71, 97], "middl": [7, 20, 21, 22, 50, 51, 73, 90, 92, 101, 110, 116], "iof": 20, "unmatch": 20, "aplwiki": [20, 21, 24], "idenit": 20, "meta": 20, "suffix": [20, 21], "condtion": 20, "realiz": [20, 25, 35, 75, 113, 118], "drop": [20, 27, 31, 41, 46, 72, 86, 90, 115, 116, 129], "simlar": 20, "nor": 20, "neither": 20, "outsid": [20, 21, 22, 60, 62, 101], "impli": [20, 24, 62, 72, 96, 107], "intersect": [20, 22, 29, 36, 38, 42, 73, 83, 86, 101, 119], "present": [20, 22, 36, 40, 42, 43, 53, 60, 72, 75, 79, 81, 85, 94, 110, 112, 128, 133], "iter": [20, 24, 33, 39, 92, 123, 124, 125], "glue": 20, "variant": [20, 127], "rotat": [20, 22, 32, 35, 74, 77, 90, 130], "parser": 20, "unpair": 20, "blank": 20, "1000": [11, 20, 31, 36, 39, 41, 42, 43, 70, 80, 81, 97, 111, 117], "synchron": 20, "interrupt": 20, "seper": [20, 21, 22], "immedi": [20, 46, 50, 58, 74, 78, 79], "preced": [20, 46, 67, 72, 90], "evaul": 20, "lamin": 20, "rank_": [20, 24], "layer": [20, 89, 116, 123, 125], "typic": [10, 20, 25, 35, 51, 55, 75, 95, 110, 125, 127], "conjunct": 20, "sixteen": 20, "amus": 20, "bouch": 20, "few": [20, 22, 26, 29, 36, 39, 42, 68, 93], "plan": [20, 29, 85], "lookup": [20, 75, 89, 99, 115], "wasn": [20, 21, 22], "pan": 20, "stack": [20, 21, 33, 41, 94, 98, 105, 130], "enclosur": [20, 21, 78, 90, 105], "leav": [20, 55, 59, 62, 90], "unaffect": 20, "symmetr": [20, 22], "cool": 20, "tine": 20, "tini": 20, "part": [6, 20, 21, 37, 50, 56, 68, 90, 115, 124, 128], "haven": 20, "defens": 20, "enjoi": 20, "ye": [20, 21, 22], "bigger": 20, "coupl": [20, 22, 24, 50, 52, 66, 81, 129], "meter": 20, "win": [20, 131], "goe": [20, 22, 63], "finish": 20, "dip": 20, "succinct": 20, "doubl": [20, 64, 68, 87, 113], "continu": [20, 27, 31, 33, 52, 55, 59, 65, 78, 81, 92, 110, 124], "suffici": [20, 26, 62], "invalid": [20, 57, 73], "spell": [20, 21], "yd": 20, "yeah": [20, 24], "nose": 20, "wherea": [20, 29], "termin": 20, "suppli": 20, "break": [6, 15, 16, 20, 22, 24, 27, 28, 89, 92, 110, 122, 124], "got": [20, 21, 24], "anymor": [20, 22, 40, 50], "guess": 20, "OR": [20, 60], "squeez": 20, "powermatch": 20, "heavi": 20, "weight": [20, 89], "circumv": 20, "won": [20, 21, 26, 83, 95, 97, 110], "strand": [20, 90, 135], "squar": [21, 25, 28, 37, 49, 64, 80, 83, 89, 91, 101, 106, 109, 135], "vvaz3wedmpq": 21, "equailti": 21, "indec": 21, "eqal": 21, "beween": 21, "c": [21, 22, 23, 24, 25, 27, 29, 31, 32, 40, 41, 42, 56, 57, 58, 65, 75, 80, 81, 85, 86, 99, 112], "\u2099": 21, "20": [21, 33, 45, 47, 71, 75, 94, 110, 112, 116], "25": [21, 71, 80, 81, 89, 94, 116], "18": [21, 71, 75, 94, 107], "24": [21, 61, 68, 71, 94, 108], "industri": 21, "caus": [21, 22, 24, 46, 72], "singleton": 21, "prefix": [21, 55, 92, 135], "5x5": 21, "saw": 21, "expand": [21, 24, 50, 58, 79, 123, 127], "prototyp": [21, 129], "negat": [21, 41, 48, 52, 53, 63, 72, 82, 85, 88, 105, 122, 135], "echo": [21, 123], "concatent": 21, "reurn": 21, "identiri": 21, "encod": [21, 23, 24, 93, 121], "kei": [21, 24, 29, 51, 52, 53, 71, 75, 86, 108, 125, 132], "reorder": [21, 24, 49, 91, 123, 125], "direct": [21, 22, 24, 25, 30, 33, 38, 45, 51, 58, 67, 69, 72, 80, 83, 96, 97, 98, 104, 113, 118, 121, 122, 123, 125], "imaginari": [21, 28], "circular": [21, 24], "fo": 21, "45": [21, 26, 67], "degre": [21, 26, 61], "quarter": 21, "pi": [21, 24, 61, 64, 107], "785398163": 21, "radian": [21, 26], "triangl": [21, 28, 51, 80, 83, 107], "plane": [21, 28], "hypotenus": [21, 80, 83], "diagnal": 21, "root": [21, 24, 25, 37, 62, 80, 90], "vertial": 21, "bar": [21, 22, 24], "everywher": [21, 126], "mondad": [21, 24], "decod": [21, 24, 89, 121], "antibas": [21, 24], "absolut": [21, 24, 28, 77, 83, 95, 97], "innov": 21, "five": [21, 24, 46, 50, 65, 72, 74, 104, 110, 123, 125, 129, 131], "qualiti": [21, 53], "advanc": [21, 80, 112], "No": [21, 44, 100, 131], "illustr": [21, 25, 27, 29, 31, 36, 38, 55, 56, 65, 67, 68, 70, 74, 89, 90, 92, 94, 95, 97, 100, 102, 103, 113, 115, 125, 126, 127, 131], "attic": 21, "compromis": 21, "gate": 21, "been": [21, 22, 24, 43, 52, 82, 133, 135], "updat": [21, 43, 50, 60, 75], "necessarili": 21, "awkward": 21, "coordin": [21, 83], "complic": [21, 29, 43, 90], "yo": 21, "onto": 21, "cyclic": [21, 32, 51, 75, 77, 110], "almost": [21, 37, 78, 80], "shift": [21, 24, 39, 73, 121, 125, 130], "plai": 21, "increment": [21, 30, 59], "trickeri": 21, "sine": 21, "hand": [21, 37, 40, 47, 69, 81, 107], "i5": 21, "defend": [21, 131], "astronom": 21, "exceedingli": [21, 26], "unlik": [21, 135], "exist": [21, 22, 30, 36, 53, 68, 79, 96, 102, 113, 115, 121, 129], "equat": [21, 26, 83, 107], "obscur": [21, 70, 92], "ineffici": [21, 31, 33, 41, 70, 95, 102, 118, 131], "api": 21, "hei": [21, 44], "descend": [21, 85, 89, 95, 114], "16": [21, 45, 59, 67, 71, 80, 83, 89, 94, 116, 122], "auto": 21, "size": [21, 30, 31, 39, 41, 65, 68, 78, 79, 97, 103, 114, 126], "nreship2": 21, "a1": [21, 38], "rear": [21, 117], "liter": [21, 39, 124, 127], "densiti": 21, "roundabout": 21, "conclus": [21, 38, 41, 69, 101, 105], "alpha": [21, 26, 40, 46, 47, 61, 66, 72, 88, 90, 111, 119, 121, 123, 126, 127], "nobodi": 21, "abl": [21, 47, 110], "wors": 21, "beta": 21, "recogn": [21, 24, 25, 35, 40, 47, 57, 86, 97, 105], "shouldn": [21, 97], "1i": 21, "3i": 21, "angl": [21, 26, 28, 33, 61, 76, 80], "785": 21, "reciproc": [21, 28, 80], "terribl": 21, "division": 21, "strength": 21, "accept": [6, 21, 27, 32, 56, 75, 78, 92, 126], "36hlhsejuiq": 22, "min": [22, 38], "largest": 22, "catent": 22, "42": [22, 41], "pre": [22, 29, 80, 99, 110, 119], "foo": 22, "baz": 22, "3rd": [22, 114], "alphabeticlali": 22, "path": [22, 58], "sixth": [22, 49], "action": [22, 105, 121], "ado": 22, "smaller": [22, 24, 53, 106, 107, 124], "redund": [22, 90], "mostli": 22, "clariti": [22, 30, 38, 43, 48, 65, 67, 77, 102, 108, 117, 130], "great": [22, 85, 133], "neat": [22, 26, 47, 62, 70, 81, 91, 112, 119], "rev": 22, "wrapper": [22, 115], "syntax": [22, 25, 45, 56, 69, 133, 135], "intermediari": [22, 33], "infin": 22, "beyond": [22, 39], "visibl": 22, "anywher": 22, "clearest": 22, "coerc": 22, "color": [22, 101], "ceas": 22, "idiom": [22, 42, 43], "slower": [22, 27, 38, 118], "rest": 22, "firstli": [22, 29], "carriag": 22, "strain": 22, "els": [22, 54, 63, 65, 123], "anywai": 22, "invis": 22, "eventu": [22, 51], "atom": 22, "unrel": 22, "travel": [22, 30, 131], "gravel": 22, "old": [22, 24], "rebel": 22, "made": [22, 30, 105, 128], "toler": 23, "decim": [23, 81, 89, 127], "poss": 23, "ibl": 23, "ft": 23, "o_l": 24, "njymdr": 24, "index_of": 24, "master": 24, "html": 24, "20product": 24, "index_gener": 24, "principl": [24, 28, 67, 90, 97], "scalar_extens": 24, "xpqz": 24, "cultiv": [24, 43], "arithmet": [24, 31, 50, 59, 61, 102, 122, 128], "q": [24, 32, 36, 50, 80, 103], "jwilson": 24, "coe": 24, "uga": 24, "edu": 24, "emat6680fa2012": 24, "faircloth": 24, "essay1alf": 24, "chinesestickmultipl": 24, "squash": 24, "unari": 24, "en": 24, "wikipedia": 24, "org": 24, "unary_numeral_system": 24, "outer_product": 24, "finger": 24, "power_": 24, "comparison_funct": 24, "learnapl": 24, "dyadictrn": 24, "ab": [24, 38, 39, 66, 89], "fill_el": 24, "functions7": 24, "matrix_divid": 24, "major_cel": 24, "pi_tim": 24, "scalar_funct": 24, "floor_and_ceiling_funct": 24, "ceil": [24, 59, 69, 124], "equal_to": 24, "ravel_ord": 24, "tacit_program": 24, "manip": 24, "awar": 24, "slash": [24, 52, 111, 126], "comma": [24, 46, 94, 117, 119], "varieti": [24, 45, 58, 112], "creativ": [10, 24, 71, 118, 133], "altogeth": [24, 40], "scanner": 24, "six": [24, 40, 49, 65, 71, 104, 129], "tacitli": 24, "yode": 24, "fashion": [24, 33], "hash": 24, "namespac": [24, 43, 67], "placehold": [24, 56, 65, 86, 125], "j3": 24, "ignor": [24, 29, 42, 66, 73], "concat": 24, "cardin": 24, "distanc": [25, 26, 30, 34, 37, 41, 83, 87, 103], "half": [25, 29, 35, 106, 107, 122], "2d": [25, 50, 118], "4d": 25, "u_1": 25, "v_1": 25, "u_2": 25, "v_2": 25, "u1": 25, "v1": 25, "u2": 25, "v2": 25, "collect": [25, 71, 82, 84, 86, 92, 100, 102, 126], "flat": [25, 80, 103, 117], "contribut": [25, 71, 89, 128], "excit": 25, "exponenti": [25, 95], "furthermor": [25, 42], "static": [25, 86], "wast": [25, 42, 53], "technic": [25, 90], "feasibl": [25, 117], "clean": [25, 43, 52, 60, 74, 80, 111, 119], "aplcart": 25, "_u_": 25, "margin": 25, "aesthet": 25, "9th": [26, 46], "veloc": 26, "thrown": 26, "readi": [26, 66, 133], "translat": [26, 38, 57, 84, 88, 89, 108], "sin": 26, "theta": 26, "gravit": 26, "180": 26, "90": [26, 29, 45, 84], "displac": 26, "circl": [26, 30, 88], "taylor": 26, "expans": 26, "sum_": 26, "infti": 26, "2n": 26, "nativ": 26, "accuraci": [26, 52], "euler": 26, "isol": [26, 40, 73, 115, 119, 126, 130], "logarithm": 26, "0j": 26, "converg": [26, 28, 92], "slowli": 26, "999": 26, "99": [26, 47], "offici": 26, "satisfactori": 26, "extrem": [26, 50, 55], "delv": [27, 35, 38, 43, 55, 58, 60, 67, 68, 83], "solver": [27, 37], "vowel": [27, 46], "identif": 27, "insensit": [27, 40, 42], "uppercas": [27, 29, 39, 42, 74, 99], "ascertain": [27, 72, 93], "interior": 27, "aeiou": [11, 27], "mistakenli": 27, "unwant": [27, 32, 75, 94], "streamlin": [27, 36, 52, 60, 67, 69, 71, 74, 77, 80, 83, 97, 100, 102, 106, 111, 121], "stencil": [27, 123], "neighborhood": 27, "weakest": 27, "dxb": 27, "t3": 27, "1e3": [11, 27], "60": [27, 45, 61, 69, 97, 108, 135], "cdr": 27, "face": [27, 46, 55, 102], "punctuat": [27, 29, 42, 66], "erron": 27, "mark": [27, 41, 42, 46, 59, 78, 81, 111, 124], "alphabet": [27, 29, 39, 40, 42, 46, 48, 57, 58, 63, 65, 66, 74, 84, 86, 89, 105, 111, 121], "neighbor": [27, 79, 110], "investig": [27, 80], "craft": 27, "behind": [27, 70], "ahead": 27, "boundari": [10, 27, 38], "patterna": 27, "patternb": 27, "centric": 27, "suitabl": [27, 59, 62, 75], "analysi": [27, 31, 38, 52, 83, 85, 97, 100, 112], "pythagorean": [28, 80, 107], "theorem": [28, 80, 107], "left_argu": [28, 90], "right_argu": 28, "fold": [28, 29, 40, 42, 135], "compon": [28, 35, 108, 135], "bi": 28, "domino": 28, "unpack": 28, "cancel": [28, 55], "fundament": [28, 49, 74, 97, 121, 135], "geometri": 28, "fifth": [29, 37, 39, 53, 131], "palindrom": 29, "slight": [29, 82, 92], "panama": 29, "man": 29, "canal": 29, "cautiou": [29, 70], "lowercas": [29, 42, 78, 79], "supplement": 29, "ascii": [29, 88], "contigu": [29, 113], "97": 29, "122": 29, "fall": [29, 38, 60, 84, 88, 98], "32": [29, 71], "uc": [29, 88, 94], "recheck": 29, "implic": [29, 123], "raw": 29, "70": [29, 84, 114], "1e5": 29, "attach": 29, "5e4": 29, "abcd": [29, 42, 94, 135], "sensit": [29, 66], "invit": 30, "imagin": [30, 53, 70], "touch": [30, 107], "stationari": 30, "surfac": 30, "seventh": [30, 40, 45], "align": [30, 35, 47, 62, 68, 72, 75, 77, 88, 93, 107, 122, 130], "motion": 30, "diamet": [30, 61, 107], "circumfer": [30, 61], "disregard": 30, "revolut": 30, "mobil": 30, "aim": [30, 38, 56, 72, 104, 106, 117, 121], "paramet": [30, 63, 126], "counter": [30, 94], "evenli": [30, 45, 74, 106], "physic": 30, "movement": [30, 126], "met": [30, 93], "enter": 30, "context": [30, 48, 49, 56, 59, 65, 78, 84, 93, 96, 102, 113, 126, 135], "greatest": [30, 36], "common": [30, 36, 45, 52, 94, 119, 122, 130], "divisor": [30, 36, 135], "gcd": [30, 36], "lcm": [30, 122, 127], "exemplifi": [30, 107], "paradigm": [30, 118, 135], "10th": [31, 47], "delta": [31, 33, 123], "monthli": 31, "80": [31, 45, 80, 84], "120": [31, 45], "140": [31, 88], "diff": 31, "subsequ": [31, 33, 41, 46, 52, 55, 65, 67, 70, 81, 93, 94, 103, 110, 124], "benchmark": [31, 113, 118], "5e": 31, "7e": [31, 42, 70], "4850": 31, "crucial": [31, 43, 68, 70, 117, 119, 123, 135], "frequent": [31, 52], "27": [31, 71, 89], "upon": [31, 73, 75, 84, 100, 113, 118, 121, 123], "sampl": [31, 39, 60, 77, 97, 103, 105, 114, 129], "succinctli": [31, 45, 61, 118, 130], "visit": 32, "edit": 32, "excess": [32, 43, 53, 94], "condens": 32, "broader": [32, 72], "testcas": 32, "captur": [32, 69, 70, 112, 124, 125, 130], "trim": [32, 82], "performancetest": 32, "aresult": 32, "methoda": 32, "bresult": 32, "methodb": 32, "overal": [32, 33, 47, 60, 82, 101, 123, 125, 126], "usag": [32, 41, 107, 118], "iotag": 32, "nth": 33, "seed": 33, "stop": [33, 50, 51], "rec": 33, "slow": 33, "via": [33, 69, 79, 81, 90, 123], "overflow": [33, 69], "frame": 33, "therebi": [33, 39], "unus": 33, "tco": 33, "attack": [33, 131], "ap2": 33, "retriev": [33, 51, 53, 58, 69, 74, 86, 91, 129], "accumul": 33, "acc": 33, "golden": 33, "binomi": [33, 35], "binet": 33, "bin": 33, "nl": 33, "tweet": 34, "fib": 34, "frontier": 34, "mirror": [34, 46, 74, 100], "revolutionari": 34, "ballist": 34, "2015": [35, 36, 37, 38, 39, 41, 42, 43], "visual": [35, 39, 41, 43, 45, 47, 50, 56, 60, 61, 62, 71, 77, 83, 88, 100, 104, 108, 116, 118], "appeal": 35, "tradition": [35, 43, 50], "neatli": [35, 48, 61, 96], "rectangular": 35, "sidewai": 35, "progress": [35, 42, 55], "layout": [35, 75, 126], "accordingli": [35, 42, 75, 77, 103, 114, 115], "rf": 35, "rn": 35, "tn": 35, "50": [35, 47], "overview": [35, 65], "54": 35, "3e": [35, 42, 70, 117], "51": 35, "fast": 35, "wisdom": 35, "deliv": 35, "capl": [36, 38], "denomin": [36, 127], "ascend": [36, 95, 114], "exclud": [36, 106, 119, 129], "ii": [36, 135], "ij": 36, "im": 36, "quotient": 36, "lastli": [11, 36, 125, 130], "setup": [36, 67, 86], "coprim": 36, "enumer": [36, 68, 72], "g2": [36, 118], "qf": 36, "didn": [37, 129], "pleasur": 37, "ken": 37, "iverson": [37, 105, 133, 135], "opportun": [37, 99, 133], "student": 37, "roger": 37, "huei": 37, "spirit": 37, "seen": [37, 124, 135], "him": 37, "believ": 37, "he": [37, 44, 53], "squareroot": 37, "stddev": 37, "uniformli": [37, 94, 122], "integr": [37, 72], "bracketdev": 37, "earli": [37, 70, 105, 135], "earlier": [37, 60, 67, 69, 74, 76, 78, 88, 113, 121, 128], "organ": [37, 48, 75, 94, 133], "symmetri": [37, 43, 80], "box": [37, 53, 117], "stddevu": 37, "verif": 37, "summar": [37, 55, 61, 71, 89, 96, 100, 106, 122], "incorpor": [37, 53, 59, 96, 121], "rectangl": [38, 61], "label": [38, 117], "xy": 38, "x_1": 38, "y_1": 38, "x_2": 38, "y_2": 38, "a_1": 38, "b_1": 38, "a_2": 38, "b_2": 38, "confus": [38, 65], "breakdown": [38, 71], "alter": [38, 59, 74, 86], "geometr": [38, 82, 83, 107], "xy1": 38, "xy0": 38, "horizontal_overlap": 38, "x1": 38, "a2": 38, "x2": 38, "vertical_overlap": 38, "b1": 38, "y1": 38, "b2": 38, "y2": 38, "minim": [6, 15, 16, 38, 70, 78], "promis": 38, "partner": 39, "outlin": [39, 65, 72, 90, 115, 122], "easier": [39, 70, 73, 121], "abcdef": [39, 40], "abdcf": 39, "untouch": 39, "flippedword": 39, "travers": [39, 60, 79, 100], "chunk": 39, "piec": [39, 59, 88, 101, 113], "stenciledword": 39, "alloc": [39, 43], "medial": 39, "reorderedword": 39, "permutationword": 39, "abcdefghijklmnopqrstuvwxyz": [39, 121], "26": [39, 43, 71], "fghij": 39, "showcas": [10, 39, 91, 126, 133], "randomlett": 40, "cdef": 40, "previous": [40, 52, 59, 80, 119], "tech": 40, "simultan": [40, 91], "highranklett": 40, "cdxy": 40, "queri": [40, 93], "receiv": [40, 43, 47, 59, 77, 92, 114, 119], "unexpect": 40, "tyadik": 40, "pose": 40, "longest": [41, 44, 49, 107], "volum": 41, "leftmost": [41, 111], "clip": 41, "backward": 41, "remedi": [41, 58, 79], "strictli": [41, 50, 97], "grow": [41, 97], "conveni": [41, 105, 110], "segment": [41, 46, 88, 92, 113, 115], "growth": 41, "intuit": [10, 41, 112], "explicitli": [41, 47, 56, 58, 61, 62, 97], "dictat": [41, 72], "ineffci": 41, "introduc": [41, 43, 50, 52, 56, 60, 62, 70, 92, 121, 133, 135], "concern": [41, 51, 68, 74, 81, 93], "sole": [41, 42, 86], "streak": [41, 44], "overestim": 41, "simplif": 41, "thousand": 41, "permut": 41, "ideal": 41, "suit": [41, 133], "capit": [42, 90], "nag": [42, 44], "ram": [42, 44], "rephras": 42, "arrang": [42, 62, 63, 72, 77, 80, 84, 85, 86, 92, 101, 106, 116, 121, 126], "scrambl": [42, 44], "shuffl": 42, "shortest": [42, 49, 65, 95], "quickli": [42, 53], "inadvert": 42, "unnecessarili": 42, "facilit": [42, 51, 62, 69, 75, 83, 122, 123, 130], "ta": 42, "tb": 42, "35": [42, 71], "52": [42, 89], "2e": 42, "55": 42, "acknowledg": 42, "state": [42, 43, 50, 77], "room": 42, "inclus": [42, 79, 128], "bj\u00f6rn": 42, "ma": 42, "d\u00e1": 42, "123": [11, 42], "bj\u00f8rn": 42, "ad\u00e1m": [42, 126], "321": 42, "71": [42, 84], "pl": 42, "pm": 42, "pz": 42, "arriv": [42, 43, 74, 90, 91, 114, 124, 127], "consum": 43, "akin": 43, "decad": 43, "commonli": [43, 79, 126], "link": [43, 90, 95, 104, 117], "primarili": [43, 73, 85, 107, 122, 130], "landon": 43, "finnegan": 43, "previou": [43, 62, 70, 72, 78, 81, 88, 95, 96, 103, 124, 126, 128], "ax": [43, 50, 100, 126, 131, 135], "inappropri": [43, 73], "accommod": [43, 62, 115], "misalign": 43, "133": 43, "macro": 43, "resourc": [43, 80, 131], "farei": 44, "tale": 44, "progess": 44, "standard": [44, 71, 84, 93, 101, 122], "deviat": [44, 65], "thisi": 44, "my": [44, 46, 50, 112], "justin": 44, "upper": [44, 122], "id": 44, "mine": 44, "blaze": 44, "2016": [45, 46, 47, 48, 49, 50, 51, 53], "cleanli": [45, 94, 113], "conceptu": [45, 55, 69], "30": [45, 69, 71, 108], "40": 45, "greek": [45, 46, 48, 57, 58, 63, 66, 78, 84, 105, 111], "semicolon": 46, "infix": [46, 135], "user": [46, 65, 74, 112], "lambda": [46, 47, 48, 49, 50, 52, 55, 60, 62, 63, 67, 68, 70, 72, 78, 83, 84, 90, 91, 100, 101, 103, 104, 105, 111, 113, 117, 118, 119, 121, 124, 130], "denot": [46, 47, 48, 49, 50, 51, 56, 63, 69, 72, 78, 83, 107, 135], "isdelimit": 46, "lose": [46, 131], "portion": 46, "loss": 46, "marker": 46, "proceed": [46, 77, 131], "opinion": 46, "control": 46, "scope": [46, 78], "pertain": 46, "forc": 46, "unfortun": 46, "terminologi": 46, "signifi": [46, 49, 63, 89, 93, 97, 131], "unbreak": 46, "criteria": [46, 104, 106, 124], "epl": 47, "price": 47, "quantiti": 47, "purchas": 47, "bought": 47, "automat": [47, 48, 50, 59, 61, 63, 90], "\u03b1": [47, 61, 88], "\u03c9": [47, 48, 58, 61, 62, 84, 85, 105], "serv": [47, 60, 80, 92, 105, 107], "cover": [47, 74, 95, 117], "chain": [47, 135], "fed": 47, "instantli": 47, "underli": [47, 89], "record": 47, "henc": 47, "introduct": 47, "positivevalu": 48, "negativevalu": 48, "filtervalu": 48, "equip": [48, 67, 89], "anonym": [48, 51, 53, 66, 70, 72, 78, 113, 117, 118, 123, 124, 125], "redefin": [48, 50, 123], "positivemask": 48, "declar": [48, 62], "negativemask": 48, "tild": [48, 50, 53], "distinguish": [48, 63], "categori": [48, 85], "hope": [48, 60, 67, 84, 91, 95, 105, 108, 116, 118], "clarifi": [48, 50, 74, 91, 93], "sbl": 49, "gotcha": 50, "curli": [50, 130], "niceti": 50, "fanci": 50, "ridicul": 50, "short": [50, 60, 61, 65, 105], "bother": 50, "zelda": 50, "pronounc": [50, 135], "mysteri": 50, "clamp": [50, 129], "style": [50, 61, 88, 135], "multi": [50, 59, 71, 135], "medianr": 51, "lack": [51, 56, 74, 89], "mediani": 51, "infinit": [51, 61], "modif": [51, 92], "upsid": 51, "\u03b4": 51, "mediand": 51, "AND": [52, 57, 93], "acceler": 52, "intact": [52, 129], "alli": 52, "swiftli": 52, "skip": [53, 74], "albeit": 53, "packag": 53, "ingeni": 53, "lol": 53, "wrd": 53, "statist": [54, 133], "median": 54, "mode": [54, 111], "everyon": 54, "onestoth": 54, "sand": 54, "outth": 54, "li": [55, 93], "surviv": 55, "backslash": 55, "associ": [55, 75, 88, 105, 125], "truth": 55, "draft": 55, "lessthanprint": 55, "lessthanreduct": 55, "lessthanscan": 55, "invoc": 55, "propag": 55, "essenc": [55, 90, 125, 128], "mechan": [55, 89, 104], "promin": 55, "attent": [55, 56, 61, 72, 91], "walk": [56, 60], "leftarrai": 56, "rightarrai": 56, "attacca": 56, "acgt": [56, 57, 65, 112], "referenc": 56, "ambigu": 56, "enabl": [56, 71, 72, 77, 79, 102], "encompass": 56, "core": 56, "vocabulari": [56, 112], "reusabl": [56, 71, 74, 96, 111, 126], "environ": 57, "among": [18, 57, 106, 135], "atgcttcagaaaggtcttacg": 57, "atgcttcagaaaggtxcttacg": 57, "presenc": [57, 73, 97, 99, 112], "syntact": 57, "meanwhil": 57, "mississippi": [58, 130], "39111": 58, "ny": 58, "incomplet": 58, "elsewher": 58, "inaccur": 58, "11193": 58, "ippississim": 58, "filler": 58, "reliabl": [58, 128], "cleaner": [58, 74, 77, 102, 112, 126], "topic": [58, 122, 128, 131], "configur": [59, 68, 71, 92, 101], "halv": 59, "tool": [59, 67, 70, 77, 80, 89], "unintend": 60, "quotat": 60, "deeper": [60, 89], "newlin": [60, 94], "flag": [10, 60], "xor": 60, "NOT": 60, "TO": 60, "predefin": [60, 100], "transit": [11, 60, 130], "sophist": 60, "solid": 60, "foundat": 60, "unrol": 61, "thin": 61, "slice": [61, 64, 65], "radiu": [61, 107], "recal": [61, 107], "360": 61, "sectorarea": 61, "consolid": 61, "1440": 61, "adequ": 61, "3x3": 62, "2x2": 62, "236067977": 62, "clutter": [62, 94], "gracefulli": [62, 65, 113], "2017": [63, 67], "programm": [63, 133], "latin": 63, "low": [63, 88], "gotten": 63, "adverbi": 63, "dna": [64, 120], "mer": [64, 65], "dnanucleotid": 64, "Be": [64, 132], "troubl": 64, "adenin": 65, "cytosin": 65, "guanin": 65, "thymin": 65, "slide": [65, 110], "inconsist": 65, "requested_length": 65, "data_length": 65, "vector_of": 65, "length_request": 65, "overcom": [65, 94], "inher": [65, 89, 97, 122], "spars": 65, "econom": 66, "worri": [66, 74, 123, 125, 133], "prepar": [66, 68, 77, 80, 115, 119], "albert": 66, "einstein": 66, "elit": 66, "brain": 66, "cab": 66, "carri": [66, 105], "without_spac": 66, "easi": [66, 69, 100, 122], "helper": 66, "alberteinstein": 66, "tenelitebrain": 66, "mind": [66, 80], "realm": [67, 83], "mundan": 67, "intrigu": [67, 89], "tempor": 67, "dialog": 67, "interact": 67, "entiti": [67, 79], "2018": [67, 74], "56": 67, "789": 67, "800": 67, "entri": [67, 94, 112], "dt": [67, 96, 122], "serial": [67, 122], "dai": [67, 75, 108, 135], "epoch": 67, "1899": 67, "43190": 67, "52427": 67, "69806": 67, "42825": 67, "1737964236": 67, "365": 67, "prior": 67, "rich": 67, "intrins": 67, "knowledg": [67, 89], "characterist": [68, 85], "deem": 68, "2x5": 68, "primari": [68, 77], "meet": [68, 101, 102, 122, 124], "omit": [68, 111], "thoroughli": 68, "stylish": 69, "wall": 69, "2345": 69, "fractional_part": 69, "original_numb": 69, "math": [69, 73], "333333333": [69, 110], "reflect": [69, 75, 89, 92, 116, 117, 118, 128], "synthes": 69, "movi": 69, "96": 69, "minut": [69, 97], "hour": [69, 108], "metaphor": 69, "digest": 69, "36": [69, 71, 135], "seamlessli": [69, 72, 79, 112, 114], "stand": [70, 78, 114, 118], "rule": 70, "lower": [6, 15, 16, 70, 114], "taller": 70, "likewis": [70, 75], "necessit": [70, 93], "exit": 70, "58": 70, "68": [70, 88, 114], "softwar": 70, "frequenc": [71, 114], "cast": 71, "die": [71, 131], "land": 71, "6x6": 71, "coin": 71, "2x3x6": 71, "gather": 71, "19": [71, 75, 94], "21": [71, 75, 94, 112], "31": [71, 122], "22": [71, 75, 81, 94], "23": [71, 75, 94, 122], "28": [71, 107, 122], "33": [71, 122], "29": [71, 81, 96], "asterisk": 71, "cap": 71, "exceed": 71, "permit": 71, "behavior": [71, 78, 105], "engag": [71, 104, 106, 107, 131, 133], "combinatori": 71, "recommend": [72, 131], "review": [72, 95], "inlin": [72, 111], "decid": 72, "occupi": [72, 101, 114], "subset": 72, "draw": [72, 101], "moreov": 72, "culmin": 72, "encourag": [72, 95, 123, 133], "latter": 73, "misus": 73, "disrupt": [73, 97], "drake": 73, "mallard": 73, "adher": [73, 92, 97], "compound": 73, "branch": 73, "uninterrupt": 73, "closur": 73, "closest": [74, 106], "prolept": 74, "calendar": [74, 75, 122], "scrape": 74, "websit": 74, "dirti": 74, "clearer": [74, 99], "2006": 74, "2007": 74, "nine": 74, "monkei": [74, 87], "rooster": 74, "eleven": 74, "pig": 74, "monkeyroosterdogpigratoxtigerrabbitdragonsnakehorsegoat": 74, "compens": 74, "absenc": 74, "dog": [74, 85], "robustli": 74, "advis": 74, "tabular": 75, "machin": 75, "consumpt": 75, "cumbersom": 75, "ari": 75, "march": 75, "april": 75, "libra": 75, "septemb": 75, "octob": [75, 122], "tauru": 75, "scorpio": 75, "novemb": 75, "gemini": 75, "june": 75, "sagittariu": 75, "decemb": 75, "cancer": 75, "juli": 75, "capricorn": 75, "januari": [75, 122], "leo": 75, "august": 75, "aquariu": 75, "februari": [75, 96], "virgo": 75, "pisc": 75, "21st": 75, "gregorian": 75, "inspect": [75, 85, 100], "modular": 75, "standalon": 75, "pseudo": 75, "def": [75, 86, 123, 125, 135], "get_zodiac_sign": 75, "uncondition": 76, "shifti": 76, "makinga": 76, "anagrammat": 76, "inscrib": 77, "anti": [77, 100, 105], "x_i": 77, "y_": 77, "y_i": 77, "x_": 77, "normalized_point": 77, "sum_diagonal_product": 77, "over_sum": 77, "vertex": 77, "ground": 77, "section": [78, 90, 115, 117, 125, 130], "restrict": [78, 89, 96, 106], "cat": [78, 85], "belong": [78, 84], "head": 78, "sep": 78, "pat": 78, "hat": 78, "sat": 78, "rho": [7, 78], "alon": 78, "shorten": 78, "nuanc": [79, 128], "restructur": [79, 103], "newli": 79, "bookkeep": 79, "versu": 79, "incorrectli": [79, 119], "singular": 79, "saniti": 80, "connect": 80, "sqrt": 80, "rethink": 80, "fare": 80, "vastli": 80, "dabfc": 81, "abcdf": 81, "dddddddddaaabbbbbbbbffffccccccc": 81, "tidi": 81, "677419355": 81, "80645161": 81, "58064516": 81, "03225806": 81, "90322581": 81, "vulner": 81, "rout": 81, "tenth": 81, "mitig": 81, "risk": [81, 94], "orthogon": 82, "competitio": 82, "reposit": 82, "eas": [82, 126], "board": [83, 131], "fixat": 83, "8x8": 83, "irrespect": [83, 89], "legal": 83, "game": [83, 131], "82": 84, "81": 84, "84": 84, "59": 84, "fdcba": 84, "cbb": 84, "bbf": 84, "classif": 84, "sequenti": [84, 86], "endeavor": 84, "hors": 85, "fish": 85, "seal": 85, "mixtur": 85, "categor": 85, "python": 85, "pseudocod": 85, "odd_mask": 85, "len": [85, 123], "even_mask": 85, "odd_word": 85, "even_word": 85, "incom": 85, "regroup": 85, "correl": [86, 130], "ghi": 86, "jkl": 86, "mno": 86, "pqr": 86, "tuv": 86, "wxyz": 86, "adgjmptw": 86, "formal": [86, 128], "ur2cut": 86, "alphanumer": 86, "chunki": 87, "makingth": 87, "knight": 87, "telephon": 87, "center": [87, 116], "goingth": 87, "stream": 88, "yen": 88, "medium": 88, "possess": 88, "194": 88, "165": [88, 108], "226": 88, "141": [88, 117], "186": 88, "138": 88, "151": 88, "139": 88, "57": 88, "gc": 88, "191": 88, "emoji": 88, "chines": 88, "usabl": 88, "recogniz": 88, "192": 88, "excel": [89, 98], "sheet": 89, "decept": 89, "simplic": [89, 105], "aa": 89, "zz": 89, "carryov": 89, "az": 89, "unfold": 89, "1104": 89, "truli": 89, "comprehend": 89, "emul": 89, "enrich": 89, "seemingli": 90, "analog": 90, "dyalogapl": 90, "dya": [90, 115], "logapl": 90, "revert": 90, "recur": 90, "strip": 90, "daunt": 90, "criterion": 91, "union": [91, 119], "exclus": 91, "unusu": [92, 135], "plateau": 92, "outset": 92, "contrast": [92, 103], "abid": 92, "particular": 93, "trivial": [93, 100], "choic": 93, "ok": 93, "problemat": [93, 94], "uniform": [94, 108], "adam": 94, "michael": 94, "constitu": 94, "stage": 94, "basi": 94, "formatteddata": 94, "allrow": 94, "replicatedscalar": 94, "manual": [94, 106, 129], "transposit": [94, 135], "log": 95, "Ones": [95, 128], "journei": 95, "100th": 96, "400th": 96, "redeem": 96, "2000": 96, "1900": 96, "despit": [96, 128], "1904": 96, "304": 96, "1905": 96, "305": 96, "prev": 96, "statu": 96, "date": [96, 122], "checkleapyear": 96, "validd": 96, "leapyearcheck": 96, "gone": 96, "shrink": 97, "percept": 97, "3141514131415": 97, "millisecond": 97, "autom": [97, 123, 129], "31415": 97, "suffic": 97, "discrep": [97, 113, 124, 131], "perfect": 97, "zigzag": [97, 98], "53141514131415": 97, "31141514131415": 97, "lent": 98, "takea": 98, "leap": 98, "steppinginth": 98, "movetoth": 98, "youina": 98, "riseand": 98, "gattacca": 99, "cg": 99, "total_cg": 99, "_cg": 99, "37": 99, "king": 101, "rook": 101, "bishop": 101, "white": 101, "black": [101, 135], "queen": 101, "kr": 101, "rnbqkbnr": 101, "rbbnqnrk": 101, "brbkrnqn": 101, "rkr": 101, "tweak": 102, "diic": 102, "merit": 102, "speedup": 103, "sublist": 104, "glanc": [104, 128], "truncat": 105, "paus": [105, 131], "text1": 105, "text2": 105, "takeawai": 105, "erson": 105, "flatter": 105, "insuffici": 105, "advoc": 105, "nosrevi": 105, "facil": [105, 117], "weigh": 105, "prove": 105, "corner": [107, 118, 122], "_": 107, "attribut": 107, "archimed": 107, "circlesquarediffer": 107, "141592654": 107, "566370614": 107, "27433388": 107, "26548246": 107, "53981634": 107, "deploi": 107, "deduc": [107, 113], "150": 108, "315": 108, "bacteria": 109, "peg": 109, "hole": 109, "rect": 109, "ifi": 109, "fischer": 109, "chess": 109, "feelth": 109, "magic": 109, "timeto": 109, "makea": 109, "inth": [109, 120], "onth": 109, "simul": 110, "666666667": 110, "gagcctactaacgggat": 111, "catcgtaatgacggcct": 111, "bioinformat": 112, "genet": 112, "agcttttcattctgactgcaacgggcaatatgtctctgtgtggattaaaaaaagagtgtctgatagcagc": 112, "dummi": 112, "model": 112, "renam": 112, "dyalog_vis": 112, "quadequ": 112, "aplo": 112, "friendli": 112, "vital": 112, "inject": [113, 129], "797693135e308": 113, "1e7": 113, "nearli": 113, "discov": [113, 118, 130], "player": 114, "67": 114, "74": 114, "1st": 114, "2nd": 114, "4th": 114, "5th": 114, "6th": 114, "7th": 114, "aid": 114, "meant": [10, 114], "cmp": 114, "5000": 114, "000": [114, 117], "5e3": 114, "1e4": 114, "thought": [114, 133], "splitter": 115, "dy": 115, "alog": 115, "decrement": 115, "adapt": [115, 125], "resembl": [116, 117, 127], "outward": 116, "10000": 117, "100000": 117, "1000000": 117, "10000000": 117, "100000000": 117, "1000000000": 117, "01": 117, "001": 117, "0001": 117, "00001": 117, "000001": 117, "0000001": 117, "00000001": 117, "000000001": 117, "0000000001": 117, "undesir": 117, "sublanguag": 117, "lookahead": 117, "lookbehind": 117, "breviti": 117, "opt": 117, "0123456789": 117, "0e": 117, "95": 117, "resort": 117, "boxi": 118, "assembl": 118, "triangular": 118, "quadio": 118, "h3": 118, "graphic": 119, "symmetric_differ": 119, "nucleotid": 120, "attackofth": 120, "mutat": 120, "qualifi": 120, "stairwayto": 120, "heaven": 120, "pyramid": 120, "golf": [120, 123], "windowora": 120, "anxieti": 120, "plaintext": 121, "indexofh": 121, "messag": 121, "encodedmessag": 121, "lippsd": 121, "svphw": 121, "decodedmessag": 121, "rotatedalphabet": 121, "defghijklmnopqrstuvwxyz": 121, "revis": 121, "originalmessag": 121, "dual": 121, "cycl": 122, "stem": 122, "birthdai": 122, "tripl": 122, "curv": 122, "analogi": 122, "cross": 122, "halfperiod": 122, "lcmtabl": 122, "322": 122, "379": 122, "462": 122, "1962": 122, "2023": [122, 133], "birthdat": 122, "eventd": 122, "timestamp": 122, "serialbirthd": 122, "laid": [122, 130, 135], "briefli": 122, "criticaldai": 122, "nextdat": 122, "hing": 122, "intertwin": 122, "life": 122, "mileston": 122, "gela": [123, 125], "opton": [123, 125], "prospero": [123, 125], "lydia": 123, "toaza": [123, 125], "xena": 123, "taro": 123, "gamma": 123, "debt": 123, "qubit": 123, "bravo": 123, "charli": 123, "foxtrot": 123, "india": 123, "juliet": 123, "subarrai": [123, 135], "profil": 123, "substanti": 123, "block": 123, "abil": [123, 126], "kept": 124, "stabil": 124, "computation": 124, "lysa": 125, "griselda": 125, "upton": 125, "delicia": 125, "topaza": 125, "clyde": 125, "elli": 125, "gill": 125, "hilari": 125, "sheridan": 125, "carol": 125, "clai": 125, "harlei": 125, "bellanc": 125, "nesta": 125, "dorian": 125, "sigurd": 125, "clinton": 125, "rene": 125, "nada": 125, "flip_adjac": 125, "arr": 125, "rebuild": 125, "clash": 125, "index_flip": 125, "cellular": 125, "automata": 125, "stencil_flip": 125, "colon": 126, "key1": 126, "value1": 126, "key2": 126, "value2": 126, "key3": 126, "value3": 126, "lend": 126, "cto": 126, "morten": 126, "ata": 126, "brian": 126, "hld": 126, "predict": 126, "kvp": 126, "greatli": 126, "perceiv": 127, "appar": 128, "newer": 128, "priorit": 128, "older": 128, "wonder": 128, "mislead": 128, "greedi": 129, "sensibl": 129, "postprocess": 129, "instruct": 129, "spread": 130, "issi": 130, "familiar": [10, 131, 133], "battl": 131, "surround": 131, "armi": 131, "respons": 131, "lost": 131, "caesar": 132, "salad": 132, "riski": 132, "busi": 132, "ration": 132, "witha": 132, "annual": 133, "incept": 133, "provok": 133, "kenneth": [133, 135], "1960": 133, "beginn": 133, "experienc": 133, "solvabl": 133, "jupyt": 133, "chronolog": 133, "jump": 133, "tip": 133, "expert": 133, "curiou": 133, "sharpen": 133, "sidebar": 133, "problem_list": 134, "threshold": [6, 16], "hyphen": [10, 11, 18, 19], "versatil": 10, "repurpos": 10, "increasingli": 10, "wait": [], "creator": 135, "predat": 135, "75": 135, "ieee": 135, "\u03bb": 135, "12x12": 135, "cabbag": 135, "central": 135, "whose": 135, "haskel": 135, "abstract": 135, "histor": 135, "meat": 135, "chicken": 135, "pork": 135, "beef": 135, "fri": 135, "rice": 135, "lo": 135, "mein": 135, "broccoli": 135, "bean": 135, "sauc": 135, "cook": 135, "parallel": 135, "fmap": 135, "decompos": 135, "rmap": 135, "lmap": 135, "monoid": 135, "rate": 6, "patern": 11}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"float": [0, 23], "your": [0, 23], "boat": [0, 23], "2013": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12], "7": [0, 40, 135], "get": [0, 5, 12, 34, 44, 54, 64, 69, 73, 76, 87, 98, 109, 119, 120, 132, 133, 134], "start": [0, 5, 12, 34, 44, 54, 64, 73, 76, 87, 98, 109, 119, 120, 132, 133, 134], "round": [0, 81], "tacit": [0, 61], "data": [0, 2, 4, 11, 29, 41, 43, 45, 49, 51, 52, 56, 72, 73, 74, 75, 77, 85, 94, 105, 110, 113, 117], "represent": [0, 28, 38, 61, 88, 93], "decim": 0, "point": [0, 25, 47, 56, 57, 80, 86, 130], "detect": 0, "mathemat": [0, 28, 128], "approach": [0, 4, 26, 28, 30, 31, 33, 35, 36, 39, 41, 43, 48, 51, 52, 67, 68, 70, 78, 83, 85, 90, 91, 94, 96, 97, 100, 102, 103, 112, 113, 114, 115, 117, 118, 119, 123, 124, 125, 126, 128], "modulu": [0, 102, 104], "comparison": [0, 5, 11, 30, 32, 33, 35, 39, 41, 42, 43, 53, 66, 67, 70, 79, 80, 91, 105, 114, 117, 118, 123, 128, 131], "toler": 0, "encod": [0, 3, 69, 88, 97], "subtract": [0, 67, 69], "A": [0, 46, 56, 58, 67, 69, 73, 89, 96, 97, 111, 135], "quirki": 0, "solut": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 27, 28, 30, 40, 43, 53, 55, 58, 59, 65, 85, 86, 89, 90, 97, 104, 106, 119, 122, 124, 127, 129], "glyph": [0, 6, 7, 10, 11, 15, 16], "us": [0, 1, 3, 6, 7, 10, 11, 15, 16, 28, 39, 45, 46, 47, 50, 51, 52, 56, 59, 60, 61, 69, 75, 77, 78, 80, 85, 91, 94, 95, 96, 104, 111, 112, 113, 114, 117, 119, 125, 126, 128, 135], "concept": [0, 6, 7, 10, 11, 15, 16, 28, 55, 56, 92, 116, 121, 122], "transcript": [0, 6, 7, 11, 15, 16], "go": [1, 104], "forth": 1, "multipli": 1, "8": [1, 88, 135], "todai": [1, 30, 52, 129], "": [1, 4, 10, 11, 30, 35, 45, 52, 67, 94, 129, 135], "quest": [1, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 76, 87, 98, 109, 120, 129, 132, 133, 134], "The": [1, 26, 38, 47, 55, 65, 67, 78, 84, 89, 97, 102, 121, 126, 131], "obviou": 1, "explor": [1, 27, 29, 71], "altern": [1, 5, 36, 40, 51, 59, 65, 69, 70, 88, 94, 97, 112, 115, 118, 119, 123, 125, 126, 128, 130], "definit": [1, 33, 38, 57, 62, 66, 100, 102, 118, 126], "outer": [1, 45, 56, 135], "product": [1, 45, 47, 56, 77, 111, 135], "gener": [1, 2, 3, 4, 35, 36, 39, 56, 63, 65, 86, 95, 114, 116, 117, 118, 135], "indic": [1, 3, 51], "vector": [1, 39, 55, 57, 66, 68, 74, 78, 90, 91, 112, 113], "reshap": [1, 74], "fun": [1, 3], "test": [1, 11, 25, 26, 29, 39, 42, 45, 49, 51, 52, 61, 68, 70, 73, 78, 85, 92, 93, 115, 117], "further": [1, 2, 35], "cumul": [1, 70], "addit": [1, 5, 35, 43, 118], "implement": [1, 2, 5, 26, 27, 31, 32, 33, 36, 37, 38, 41, 43, 52, 55, 57, 58, 60, 65, 68, 71, 72, 74, 80, 82, 84, 86, 88, 91, 94, 96, 103, 104, 110, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 125], "function": [1, 2, 5, 26, 31, 33, 37, 38, 41, 42, 43, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 70, 71, 74, 75, 78, 80, 82, 84, 85, 86, 88, 90, 91, 96, 102, 104, 111, 112, 113, 114, 116, 118, 119, 125, 126, 128, 135], "without": 1, "oper": [1, 3, 45, 50, 55, 80, 85, 94, 104, 112, 113, 125, 126, 127, 135], "find": [1, 8, 41, 52, 53, 58, 62, 69, 75, 100, 103, 106, 107, 113, 115, 119, 127, 130], "method": [1, 3, 51, 65, 69, 85, 88, 95, 114, 115, 117, 130], "reli": 1, "apl": [1, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 59, 61, 63, 64, 67, 70, 76, 79, 84, 87, 90, 91, 93, 94, 95, 97, 98, 102, 104, 105, 109, 110, 114, 115, 118, 120, 124, 129, 131, 132, 133, 134, 135], "scalar": [1, 51, 72, 79, 94, 135], "extens": [1, 135], "final": [1, 25, 26, 28, 30, 36, 42, 52, 53, 57, 58, 60, 66, 68, 73, 74, 75, 77, 81, 82, 86, 90, 92, 94, 97, 104, 105, 110, 111, 113, 115, 116], "challeng": [1, 26, 46, 101], "multipl": [1, 45, 79, 124, 127, 135], "arithmet": 1, "conclus": [1, 2, 4, 5, 8, 27, 28, 29, 31, 35, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131], "resourc": [1, 5], "home": [2, 22], "rang": [2, 22, 29, 88, 95], "6": [2, 135], "sampl": [2, 41, 43, 46, 56, 72, 81, 88, 94, 112, 113], "handl": [2, 4, 25, 30, 37, 51, 52, 53, 58, 60, 65, 68, 71, 72, 77, 79, 84, 86, 94, 96, 102, 112, 113, 114, 115, 119, 129], "matric": 2, "edg": [2, 27, 30, 31, 58, 77, 110, 114, 115], "case": [2, 27, 30, 31, 38, 39, 40, 42, 58, 68, 77, 78, 90, 110, 114, 115], "empti": [2, 3, 51, 60, 113, 129, 135], "arrai": [2, 37, 40, 50, 53, 59, 62, 80, 83, 91, 94, 96, 123, 125, 130, 135], "optim": [2, 10, 29, 33, 38, 57, 60, 77, 80, 97, 99, 100, 118, 123], "ident": [3, 21, 58, 79, 126, 135], "crisi": [3, 21], "5": [3, 36, 135], "an": [3, 8, 47, 59, 66, 70, 72, 106, 107, 118, 129, 130, 135], "matrix": [3, 33, 41, 43, 82, 86, 93, 116, 117, 118, 126], "1": [3, 7, 39, 51, 59, 66, 72, 85, 99, 102, 114, 117, 135], "2": [3, 6, 39, 51, 59, 66, 72, 85, 99, 114, 117, 135], "inequ": 3, "tabl": [3, 45, 53, 75, 81, 104, 112, 118, 131, 135], "3": [3, 11, 39, 51, 59, 66, 72, 85, 99, 114, 117, 135], "creat": [3, 29, 45, 47, 48, 49, 51, 56, 60, 67, 70, 72, 75, 82, 83, 86, 89, 102, 104, 111, 112, 118, 126], "4": [3, 5, 39, 51, 135], "add": 3, "more": [3, 46, 58, 97, 135], "innov": 3, "techniqu": [3, 8, 27, 35], "random": 3, "complex": [3, 28], "number": [3, 28, 30, 51, 59, 69, 74, 86, 92, 97, 103, 110, 116, 127, 128], "summari": [3, 32, 80, 106], "It": 4, "move": [4, 83, 91], "experi": 4, "9": [4, 135], "problem": [4, 12, 27, 28, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 51, 54, 64, 65, 67, 76, 80, 83, 87, 95, 97, 98, 102, 103, 108, 109, 111, 114, 118, 120, 124, 125, 129, 130, 132, 134], "overview": [4, 12, 26, 32, 34, 37, 38, 40, 43, 44, 45, 48, 49, 54, 58, 64, 68, 72, 76, 77, 81, 87, 98, 105, 107, 109, 114, 116, 120, 131, 132, 134, 135], "visual": [4, 38, 55, 130], "n": [4, 36], "wise": 4, "reduct": [4, 55, 56, 96, 110], "improv": [4, 40, 42, 53, 113, 118], "clamp": 4, "input": [4, 5, 72], "size": [4, 62, 110], "advanc": [4, 6, 10, 15, 16, 104], "error": [4, 43], "maintain": 4, "shape": [4, 68, 135], "keep": [5, 20, 72], "thing": [5, 20], "balanc": [5, 20], "normal": [5, 32, 40, 42, 77, 97, 105, 108], "perform": [5, 6, 10, 11, 15, 16, 27, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 70, 80, 81, 86, 103, 105, 113, 114, 117, 118, 123, 125], "determin": [5, 122, 131], "parenthes": [5, 78], "creativ": 5, "make": [6, 14, 15, 16], "grade": [6, 14, 15, 16, 49, 51, 81, 84, 91, 114], "comput": [26, 33, 48, 51, 53, 61, 75, 77, 80, 81, 113, 122], "percentag": [31, 81, 99], "pass": 124, "consider": [29, 31, 36, 41, 43, 70, 81, 86, 103, 105, 125], "analysi": [56, 128], "seem": [7, 13], "bit": [7, 13, 93], "odd": [7, 13, 51, 59], "To": [7, 13], "me": [7, 13], "descript": [39, 48], "exampl": [6, 7, 10, 11, 15, 16, 31, 36, 41, 45, 51, 55, 56, 62, 68, 74, 78, 79, 89, 92, 93, 94, 95, 96, 101, 104, 105, 106, 108, 110, 114, 115, 122, 123, 125, 126, 128, 131], "detail": 68, "explan": 124, "f": [6, 7, 11], "g": [7, 11], "h": [7, 11], "i": [7, 127, 133, 135], "j": [6, 7], "salvat": 8, "10": [8, 135], "set": [8, 48, 66, 67, 81, 83, 91, 118, 119], "up": [8, 66, 67, 81, 83, 92, 94, 118, 121], "equat": 8, "system": 8, "miss": 8, "valu": [8, 26, 61, 86, 106, 126], "iter": [8, 30, 52], "initi": [8, 66, 94, 123, 124], "guess": 8, "what": [10, 11, 18, 19, 127, 133], "word": [10, 11, 18, 19, 79, 82, 85], "prepar": 74, "regular": [11, 27, 60, 117], "express": [11, 27, 46, 48, 60, 67, 117], "util": [51, 67, 83, 91, 125], "built": [53, 67, 96], "boolean": [11, 55, 60, 72, 78, 83, 112, 113], "mask": [11, 53, 60, 73, 88, 104, 111], "fix": [], "transit": [], "issu": 40, "tip": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "success": [12, 34, 44, 54, 64, 76, 87, 98, 109, 120, 132, 134], "In": [20, 39, 67], "welcom": [25, 28, 29, 30, 36, 45, 47, 49, 50, 51, 52, 53, 63, 133], "differ": [25, 71, 91, 97, 107, 108, 111, 119], "dimens": [25, 106], "code": [25, 38, 40, 94, 121, 123, 126, 130], "golf": [25, 114], "thought": [25, 30, 36, 42, 82, 105], "formula": [26, 77], "simplif": [26, 28, 35], "sine": 26, "pi": 26, "seri": 26, "calcul": [26, 37, 47, 48, 51, 61, 73, 77, 80, 82, 89, 96, 99, 107, 108, 110, 114, 117, 131], "solv": 27, "text": [27, 32, 46, 58, 60, 65, 88, 105, 115, 129], "process": [27, 29, 31, 55, 93, 100, 102, 105, 124, 126], "understand": [27, 30, 41, 42, 45, 55, 61, 70, 83, 86, 88, 89, 90, 92, 96, 97, 102, 111, 122, 125, 127, 128, 131], "compar": [27, 66, 67, 111, 113, 128], "address": [27, 74], "insight": 27, "statement": [28, 31, 51, 67, 103], "domain": 28, "simul": [30, 71], "recurs": [30, 33, 37, 51], "zero": [30, 58, 74, 95], "leverag": [30, 53], "theori": [30, 107, 135], "analyz": [31, 41, 71, 92, 97, 114], "largest": 31, "increas": [31, 92], "step": [31, 32, 36, 52, 59, 60, 65, 66, 68, 72, 95, 99, 101, 104, 122, 124, 127, 128], "develop": [31, 123, 125], "space": [11, 32, 66, 75, 82, 94, 121, 129], "methodologi": [32, 79, 128], "fibonacci": 33, "sequenc": [11, 33, 36, 41, 63, 65, 88, 92, 103, 116], "effici": [33, 42, 95, 106, 113, 118, 124], "tail": 33, "call": [33, 74], "pairwis": [33, 79], "sum": [33, 53, 131], "transform": [33, 105], "other": 33, "2014": 34, "api": 35, "center": [35, 82], "pascal": [35, 135], "triangl": [35, 135], "introduct": [35, 36, 40, 46, 49, 60, 71, 72, 75, 79, 85, 88, 114, 135], "breakdown": [35, 101], "flat": 35, "nest": [35, 135], "row": [35, 40, 82, 93], "strategi": [35, 73, 104, 113, 114], "farei": 36, "standard": 37, "deviat": 37, "defin": [37, 53, 57, 59, 80, 86, 113, 118], "mean": 37, "helper": [37, 60], "ani": 37, "rank": [37, 40, 50, 94, 114, 119, 135], "compact": [37, 46], "style": [37, 57], "six": 38, "coordin": 38, "check": [38, 57, 79, 88, 92, 93, 100], "overlap": 38, "contain": 38, "build": [38, 70, 118], "swap": 39, "interior": 39, "letter": [39, 42, 56, 57, 79, 84, 86, 112], "pair": [39, 66, 73, 77, 126], "flip": 39, "stencil": [39, 125, 126], "place": 39, "reorder": 39, "permut": [39, 68, 75], "from": [40, 75, 86, 124], "2015": [40, 44], "solver": 40, "competit": 40, "high": [40, 52], "full": [40, 89], "match": [40, 53, 68], "catch": 41, "length": [41, 65, 85, 103, 113], "correct": 41, "simplifi": [41, 48, 61, 66, 111, 130], "anagram": [42, 66], "filter": [42, 73, 104], "construct": [42, 78, 81, 116, 119, 127], "cap": 43, "wiki": 43, "progress": 43, "dyadic": [43, 68, 102, 135], "iota": [43, 102], "argument": [43, 56, 66, 68, 81, 119, 135], "modern": 43, "kei": [43, 85, 112, 126, 135], "base": [43, 65, 89, 95, 117], "divis": [45, 69, 104], "long": 45, "right": [45, 105], "scope": 45, "appli": [45, 57, 82, 88, 121, 125, 126], "logic": [45, 67, 88, 96], "higher": [45, 47, 119], "order": [45, 47, 52, 85, 135], "delimit": 46, "split": [11, 46, 69, 75, 85, 115, 129, 135], "identifi": [46, 72, 73, 83, 86, 99, 106, 113], "note": 46, "syntax": [46, 51], "membership": [46, 74], "modifi": [46, 119], "total": 47, "anonym": 47, "free": [47, 56, 57], "program": [47, 122, 135], "why": 47, "dot": 47, "technic": 47, "reason": [47, 107], "practic": 47, "8th": 48, "implicit": 48, "map": [48, 72, 74, 86, 102], "avoid": [48, 113], "redund": [48, 100], "variat": [48, 92], "list": [49, 51, 70, 78, 85, 92, 103, 110, 113, 124, 135], "element": [49, 51, 52, 53, 62, 91, 94, 123, 124, 125, 129, 135], "index": [49, 51, 75, 84, 95, 102, 118, 125], "convert": [49, 74, 84, 93, 96, 108], "concaten": [50, 58, 62, 93], "two": [50, 66, 92, 119, 130], "even": [51, 59], "singl": [51, 79, 112, 124], "median": 51, "sort": [51, 66, 85, 91, 114], "drop": [51, 94], "delta": 51, "averag": [51, 110, 114], "result": [51, 56, 58, 60, 80, 84, 104, 113], "mode": 52, "compress": 52, "stabil": 52, "remain": 52, "adjust": [52, 53, 82, 86], "appeal": 53, "uniqu": 53, "multi": [53, 84, 123, 125], "dimension": [53, 71, 123, 125], "clever": 53, "2016": 54, "scan": [55, 92], "properti": [55, 135], "less": 55, "than": 55, "context": 55, "run": [55, 113], "count": [56, 70, 81, 111, 112, 131], "string": [56, 99, 111, 112], "guid": [56, 67, 96, 111], "summat": [56, 100], "densiti": 56, "composit": 56, "bind": 56, "purpos": 56, "charact": [57, 58, 66, 74, 99, 112, 115, 117, 121, 135], "valid": [57, 68, 73, 83, 101], "locat": [58, 73], "lambda": [58, 66, 80, 85], "robust": 58, "safe": 58, "ad": 58, "ensur": 59, "becom": 59, "write": [59, 112], "remov": [60, 66, 75, 117, 124, 126], "between": [60, 107, 119], "doubl": [60, 122], "quot": 60, "pattern": [60, 63, 92], "intermedi": 60, "state": [60, 93], "machin": 60, "manag": 60, "area": [61, 77, 106, 107], "circl": [61, 107], "sector": 61, "fit": 62, "squar": [62, 100, 107], "scenario": [62, 115], "appropri": 62, "pad": [62, 82], "refin": [62, 67], "self": 62, "2017": 64, "chop": 65, "given": [65, 106, 127], "fake": 65, "dna": [65, 99, 111, 112], "maximum": [65, 70, 113], "box": 65, "level": 65, "checker": 66, "preprocess": 66, "date": [67, 75], "net": 67, "environ": [67, 118], "datetim": 67, "object": [67, 104], "convers": [67, 89, 93], "transpos": 68, "setup": [68, 80, 101], "criteria": 68, "invalid": [68, 101], "integ": [69, 95, 104, 117], "fraction": [69, 99, 127], "part": [69, 72], "remaind": [69, 104], "neat": 69, "trick": 69, "visibl": 70, "travers": 70, "dice": [71, 131], "roll": 71, "outcom": 71, "throw": [71, 131], "type": [71, 135], "limit": 71, "shift": 72, "amount": 72, "over": [72, 93, 110], "placement": 72, "canva": 72, "combin": [72, 92, 107, 135], "all": 72, "simpl": [73, 81, 121], "xml": 73, "rule": [73, 92, 96, 131], "angl": 73, "bracket": 73, "search": 73, "gregorian": 74, "year": [74, 96, 134], "chines": 74, "zodiac": [74, 75], "anim": 74, "work": 74, "cycl": 74, "sign": 75, "clean": [75, 94, 121], "column": [75, 89], "transposit": 75, "rotat": [75, 82, 121], "pars": [75, 126, 135], "quad": 75, "vfi": [11, 75], "cutoff": [75, 86], "interv": [75, 84], "2018": 76, "polygon": 77, "shoelac": 77, "extract": [77, 131], "diagon": [77, 100, 131], "chunk": 78, "segment": [78, 103, 129], "partit": [78, 90, 117, 125], "execut": 78, "reduc": [78, 93, 127], "consecut": [79, 103], "revisit": 79, "v": 79, "distanc": 80, "around": 80, "path": 80, "trigonometri": 80, "embrac": 80, "compil": [81, 86], "statist": 81, "safeti": 81, "mix": 82, "truncat": 82, "movement": 83, "chess": [83, 101], "knight": 83, "chessboard": 83, "pythagorean": 83, "theorem": 83, "score": [84, 114], "background": 84, "illustr": 84, "lookup": [84, 86], "non": [84, 92, 124], "posit": [84, 90, 114, 115], "anoth": [85, 129, 130], "translat": 86, "telephon": 86, "digit": [86, 97], "plain": 86, "keypad": 86, "flatten": 86, "relev": 86, "everyth": [86, 135], "togeth": 86, "2019": 87, "byte": 88, "utf": 88, "continu": 88, "label": 89, "spreadsheet": 89, "softwar": 89, "basic": 89, "z": 89, "overflow": 89, "26": [89, 135], "power": 89, "group": [90, 104, 114], "specif": [90, 95, 108], "neg": 90, "condit": [90, 93, 102], "revers": [90, 121, 135], "eleg": [90, 97], "structur": [90, 133], "numer": 91, "front": 91, "tradit": 91, "manipul": 91, "intersect": 91, "decreas": [92, 124], "down": 92, "opposit": 92, "direct": 92, "violat": 92, "re": 92, "assess": 92, "binari": 93, "verif": 93, "emul": 94, "print": 94, "behavior": [94, 102], "format": 94, "each": [94, 126], "replic": 94, "default": [94, 102], "displai": 94, "extra": 94, "touch": 94, "unicod": 94, "inclus": 95, "leap": 96, "xor": 96, "except": 96, "growth": 97, "decod": 97, "core": 97, "2020": 98, "magic": 100, "elimin": 100, "cover": 102, "chang": 102, "better": 102, "One": [102, 130], "time": [102, 108], "post": 102, "explicit": 102, "longest": [103, 113], "expect": 104, "creation": 104, "forward": 104, "justifi": 105, "incom": 105, "justif": 105, "rectangl": 106, "12": [106, 135], "candid": 106, "divisor": 106, "middl": 106, "inscrib": 107, "Its": 107, "circumscrib": 107, "symbol": 107, "absolut": 108, "minut": 108, "2021": 109, "window": 110, "extend": [110, 112], "wrap": [111, 125], "inner": 111, "neatli": 112, "Ones": 113, "commut": [113, 135], "import": 113, "requir": 113, "librari": 113, "unnecessari": 113, "fork": [113, 119, 127], "ti": 114, "stabl": 114, "concentr": 116, "ring": 116, "expand": 116, "minimum": 116, "insert": [117, 129], "separ": 117, "larg": 117, "staircas": 118, "origin": 118, "builder": 118, "symmetr": 119, "2022": 120, "caesar": 121, "cipher": 121, "uppercas": 121, "next": 122, "critic": 122, "dai": 122, "interchang": [123, 125], "horizont": 123, "adjac": [123, 125], "algorithm": [123, 125], "subarrai": 125, "emploi": 125, "custom": 126, "notat": 126, "cut": 126, "duplic": 126, "lowest": 127, "common": 127, "version": 128, "evalu": 128, "classic": 129, "wai": 129, "automat": 129, "merg": 129, "trail": 129, "excess": 129, "end": 130, "mechan": 131, "risk": 131, "player": 131, "loss": 131, "2023": 132, "about": 133, "thi": 133, "book": 133, "join": 133, "comment": [6, 15, 16], "comprehens": 135, "applic": 135, "kind": 135, "valenc": 135, "preced": 135, "equal": 135, "11": 135, "exchang": 135, "13": 135, "14": 135, "associ": 135, "15": 135, "16": 135, "lead": 135, "axi": 135, "17": 135, "18": 135, "19": 135, "attribut": 135, "20": 135, "21": 135, "22": 135, "23": 135, "24": 135, "25": 135, "functor": 135, "27": 135, "28": 135, "compos": 135, "29": 135, "30": 135, "sierpinski": 135, "relationship": 135, "verifi": [], "k": 6, "l": []}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Float your Boat 2013-7": [[0, "float-your-boat-2013-7"]], "Getting Started": [[0, "getting-started"], [5, "getting-started"], [12, "getting-started"], [34, "getting-started"], [44, "getting-started"], [54, "getting-started"], [64, "getting-started"], [73, "getting-started"], [76, "getting-started"], [87, "getting-started"], [98, "getting-started"], [109, "getting-started"], [119, "getting-started"], [120, "getting-started"], [132, "getting-started"], [133, "getting-started"], [134, "getting-started"]], "Rounding": [[0, "rounding"]], "Tacit": [[0, "tacit"]], "Data Representation": [[0, "data-representation"]], "Decimal Point Detection": [[0, "decimal-point-detection"]], "Mathematical Approaches": [[0, "mathematical-approaches"]], "Modulus": [[0, "modulus"]], "Comparison Tolerance": [[0, "comparison-tolerance"]], "Encode": [[0, "encode"]], "Subtract": [[0, "subtract"]], "A Quirky Solution": [[0, "a-quirky-solution"]], "Glyphs Used": [[0, "glyphs-used"], [16, "glyphs-used"], [15, "glyphs-used"], [6, "glyphs-used"], [7, "glyphs-used"]], "Concepts Used": [[0, "concepts-used"], [16, "concepts-used"], [15, "concepts-used"], [6, "concepts-used"], [7, "concepts-used"]], "Transcript": [[0, "transcript"], [16, "transcript"], [15, "transcript"], [6, "transcript"], [7, "transcript"]], "Go forth and Multiply 2013-8": [[1, "go-forth-and-multiply-2013-8"]], "Today\u2019s Quest: Go forth and Multiply": [[1, "today-s-quest-go-forth-and-multiply"]], "The Obvious Solution": [[1, "the-obvious-solution"]], "Exploring Alternative Solutions": [[1, "exploring-alternative-solutions"]], "Using the Definition of the Outer Product": [[1, "using-the-definition-of-the-outer-product"]], "Generating Indices as Vectors": [[1, "generating-indices-as-vectors"]], "Reshaping for Fun": [[1, "reshaping-for-fun"]], "Testing and Further Exploration": [[1, "testing-and-further-exploration"]], "Using Cumulative Additions": [[1, "using-cumulative-additions"]], "Going Further: Implementing Functions without Operators": [[1, "going-further-implementing-functions-without-operators"]], "Finding Alternative Methods": [[1, "finding-alternative-methods"]], "Relying on APL\u2019s Scalar Extension": [[1, "relying-on-apl-s-scalar-extension"]], "Final Challenge: Multiplication without Arithmetic": [[1, "final-challenge-multiplication-without-arithmetic"]], "Conclusion": [[1, "conclusion"], [2, "conclusion"], [4, "conclusion"], [5, "conclusion"], [8, "conclusion"], [27, "conclusion"], [28, "conclusion"], [29, "conclusion"], [31, "conclusion"], [35, "conclusion"], [37, "conclusion"], [39, "conclusion"], [40, "conclusion"], [43, "conclusion"], [45, "conclusion"], [46, "conclusion"], [47, "conclusion"], [48, "conclusion"], [49, "conclusion"], [50, "conclusion"], [51, "conclusion"], [52, "conclusion"], [53, "conclusion"], [55, "conclusion"], [56, "conclusion"], [57, "conclusion"], [58, "conclusion"], [59, "conclusion"], [60, "conclusion"], [61, "conclusion"], [62, "conclusion"], [65, "conclusion"], [66, "conclusion"], [67, "conclusion"], [68, "conclusion"], [70, "conclusion"], [71, "conclusion"], [72, "conclusion"], [73, "conclusion"], [74, "conclusion"], [75, "conclusion"], [77, "conclusion"], [79, "conclusion"], [80, "conclusion"], [81, "conclusion"], [83, "conclusion"], [84, "conclusion"], [85, "conclusion"], [86, "conclusion"], [88, "conclusion"], [89, "conclusion"], [90, "conclusion"], [91, "conclusion"], [92, "conclusion"], [94, "conclusion"], [95, "conclusion"], [96, "conclusion"], [97, "conclusion"], [99, "conclusion"], [100, "conclusion"], [102, "conclusion"], [103, "conclusion"], [104, "conclusion"], [107, "conclusion"], [108, "conclusion"], [110, "conclusion"], [111, "conclusion"], [112, "conclusion"], [113, "conclusion"], [114, "conclusion"], [115, "conclusion"], [118, "conclusion"], [119, "conclusion"], [121, "conclusion"], [122, "conclusion"], [123, "conclusion"], [124, "conclusion"], [125, "conclusion"], [126, "conclusion"], [127, "conclusion"], [128, "conclusion"], [130, "conclusion"], [131, "conclusion"]], "Additional Resources": [[1, "additional-resources"], [5, "additional-resources"]], "Home on the range 2013-6": [[2, "home-on-the-range-2013-6"]], "Generating Sample Data": [[2, "generating-sample-data"]], "Implementing the Function": [[2, "implementing-the-function"], [5, "implementing-the-function"], [43, "implementing-the-function"], [80, "implementing-the-function"], [82, "implementing-the-function"]], "Handling Matrices": [[2, "handling-matrices"]], "Edge Case: Empty Arrays": [[2, "edge-case-empty-arrays"]], "Further Optimizations": [[2, "further-optimizations"]], "Identity Crisis 2013-5": [[3, "identity-crisis-2013-5"]], "Generating an Identity Matrix": [[3, "generating-an-identity-matrix"]], "Method 1: Using Indices": [[3, "method-1-using-indices"]], "Method 2: Inequality Table": [[3, "method-2-inequality-table"]], "Method 3: Creating an Empty Matrix": [[3, "method-3-creating-an-empty-matrix"]], "Method 4: Using the Add Operator": [[3, "method-4-using-the-add-operator"]], "More Innovative Solutions": [[3, "more-innovative-solutions"]], "Encoding": [[3, "encoding"]], "Fun Techniques with Randomness": [[3, "fun-techniques-with-randomness"]], "Complex Numbers": [[3, "complex-numbers"]], "Summary": [[3, "summary"], [32, "summary"]], "It\u2019s a moving experience 2013-9": [[4, "it-s-a-moving-experience-2013-9"]], "Problem Overview": [[4, "problem-overview"], [32, "problem-overview"], [37, "problem-overview"], [40, "problem-overview"], [114, "problem-overview"]], "Visualizing n-wise Reduction": [[4, "visualizing-n-wise-reduction"]], "Improving the Approach": [[4, "improving-the-approach"]], "Clamping Input Size": [[4, "clamping-input-size"]], "Generalized Solutions": [[4, "generalized-solutions"]], "Advanced Error Handling": [[4, "advanced-error-handling"]], "Maintaining Data Shape": [[4, "maintaining-data-shape"]], "Keeping things in balance 2013-4": [[5, "keeping-things-in-balance-2013-4"]], "Normalizing Input": [[5, "normalizing-input"]], "Performance Comparisons": [[5, "performance-comparisons"], [80, "performance-comparisons"]], "Determining Balanced Parentheses": [[5, "determining-balanced-parentheses"]], "Alternative Solutions": [[5, "alternative-solutions"]], "Creative Solutions": [[5, "creative-solutions"]], "Solution Salvation 2013-10": [[8, "solution-salvation-2013-10"]], "Setting Up the Equation System": [[8, "setting-up-the-equation-system"]], "Finding the Missing Values": [[8, "finding-the-missing-values"]], "Iterative Techniques": [[8, "iterative-techniques"]], "Finding an Initial Guess": [[8, "finding-an-initial-guess"]], "APL Quest 2013": [[12, "apl-quest-2013"]], "Overview": [[12, "overview"], [34, "overview"], [43, "overview"], [44, "overview"], [45, "overview"], [54, "overview"], [58, "overview"], [64, "overview"], [68, "overview"], [76, "overview"], [81, "overview"], [87, "overview"], [98, "overview"], [109, "overview"], [120, "overview"], [132, "overview"], [134, "overview"]], "Problems": [[12, "problems"], [34, "problems"], [44, "problems"], [54, "problems"], [64, "problems"], [76, "problems"], [87, "problems"], [98, "problems"], [109, "problems"], [120, "problems"], [132, "problems"], [134, "problems"]], "Tips for Success": [[12, "tips-for-success"], [34, "tips-for-success"], [44, "tips-for-success"], [54, "tips-for-success"], [64, "tips-for-success"], [76, "tips-for-success"], [87, "tips-for-success"], [98, "tips-for-success"], [109, "tips-for-success"], [120, "tips-for-success"], [132, "tips-for-success"], [134, "tips-for-success"]], "Seems a Bit Odd To Me": [[13, "seems-a-bit-odd-to-me"]], " Keeping Things In Balance": [[20, "keeping-things-in-balance"]], "Identity Crisis": [[21, "identity-crisis"]], "Home on the range": [[22, "home-on-the-range"]], "Float your Boat": [[23, "float-your-boat"]], "Welcome to the APL Quest": [[25, "welcome-to-the-apl-quest"], [28, "welcome-to-the-apl-quest"], [29, "welcome-to-the-apl-quest"], [30, "welcome-to-the-apl-quest"], [36, "welcome-to-the-apl-quest"], [45, "welcome-to-the-apl-quest"], [47, "welcome-to-the-apl-quest"], [49, "welcome-to-the-apl-quest"], [50, "welcome-to-the-apl-quest"], [51, "welcome-to-the-apl-quest"], [63, "welcome-to-the-apl-quest"]], "Testing in Different Dimensions": [[25, "testing-in-different-dimensions"]], "Handling Points with Different Dimensions": [[25, "handling-points-with-different-dimensions"]], "Code Golfing": [[25, "code-golfing"]], "Final Thoughts": [[25, "final-thoughts"], [30, "final-thoughts"], [36, "final-thoughts"], [42, "final-thoughts"], [82, "final-thoughts"], [105, "final-thoughts"]], "APL Quest": [[26, "apl-quest"], [41, "apl-quest"]], "Quest Overview": [[26, "quest-overview"], [49, "quest-overview"]], "The Formula": [[26, "the-formula"]], "Simplification": [[26, "simplification"], [28, "simplification"]], "Testing Values": [[26, "testing-values"]], "Challenge": [[26, "challenge"]], "Implementing Sine Function": [[26, "implementing-sine-function"]], "Implementing Pi": [[26, "implementing-pi"]], "Series Approach for Pi": [[26, "series-approach-for-pi"]], "Calculation": [[26, "calculation"]], "Final Computation": [[26, "final-computation"]], "APL Quest: Problem Solving and Performance of Text Processing Techniques": [[27, "apl-quest-problem-solving-and-performance-of-text-processing-techniques"]], "Understanding the Problem": [[27, "understanding-the-problem"], [30, "understanding-the-problem"], [41, "understanding-the-problem"], [97, "understanding-the-problem"], [111, "understanding-the-problem"], [125, "understanding-the-problem"]], "Implementing the Solution": [[27, "implementing-the-solution"], [86, "implementing-the-solution"], [119, "implementing-the-solution"]], "Comparing Performance": [[27, "comparing-performance"]], "Addressing Edge Cases": [[27, "addressing-edge-cases"]], "Exploring Regular Expressions": [[27, "exploring-regular-expressions"]], "Performance Insights": [[27, "performance-insights"]], "Problem Statement": [[28, "problem-statement"], [31, "problem-statement"], [51, "problem-statement"], [103, "problem-statement"]], "Approach": [[28, "approach"], [31, "approach"], [48, "approach"], [103, "approach"], [115, "approach"]], "Mathematical Representation": [[28, "mathematical-representation"]], "Complex Number Approach": [[28, "complex-number-approach"]], "Final Solution Using Domain Concepts": [[28, "final-solution-using-domain-concepts"]], "Performance Considerations": [[29, "performance-considerations"], [31, "performance-considerations"], [36, "performance-considerations"], [70, "performance-considerations"], [86, "performance-considerations"], [105, "performance-considerations"], [125, "performance-considerations"]], "Test Data": [[29, "test-data"], [51, "test-data"], [73, "test-data"], [85, "test-data"], [11, "test-data"]], "Optimizing the Process": [[29, "optimizing-the-process"]], "Exploring Ranges": [[29, "exploring-ranges"]], "Creating Test Data": [[29, "creating-test-data"], [45, "creating-test-data"], [49, "creating-test-data"]], "": [[29, "id1"]], "Today\u2019s Quest": [[30, "today-s-quest"], [129, "today-s-quest"]], "Simulation Approach": [[30, "simulation-approach"]], "Recursive Solution": [[30, "recursive-solution"]], "Handling Edge Cases with Zero": [[30, "handling-edge-cases-with-zero"]], "Iterative Solution": [[30, "iterative-solution"]], "Performance Comparison": [[30, "performance-comparison"], [32, "performance-comparison"], [33, "performance-comparison"], [35, "performance-comparison"], [39, "performance-comparison"], [41, "performance-comparison"], [42, "performance-comparison"], [43, "performance-comparison"], [105, "performance-comparison"], [114, "performance-comparison"], [117, "performance-comparison"], [118, "performance-comparison"], [123, "performance-comparison"], [11, "performance-comparison"]], "Leveraging Number Theory": [[30, "leveraging-number-theory"]], "APL Quest: Analyzing the Largest Percentage Increase": [[31, "apl-quest-analyzing-the-largest-percentage-increase"]], "Step-by-Step Process": [[31, "step-by-step-process"], [124, "step-by-step-process"]], "Function Development": [[31, "function-development"]], "Edge Cases": [[31, "edge-cases"]], "APL Implementation Examples": [[31, "apl-implementation-examples"]], "APL Quest: Normalizing Text Spaces": [[32, "apl-quest-normalizing-text-spaces"]], "Methodology": [[32, "methodology"], [79, "methodology"]], "Implementation Steps": [[32, "implementation-steps"], [52, "implementation-steps"]], "Implementation in APL": [[32, "implementation-in-apl"]], "Computing the Fibonacci Sequence": [[33, "computing-the-fibonacci-sequence"]], "Fibonacci Sequence Definition": [[33, "fibonacci-sequence-definition"]], "Efficient Computation": [[33, "efficient-computation"]], "Recursive Function Implementation": [[33, "recursive-function-implementation"]], "Tail Call Optimization": [[33, "tail-call-optimization"]], "Pairwise Sum": [[33, "pairwise-sum"]], "Transformation Matrix": [[33, "transformation-matrix"]], "Other Approaches": [[33, "other-approaches"]], "APL Quest 2014": [[34, "apl-quest-2014"]], "API Quest: Generating a Centered Pascal\u2019s Triangle": [[35, "api-quest-generating-a-centered-pascal-s-triangle"]], "Introduction": [[35, "introduction"], [36, "introduction"], [40, "introduction"], [46, "introduction"], [49, "introduction"], [60, "introduction"], [71, "introduction"], [75, "introduction"], [79, "introduction"], [85, "introduction"], [114, "introduction"], [135, "introduction"]], "Problem Breakdown": [[35, "problem-breakdown"]], "Generating Pascal\u2019s Triangle": [[35, "generating-pascal-s-triangle"]], "Flat Approach": [[35, "flat-approach"]], "Nested Approach": [[35, "nested-approach"]], "Centering the Rows": [[35, "centering-the-rows"]], "Strategy for Centering": [[35, "strategy-for-centering"]], "Further Techniques": [[35, "further-techniques"]], "Simplification and Additional Approaches": [[35, "simplification-and-additional-approaches"]], "Alternative Approaches": [[36, "alternative-approaches"], [70, "alternative-approaches"], [94, "alternative-approaches"], [118, "alternative-approaches"], [123, "alternative-approaches"], [125, "alternative-approaches"], [126, "alternative-approaches"]], "Farey Sequence": [[36, "farey-sequence"]], "Example: n = 5": [[36, "example-n-5"]], "Generating the Sequence": [[36, "generating-the-sequence"], [63, "generating-the-sequence"], [116, "generating-the-sequence"]], "Step-by-step Implementation": [[36, "step-by-step-implementation"], [72, "step-by-step-implementation"]], "APL Quest: Standard Deviation Calculation": [[37, "apl-quest-standard-deviation-calculation"]], "Defining the Mean and Deviation": [[37, "defining-the-mean-and-deviation"]], "Helper Functions": [[37, "helper-functions"]], "Handling Arrays of Any Rank": [[37, "handling-arrays-of-any-rank"]], "Compact Style": [[37, "compact-style"]], "Implementing Recursion": [[37, "implementing-recursion"]], "Problem Description": [[39, "problem-description"]], "APL Quest: Swapping Interior Letters": [[39, "apl-quest-swapping-interior-letters"]], "Test Cases": [[39, "test-cases"]], "Approach 1: Pairing and Flipping": [[39, "approach-1-pairing-and-flipping"]], "Approach 2: Using Stencil": [[39, "approach-2-using-stencil"]], "Approach 3: In-Place Reordering": [[39, "approach-3-in-place-reordering"]], "Approach 4: Generating a Permutation Vector": [[39, "approach-4-generating-a-permutation-vector"]], "APL Quest: Problem 7 from the 2015 APL Problem Solver Competition": [[40, "apl-quest-problem-7-from-the-2015-apl-problem-solver-competition"]], "Normalizing Case": [[40, "normalizing-case"]], "Improving the Code": [[40, "improving-the-code"]], "High Rank Arrays Issue": [[40, "high-rank-arrays-issue"]], "Full Row Match": [[40, "full-row-match"]], "Alternative Solution": [[40, "alternative-solution"]], "Example Catch": [[41, "example-catch"]], "Analyzing Sample Data": [[41, "analyzing-sample-data"]], "Function Implementation": [[41, "function-implementation"]], "Matrix Considerations": [[41, "matrix-considerations"]], "Finding Lengths of Sequences": [[41, "finding-lengths-of-sequences"]], "Correcting the Approach": [[41, "correcting-the-approach"]], "Simplifying the Problem": [[41, "simplifying-the-problem"]], "APL Quest: Anagrams Problem": [[42, "apl-quest-anagrams-problem"]], "Understanding Anagrams": [[42, "understanding-anagrams"]], "Filtering Letters": [[42, "filtering-letters"]], "Normalization and Comparison": [[42, "normalization-and-comparison"]], "Efficiency Improvements": [[42, "efficiency-improvements"]], "Testing the Function": [[42, "testing-the-function"]], "Constructing Test Cases": [[42, "constructing-test-cases"]], "Conclusion: Understanding Anagrams": [[42, "conclusion-understanding-anagrams"]], "APL Quest Cap Wiki: Progressive Dyadic Iota": [[43, "apl-quest-cap-wiki-progressive-dyadic-iota"]], "Sample Data": [[43, "sample-data"], [94, "sample-data"], [113, "sample-data"]], "Error with Matrix Arguments": [[43, "error-with-matrix-arguments"]], "Modernized Solution": [[43, "modernized-solution"]], "Key-Based Approach": [[43, "key-based-approach"]], "Additional Considerations": [[43, "additional-considerations"]], "APL Quest 2015": [[44, "apl-quest-2015"]], "Understanding APL\u2019s Outer Product": [[45, "understanding-apl-s-outer-product"]], "Example: Multiplication Table": [[45, "example-multiplication-table"]], "Creating a Divisibility Table": [[45, "creating-a-divisibility-table"]], "Using APL\u2019s Long Right Scope": [[45, "using-apl-s-long-right-scope"]], "Applying Logical Operations": [[45, "applying-logical-operations"]], "Creating a Higher Order Function": [[45, "creating-a-higher-order-function"]], "APL Quest: Delimiter Splitting Challenge": [[46, "apl-quest-delimiter-splitting-challenge"]], "Sample Text": [[46, "sample-text"], [88, "sample-text"]], "Identifying Delimiters": [[46, "identifying-delimiters"]], "A Note on Syntax": [[46, "a-note-on-syntax"]], "Using Membership and Modifiers": [[46, "using-membership-and-modifiers"]], "A More Compact Expression": [[46, "a-more-compact-expression"]], "The Problem": [[47, "the-problem"], [65, "the-problem"], [102, "the-problem"]], "Calculating the Total": [[47, "calculating-the-total"]], "Creating an Anonymous Function": [[47, "creating-an-anonymous-function"]], "Point-Free Programming": [[47, "point-free-programming"]], "Higher-Order Functions": [[47, "higher-order-functions"]], "Why Use Dot Product?": [[47, "why-use-dot-product"]], "Technical Reasons": [[47, "technical-reasons"]], "Practical Reasons": [[47, "practical-reasons"]], "APL Quest: 8th Quest Overview": [[48, "apl-quest-8th-quest-overview"]], "Quest Description": [[48, "quest-description"]], "Implicit Mapping in APL": [[48, "implicit-mapping-in-apl"]], "Creating a Function": [[48, "creating-a-function"], [56, "creating-a-function"], [112, "creating-a-function"]], "Simplifying the Expression": [[48, "simplifying-the-expression"]], "Avoiding Redundant Calculations": [[48, "avoiding-redundant-calculations"]], "Set Computations Variation": [[48, "set-computations-variation"]], "Testing the List": [[49, "testing-the-list"]], "Grading the Elements": [[49, "grading-the-elements"]], "Indexing the Elements": [[49, "indexing-the-elements"]], "Converting to a Function": [[49, "converting-to-a-function"]], "Concatenate Two Arrays": [[50, "concatenate-two-arrays"]], "Using the Rank Operator": [[50, "using-the-rank-operator"]], "Example 1: Odd Number of Elements": [[51, "example-1-odd-number-of-elements"]], "Example 2: Even Number of Elements": [[51, "example-2-even-number-of-elements"]], "Example 3: Single Element": [[51, "example-3-single-element"]], "Example 4: Empty List": [[51, "example-4-empty-list"]], "APL Syntax": [[51, "apl-syntax"]], "Approaching the Computation of the Median": [[51, "approaching-the-computation-of-the-median"]], "Sorting and Dropping Elements": [[51, "sorting-and-dropping-elements"]], "Handling Scalars": [[51, "handling-scalars"], [79, "handling-scalars"], [94, "handling-scalars"]], "Utilizing the Grade Function": [[51, "utilizing-the-grade-function"], [91, "utilizing-the-grade-function"]], "Indexing to Create a Sorted List": [[51, "indexing-to-create-a-sorted-list"]], "Recursive Function for Median Calculation": [[51, "recursive-function-for-median-calculation"]], "Using Delta for Recursion": [[51, "using-delta-for-recursion"]], "Averaging the Result": [[51, "averaging-the-result"]], "Alternative Method: Dropping Indices": [[51, "alternative-method-dropping-indices"]], "Welcome to APL Quest": [[52, "welcome-to-apl-quest"], [133, "welcome-to-apl-quest"]], "Today\u2019s Quest: Find the Mode": [[52, "today-s-quest-find-the-mode"]], "Test Data and Approach": [[52, "test-data-and-approach"]], "Compressing the Data": [[52, "compressing-the-data"]], "Iteration and Stability": [[52, "iteration-and-stability"]], "Handling Remaining Elements": [[52, "handling-remaining-elements"]], "Final Adjustments for Order": [[52, "final-adjustments-for-order"]], "Using a High Order Function": [[52, "using-a-high-order-function"]], "Welcome to the Appeal Quest": [[53, "welcome-to-the-appeal-quest"]], "Defining the Function": [[53, "defining-the-function"], [113, "defining-the-function"], [118, "defining-the-function"]], "Comparison Table": [[53, "comparison-table"], [131, "comparison-table"]], "Summing Matches": [[53, "summing-matches"]], "Improving Computation": [[53, "improving-computation"]], "Finding Unique Elements": [[53, "finding-unique-elements"]], "Leveraging Built-in Functions": [[53, "leveraging-built-in-functions"]], "Final Adjustments": [[53, "final-adjustments"], [86, "final-adjustments"]], "Handling Multi-dimensional Arrays": [[53, "handling-multi-dimensional-arrays"]], "Clever Solutions with unique mask": [[53, "clever-solutions-with-unique-mask"]], "APL Quest 2016": [[54, "apl-quest-2016"]], "Understanding Boolean Vector Processing in APL": [[55, "understanding-boolean-vector-processing-in-apl"]], "The APL Solution": [[55, "the-apl-solution"]], "The Concept of Scan": [[55, "the-concept-of-scan"]], "Properties of Less Than in Boolean Context": [[55, "properties-of-less-than-in-boolean-context"]], "The Reduction Process": [[55, "the-reduction-process"]], "Visualizing the Operation": [[55, "visualizing-the-operation"]], "Example Implementation": [[55, "example-implementation"], [96, "example-implementation"]], "Running the Functions": [[55, "running-the-functions"]], "Counting Letters in a String: A Guide": [[56, "counting-letters-in-a-string-a-guide"]], "Sample Data Analysis": [[56, "sample-data-analysis"]], "Outer Product Concept": [[56, "outer-product-concept"]], "Example of Outer Product Result": [[56, "example-of-outer-product-result"]], "Summation and Reduction": [[56, "summation-and-reduction"]], "Point-Free Function": [[56, "point-free-function"]], "Using Density Function": [[56, "using-density-function"]], "Function Composition": [[56, "function-composition"]], "Binding Arguments": [[56, "binding-arguments"]], "Creating a General Purpose Function": [[56, "creating-a-general-purpose-function"]], "Checking Character Vectors for Valid Letters": [[57, "checking-character-vectors-for-valid-letters"]], "Defining the Character Vector": [[57, "defining-the-character-vector"]], "Function Definition": [[57, "function-definition"], [126, "function-definition"]], "Function Optimization": [[57, "function-optimization"]], "Point-Free Style": [[57, "point-free-style"]], "Final Implementation": [[57, "final-implementation"], [110, "final-implementation"], [116, "final-implementation"]], "Applying the Function": [[57, "applying-the-function"]], "Handling Edge Cases": [[58, "handling-edge-cases"], [77, "handling-edge-cases"], [114, "handling-edge-cases"], [115, "handling-edge-cases"]], "Finding Locations of Identical Characters in Text": [[58, "finding-locations-of-identical-characters-in-text"]], "Implementation with Lambda Function": [[58, "implementation-with-lambda-function"]], "A More Robust Solution": [[58, "a-more-robust-solution"]], "Concatenating for a Safe Result": [[58, "concatenating-for-a-safe-result"]], "Adding the Final Zero": [[58, "adding-the-final-zero"]], "Ensure Odd Numbers Become Even Using APL": [[59, "ensure-odd-numbers-become-even-using-apl"]], "Step 1: Define an Array": [[59, "step-1-define-an-array"]], "Step 2: Write the Function": [[59, "step-2-write-the-function"]], "Step 3: Alternative Solution": [[59, "step-3-alternative-solution"]], "Removing Text Between Double Quotes Using Regular Expressions": [[60, "removing-text-between-double-quotes-using-regular-expressions"]], "Using Regular Expressions": [[60, "using-regular-expressions"]], "Regular Expression Pattern": [[60, "regular-expression-pattern"]], "Handling Empty Quotes": [[60, "handling-empty-quotes"]], "Intermediate Steps": [[60, "intermediate-steps"]], "Helper Function": [[60, "helper-function"]], "Creating the Mask": [[60, "creating-the-mask"]], "Boolean Mask Optimization": [[60, "boolean-mask-optimization"]], "Implementation of a State Machine": [[60, "implementation-of-a-state-machine"]], "State Management": [[60, "state-management"]], "Final Result": [[60, "final-result"]], "Computing Areas of Circle Sectors Using APL": [[61, "computing-areas-of-circle-sectors-using-apl"]], "Understanding the Area of a Circle": [[61, "understanding-the-area-of-a-circle"]], "APL Representation": [[61, "apl-representation"]], "Testing with Values": [[61, "testing-with-values"]], "Computing Area of Circle Sectors": [[61, "computing-area-of-circle-sectors"]], "Simplifying the Calculation": [[61, "simplifying-the-calculation"]], "Using Tacit Functions": [[61, "using-tacit-functions"]], "Fitting Elements into a Square Array": [[62, "fitting-elements-into-a-square-array"]], "Example Scenario": [[62, "example-scenario"], [115, "example-scenario"]], "Finding the Appropriate Size": [[62, "finding-the-appropriate-size"]], "Padding the Array": [[62, "padding-the-array"]], "Refining the Definition": [[62, "refining-the-definition"]], "Self-Concatenation": [[62, "self-concatenation"]], "Function Patterns": [[63, "function-patterns"]], "APL Quest 2017": [[64, "apl-quest-2017"]], "Chopping Text into Sequences of a Given Length": [[65, "chopping-text-into-sequences-of-a-given-length"]], "Generating Fake DNA": [[65, "generating-fake-dna"]], "DNA Bases": [[65, "dna-bases"]], "Handling Maximum Boxing Levels": [[65, "handling-maximum-boxing-levels"]], "The Solution": [[65, "the-solution"]], "Alternative Method": [[65, "alternative-method"], [115, "alternative-method"]], "Implementation Steps:": [[65, "implementation-steps"]], "Comparing Two Character Vectors: An Anagram Checker": [[66, "comparing-two-character-vectors-an-anagram-checker"]], "Anagram Definition": [[66, "anagram-definition"]], "Setting Up Arguments": [[66, "setting-up-arguments"]], "Initial Pairing": [[66, "initial-pairing"]], "Preprocessing Steps": [[66, "preprocessing-steps"]], "Step 1: Removing Spaces": [[66, "step-1-removing-spaces"]], "Step 2: Sorting Characters": [[66, "step-2-sorting-characters"]], "Step 3: Comparison": [[66, "step-3-comparison"]], "Simplifying with a Lambda Function": [[66, "simplifying-with-a-lambda-function"]], "Final Steps": [[66, "final-steps"]], "Comparing Dates in APL: A Guide": [[67, "comparing-dates-in-apl-a-guide"]], "The Problem Statement": [[67, "the-problem-statement"]], "Approaching the Problem": [[67, "approaching-the-problem"]], "Setting Up .NET Environment": [[67, "setting-up-net-environment"]], "Creating DateTime Objects": [[67, "creating-datetime-objects"]], "Comparison Logic": [[67, "comparison-logic"]], "Utilizing APL\u2019s Built-In Functionality": [[67, "utilizing-apls-built-in-functionality"]], "Conversion and Subtraction": [[67, "conversion-and-subtraction"]], "Refined Function Expression": [[67, "refined-function-expression"]], "Validating Dyadic Transpose Arguments": [[68, "validating-dyadic-transpose-arguments"]], "Test Cases Setup": [[68, "test-cases-setup"]], "Validity Criteria": [[68, "validity-criteria"]], "Examples of Valid and Invalid Cases": [[68, "examples-of-valid-and-invalid-cases"]], "Detailed Approach": [[68, "detailed-approach"]], "Handling Permutation Vectors": [[68, "handling-permutation-vectors"]], "Matching Shapes": [[68, "matching-shapes"]], "Final Steps and Implementation": [[68, "final-steps-and-implementation"]], "Splitting Numbers into Integer and Fractional Parts": [[69, "splitting-numbers-into-integer-and-fractional-parts"]], "Getting the Integer Part": [[69, "getting-the-integer-part"]], "Subtracting to Find the Fractional Part": [[69, "subtracting-to-find-the-fractional-part"]], "Alternative Methods: Division Remainder": [[69, "alternative-methods-division-remainder"]], "A Neat Trick Using Encode": [[69, "a-neat-trick-using-encode"]], "Counting Visible Buildings": [[70, "counting-visible-buildings"], [70, "id1"]], "Understanding Visibility": [[70, "understanding-visibility"]], "Creating an APL Function": [[70, "creating-an-apl-function"]], "Traversing the List": [[70, "traversing-the-list"]], "Cumulative Maximum Comparison": [[70, "cumulative-maximum-comparison"]], "Performance Testing": [[70, "performance-testing"]], "Simulating Dice Rolls and Analyzing Outcomes": [[71, "simulating-dice-rolls-and-analyzing-outcomes"]], "Simulating Dice Throws": [[71, "simulating-dice-throws"]], "Exploring Different Types of Dice": [[71, "exploring-different-types-of-dice"]], "Analyzing Outcomes": [[71, "analyzing-outcomes"]], "Handling Dimensional Limitations": [[71, "handling-dimensional-limitations"]], "Implementation of a Function": [[71, "implementation-of-a-function"]], "Shifting Boolean Data: An Introduction": [[72, "shifting-boolean-data-an-introduction"]], "Overview of Boolean Data Shifting": [[72, "overview-of-boolean-data-shifting"]], "Sample Data and Shifting Amounts": [[72, "sample-data-and-shifting-amounts"]], "Mapping Over the Shifting Amounts": [[72, "mapping-over-the-shifting-amounts"]], "Step 1: Identifying Data to Keep": [[72, "step-1-identifying-data-to-keep"]], "Step 2: Identifying Placement for Data": [[72, "step-2-identifying-placement-for-data"]], "Step 3: Creating a Canvas": [[72, "step-3-creating-a-canvas"]], "Handling Scalar Inputs": [[72, "handling-scalar-inputs"]], "Combining All Parts": [[72, "combining-all-parts"]], "A Simple Test for XML Validity": [[73, "a-simple-test-for-xml-validity"]], "Rules for XML Validity": [[73, "rules-for-xml-validity"]], "Filtering Angle Brackets": [[73, "filtering-angle-brackets"]], "Strategy to Identify Paired Brackets": [[73, "strategy-to-identify-paired-brackets"]], "Searching for Angle Bracket Locations": [[73, "searching-for-angle-bracket-locations"]], "Validating the Mask": [[73, "validating-the-mask"]], "Final Calculation": [[73, "final-calculation"]], "Final Function Implementation": [[74, "final-function-implementation"]], "Converting Gregorian Year Numbers to Chinese Zodiac Animals": [[74, "converting-gregorian-year-numbers-to-chinese-zodiac-animals"]], "Data Preparation": [[74, "data-preparation"]], "Reshaping the Data": [[74, "reshaping-the-data"]], "Working with the Zodiac Cycle": [[74, "working-with-the-zodiac-cycle"]], "Mapping Years to Zodiac Animals": [[74, "mapping-years-to-zodiac-animals"]], "Character Vector Membership": [[74, "character-vector-membership"]], "Addressing Year Zero": [[74, "addressing-year-zero"]], "Examples of Function Calls": [[74, "examples-of-function-calls"]], "Computing Zodiac Signs from Dates": [[75, "computing-zodiac-signs-from-dates"]], "Cleaning the Data": [[75, "cleaning-the-data"]], "Column Permutation": [[75, "column-permutation"]], "Data Transposition": [[75, "data-transposition"]], "Table Rotation": [[75, "table-rotation"]], "Splitting the Table": [[75, "splitting-the-table"]], "Removing Spaces": [[75, "removing-spaces"]], "Date Parsing": [[75, "date-parsing"]], "Using Quad VFI": [[75, "using-quad-vfi"]], "Creating a Cutoff Table": [[75, "creating-a-cutoff-table"]], "Finding Zodiac Signs": [[75, "finding-zodiac-signs"]], "Interval Index": [[75, "interval-index"]], "Final Function": [[75, "final-function"]], "APL Quest 2018": [[76, "apl-quest-2018"]], "Calculating the Area of a Polygon Using the Shoelace Formula": [[77, "calculating-the-area-of-a-polygon-using-the-shoelace-formula"]], "Overview of the Shoelace Formula": [[77, "overview-of-the-shoelace-formula"]], "Data Normalization": [[77, "data-normalization"]], "Extracting Diagonal Pairs": [[77, "extracting-diagonal-pairs"]], "Computing the Diagonal Products": [[77, "computing-the-diagonal-products"]], "Final Optimizations": [[77, "final-optimizations"]], "Chunking a List into Segments": [[78, "chunking-a-list-into-segments"]], "The Approach Using Partitioning": [[78, "the-approach-using-partitioning"]], "Test Case Example": [[78, "test-case-example"]], "Constructing a Boolean Vector": [[78, "constructing-a-boolean-vector"]], "Function Execution": [[78, "function-execution"]], "Reducing Parentheses": [[78, "reducing-parentheses"]], "Testing the Functionality": [[78, "testing-the-functionality"]], "Checking for Consecutive Identical Letters in Words": [[79, "checking-for-consecutive-identical-letters-in-words"]], "APL Example:": [[79, "apl-example"], [79, "id1"], [79, "id2"], [79, "id3"], [79, "id4"]], "Pairwise Comparison": [[79, "pairwise-comparison"]], "Revisiting Multiple Words": [[79, "revisiting-multiple-words"]], "Single Word vs. Multiple Words": [[79, "single-word-vs-multiple-words"]], "Computing the Distance Around a Path Defined by Points": [[80, "computing-the-distance-around-a-path-defined-by-points"]], "Problem Setup": [[80, "problem-setup"]], "Defining the Lambda Function": [[80, "defining-the-lambda-function"]], "Calculating Distances": [[80, "calculating-distances"]], "Using Trigonometry": [[80, "using-trigonometry"]], "Optimizing the Function": [[80, "optimizing-the-function"]], "Embracing Array Operations": [[80, "embracing-array-operations"]], "Results Summary": [[80, "results-summary"]], "Compiling Simple Statistics on Grades": [[81, "compiling-simple-statistics-on-grades"]], "Sample Grades": [[81, "sample-grades"]], "Setting Up the Arguments": [[81, "setting-up-the-arguments"]], "Counting Grades": [[81, "counting-grades"]], "Computing Percentages": [[81, "computing-percentages"]], "Rounding Percentages": [[81, "rounding-percentages"]], "Constructing the Final Table": [[81, "constructing-the-final-table"]], "Safety and Performance Considerations": [[81, "safety-and-performance-considerations"]], "Centering Words in a Matrix": [[82, "centering-words-in-a-matrix"]], "Creating the Matrix": [[82, "creating-the-matrix"], [126, "creating-the-matrix"]], "Applying the Mix Function": [[82, "applying-the-mix-function"]], "Truncating Rows": [[82, "truncating-rows"]], "Adjusting Spaces": [[82, "adjusting-spaces"]], "Calculating Space Padding": [[82, "calculating-space-padding"]], "Rotating Rows for Centering": [[82, "rotating-rows-for-centering"]], "Understanding the Movement of a Chess Knight": [[83, "understanding-the-movement-of-a-chess-knight"]], "Approaches to the Problem": [[83, "approaches-to-the-problem"]], "Setting Up the Chessboard": [[83, "setting-up-the-chessboard"]], "Identifying Valid Moves": [[83, "identifying-valid-moves"]], "Creating the Boolean Array": [[83, "creating-the-boolean-array"]], "Utilizing the Pythagorean Theorem": [[83, "utilizing-the-pythagorean-theorem"]], "Converting Scores into Letter Grades": [[84, "converting-scores-into-letter-grades"]], "Background": [[84, "background"]], "Implementation": [[84, "implementation"], [103, "implementation"]], "The Interval Index Function": [[84, "the-interval-index-function"]], "Illustration of Interval Lookups": [[84, "illustration-of-interval-lookups"]], "Handling Non-positive Scores": [[84, "handling-non-positive-scores"]], "Multi-indexing in APL": [[84, "multi-indexing-in-apl"]], "Resulting Letter Grades": [[84, "resulting-letter-grades"]], "Splitting a List of Words by Length": [[85, "splitting-a-list-of-words-by-length"]], "Method 1: Using Lambda Functions": [[85, "method-1-using-lambda-functions"]], "Method 2: Using the Key Operator": [[85, "method-2-using-the-key-operator"]], "Solution to Ordering": [[85, "solution-to-ordering"]], "Another Approach": [[85, "another-approach"]], "Method 3: Sorting by Length": [[85, "method-3-sorting-by-length"]], "Translating Telephone Numbers from Digits and Letters to Plain Numbers": [[86, "translating-telephone-numbers-from-digits-and-letters-to-plain-numbers"]], "Understanding the Telephone Keypad": [[86, "understanding-the-telephone-keypad"]], "Creating Cutoff Points": [[86, "creating-cutoff-points"]], "Flattening the Matrix": [[86, "flattening-the-matrix"]], "Identifying Relevant Letters": [[86, "identifying-relevant-letters"]], "Mapping Letters and Digits to Numbers": [[86, "mapping-letters-and-digits-to-numbers"]], "Handling Digits": [[86, "handling-digits"]], "Compiling Everything Together": [[86, "compiling-everything-together"]], "Generating Values": [[86, "generating-values"]], "Defining a Lookup Function": [[86, "defining-a-lookup-function"]], "APL Quest 2019": [[87, "apl-quest-2019"]], "Understanding Byte Sequences and UTF-8 Encoding": [[88, "understanding-byte-sequences-and-utf-8-encoding"]], "Introduction to Byte Sequences": [[88, "introduction-to-byte-sequences"]], "Understanding UTF-8": [[88, "understanding-utf-8"]], "Byte Representation": [[88, "byte-representation"]], "Continuation Bytes": [[88, "continuation-bytes"]], "Checking Byte Ranges": [[88, "checking-byte-ranges"]], "Applying Logical Functions": [[88, "applying-logical-functions"]], "Implementing Masking": [[88, "implementing-masking"]], "Alternative Methods": [[88, "alternative-methods"]], "Understanding Column Label Conversion in Spreadsheet Software": [[89, "understanding-column-label-conversion-in-spreadsheet-software"]], "The Basics: A to Z": [[89, "the-basics-a-to-z"]], "Understanding Overflow in Base 26": [[89, "understanding-overflow-in-base-26"]], "Example Calculation": [[89, "example-calculation"]], "Creating a Full Solution": [[89, "creating-a-full-solution"]], "The Powers in Column Conversion": [[89, "the-powers-in-column-conversion"]], "Understanding Vector Partitioning in APL": [[90, "understanding-vector-partitioning-in-apl"]], "Group Specification": [[90, "group-specification"]], "Solution Approach": [[90, "solution-approach"]], "Positive Case": [[90, "positive-case"]], "Negative Case": [[90, "negative-case"]], "Conditional Reversal": [[90, "conditional-reversal"]], "Elegance in Reversal": [[90, "elegance-in-reversal"]], "Final Function Structure": [[90, "final-function-structure"]], "Moving Elements in a Numeric Vector to the Front in APL": [[91, "moving-elements-in-a-numeric-vector-to-the-front-in-apl"]], "Traditional Approach": [[91, "traditional-approach"]], "Using Comparisons and Sorting": [[91, "using-comparisons-and-sorting"]], "Array Manipulation Using Grading": [[91, "array-manipulation-using-grading"]], "Set Functions Approach": [[91, "set-functions-approach"]], "Implementing Set Difference and Intersection": [[91, "implementing-set-difference-and-intersection"]], "Analyzing Non-Decreasing and Non-Increasing Patterns in a List of Numbers": [[92, "analyzing-non-decreasing-and-non-increasing-patterns-in-a-list-of-numbers"]], "Understanding the Concept": [[92, "understanding-the-concept"], [122, "understanding-the-concept"]], "Example: Up and Down Sequence": [[92, "example-up-and-down-sequence"]], "Scanning in the Opposite Direction": [[92, "scanning-in-the-opposite-direction"]], "Combining the Two Scans": [[92, "combining-the-two-scans"]], "Testing for Rule Violations": [[92, "testing-for-rule-violations"]], "Re-assessing with Variations": [[92, "re-assessing-with-variations"]], "Final Checks": [[92, "final-checks"]], "Checking Bit States in APL": [[93, "checking-bit-states-in-apl"]], "Example": [[93, "example"], [95, "example"], [104, "example"], [114, "example"], [128, "example"]], "Converting to Binary": [[93, "converting-to-binary"]], "Concatenation and Conversion": [[93, "concatenation-and-conversion"]], "Binary Representation": [[93, "binary-representation"]], "Checking Bit Conditions": [[93, "checking-bit-conditions"]], "Processing the Matrix": [[93, "processing-the-matrix"]], "Reducing Over Rows": [[93, "reducing-over-rows"]], "Verification of Conditions": [[93, "verification-of-conditions"]], "Conclusion and Testing": [[93, "conclusion-and-testing"]], "Initial Approach": [[94, "initial-approach"], [124, "initial-approach"]], "Emulating APL Array Printing Behavior": [[94, "emulating-apl-array-printing-behavior"]], "Formatting Each Element": [[94, "formatting-each-element"]], "Example Code": [[94, "example-code"]], "Using Replication": [[94, "using-replication"]], "Using APL\u2019s Default Display": [[94, "using-apl-s-default-display"]], "Dropping Extra Spaces": [[94, "dropping-extra-spaces"]], "Rank Operator": [[94, "rank-operator"]], "Final Touches": [[94, "final-touches"]], "Example Unicode Implementation": [[94, "example-unicode-implementation"]], "Clean Up": [[94, "clean-up"]], "Generating Inclusive Integer Ranges in APL": [[95, "generating-inclusive-integer-ranges-in-apl"]], "Problem Specification": [[95, "problem-specification"]], "Steps to Generate the Range": [[95, "steps-to-generate-the-range"]], "Efficient Method": [[95, "efficient-method"]], "Using Zero-Based Indexing": [[95, "using-zero-based-indexing"]], "Understanding Leap Years: A Guide": [[96, "understanding-leap-years-a-guide"]], "Leap Year Rules": [[96, "leap-year-rules"]], "Examples": [[96, "examples"]], "Approach to Implementation": [[96, "approach-to-implementation"]], "Logic for Leap Year Calculation": [[96, "logic-for-leap-year-calculation"]], "Handling Arrays": [[96, "handling-arrays"]], "XOR Reduction for Exception Handling": [[96, "xor-reduction-for-exception-handling"]], "Converting to Function": [[96, "converting-to-function"]], "Using Built-in Functions": [[96, "using-built-in-functions"]], "Analyzing Alternating Digit Growth in Numbers": [[97, "analyzing-alternating-digit-growth-in-numbers"]], "Encoding and Decoding in APL": [[97, "encoding-and-decoding-in-apl"]], "The Core of the Solution": [[97, "the-core-of-the-solution"]], "Normalizing Differences": [[97, "normalizing-differences"]], "A More Elegant Approach": [[97, "a-more-elegant-approach"]], "Final Optimization": [[97, "final-optimization"]], "APL Quest 2020": [[98, "apl-quest-2020"]], "Calculating Percentage of Characters in a DNA String": [[99, "calculating-percentage-of-characters-in-a-dna-string"]], "Step 1: Identify Characters": [[99, "step-1-identify-characters"]], "Step 2: Calculate the Fraction": [[99, "step-2-calculate-the-fraction"]], "Step 3: Optimize the Calculation": [[99, "step-3-optimize-the-calculation"]], "Checking for Magic Squares": [[100, "checking-for-magic-squares"]], "Definition of Magic Squares": [[100, "definition-of-magic-squares"]], "Approach to Checking for Magic Squares": [[100, "approach-to-checking-for-magic-squares"]], "Finding the Diagonal": [[100, "finding-the-diagonal"]], "Summation Process": [[100, "summation-process"]], "Optimization and Elimination of Redundancy": [[100, "optimization-and-elimination-of-redundancy"]], "Chess Setup Challenge": [[101, "chess-setup-challenge"]], "Examples of Setups": [[101, "examples-of-setups"]], "Valid Setup": [[101, "valid-setup"]], "Invalid Setups": [[101, "invalid-setups"]], "Step-by-Step Breakdown": [[101, "step-by-step-breakdown"]], "Creating a Cover for the Dyadic Iota in APL": [[102, "creating-a-cover-for-the-dyadic-iota-in-apl"]], "Understanding the Default Behavior": [[102, "understanding-the-default-behavior"]], "Approaches to Change the Behavior": [[102, "approaches-to-change-the-behavior"]], "Approach 1: Conditional Mapping": [[102, "approach-1-conditional-mapping"]], "Better Conditional Handling": [[102, "better-conditional-handling"]], "One-time Index Function": [[102, "one-time-index-function"]], "Post-processing with Modulus": [[102, "post-processing-with-modulus"]], "Explicit Function Definition": [[102, "explicit-function-definition"]], "Finding the Longest Consecutive Sequence in a List of Numbers": [[103, "finding-the-longest-consecutive-sequence-in-a-list-of-numbers"]], "Length of Segments": [[103, "length-of-segments"]], "Performance Consideration": [[103, "performance-consideration"]], "Grouping Integers by Divisibility": [[104, "grouping-integers-by-divisibility"]], "Objective": [[104, "objective"]], "Expected Results:": [[104, "expected-results"]], "Implementation Strategy": [[104, "implementation-strategy"]], "Using the Modulus Operator": [[104, "using-the-modulus-operator"]], "APL Example for Mask Creation": [[104, "apl-example-for-mask-creation"]], "Filtering Function": [[104, "filtering-function"]], "APL Example for Filtering": [[104, "apl-example-for-filtering"]], "Advanced Solution": [[104, "advanced-solution"]], "Creating a Remainder Table in APL": [[104, "creating-a-remainder-table-in-apl"]], "Steps Going Forward": [[104, "steps-going-forward"]], "Final APL Solution for Grouping": [[104, "final-apl-solution-for-grouping"]], "Justified Text Transformation in APL": [[105, "justified-text-transformation-in-apl"]], "Example Overview": [[105, "example-overview"]], "Normalizing Incoming Data": [[105, "normalizing-incoming-data"]], "Right Justification Process": [[105, "right-justification-process"]], "Finding Rectangle Dimensions with Given Area": [[106, "finding-rectangle-dimensions-with-given-area"]], "Example: An Area of 12": [[106, "example-an-area-of-12"]], "Finding Candidates": [[106, "finding-candidates"]], "Divisors of 12": [[106, "divisors-of-12"]], "Identifying the Middle Values": [[106, "identifying-the-middle-values"]], "Efficiently Finding Dimensions": [[106, "efficiently-finding-dimensions"]], "Solution Summary": [[106, "solution-summary"]], "Finding the Difference in Area Between an Inscribed Square and Its Circumscribing Circle": [[107, "finding-the-difference-in-area-between-an-inscribed-square-and-its-circumscribing-circle"]], "Theory Overview": [[107, "theory-overview"]], "Symbolic Reasoning": [[107, "symbolic-reasoning"]], "Calculating the Area of the Circle": [[107, "calculating-the-area-of-the-circle"]], "Combining Areas": [[107, "combining-areas"]], "Calculating Absolute Time Difference in Minutes": [[108, "calculating-absolute-time-difference-in-minutes"]], "Example Problem": [[108, "example-problem"]], "Normalization of Time Specifications": [[108, "normalization-of-time-specifications"]], "Converting to Minutes": [[108, "converting-to-minutes"]], "Calculating the Absolute Difference": [[108, "calculating-the-absolute-difference"]], "APL Quest 2021": [[109, "apl-quest-2021"]], "Calculating the Window Average of a List of Numbers in APL": [[110, "calculating-the-window-average-of-a-list-of-numbers-in-apl"]], "Example Data": [[110, "example-data"]], "Window Size Calculation": [[110, "window-size-calculation"]], "Reduction Over Windows": [[110, "reduction-over-windows"]], "Average Calculation": [[110, "average-calculation"]], "Edge Cases and Extending the Data": [[110, "edge-cases-and-extending-the-data"]], "Comparing DNA Strings: A Guide": [[111, "comparing-dna-strings-a-guide"]], "Creating a Mask": [[111, "creating-a-mask"]], "Counting Differences": [[111, "counting-differences"]], "Wrapping in a Function": [[111, "wrapping-in-a-function"]], "Simplifying the Function": [[111, "simplifying-the-function"]], "Using Inner Product": [[111, "using-inner-product"]], "Implementing the Final Function": [[111, "implementing-the-final-function"]], "Counting DNA Letters in a Character Vector": [[112, "counting-dna-letters-in-a-character-vector"]], "Sample DNA String": [[112, "sample-dna-string"]], "Creating the Boolean Table": [[112, "creating-the-boolean-table"]], "Handling Single Letters": [[112, "handling-single-letters"]], "Alternative Approach: Using the Key Operator": [[112, "alternative-approach-using-the-key-operator"]], "Writing the Function Neatly": [[112, "writing-the-function-neatly"]], "Implementation of the Extended Key Operator": [[112, "implementation-of-the-extended-key-operator"]], "Finding the Longest Run of Ones in a Boolean Vector": [[113, "finding-the-longest-run-of-ones-in-a-boolean-vector"]], "Using Commutative Operators": [[113, "using-commutative-operators"]], "Finding the Maximum Length": [[113, "finding-the-maximum-length"]], "Handling Empty Lists": [[113, "handling-empty-lists"]], "Importing Required Libraries": [[113, "importing-required-libraries"]], "Improving Performance": [[113, "improving-performance"], [118, "improving-performance"]], "Performance Results": [[113, "performance-results"]], "Avoiding Unnecessary Computation": [[113, "avoiding-unnecessary-computation"]], "Identifying Runs": [[113, "identifying-runs"]], "Final Implementation Strategy": [[113, "final-implementation-strategy"]], "Using Forks for Efficiency": [[113, "using-forks-for-efficiency"]], "Comparing Approaches": [[113, "comparing-approaches"]], "Analyzing Golf Scores: Rank Calculation with Average Position for Tied Scores": [[114, "analyzing-golf-scores-rank-calculation-with-average-position-for-tied-scores"]], "General Approach": [[114, "general-approach"]], "Implementation Strategies": [[114, "implementation-strategies"]], "Method 1: Grading and Grouping": [[114, "method-1-grading-and-grouping"]], "Method 2: Stable Sorting and Averaging": [[114, "method-2-stable-sorting-and-averaging"]], "Method 3: Using Functions in APL": [[114, "method-3-using-functions-in-apl"]], "Splitting Text in APL": [[115, "splitting-text-in-apl"]], "Finding Character Positions": [[115, "finding-character-positions"]], "Splitting the Text": [[115, "splitting-the-text"]], "Testing and Finalizing": [[115, "testing-and-finalizing"]], "Constructing Concentric Rings of Numbers": [[116, "constructing-concentric-rings-of-numbers"]], "Concept Overview": [[116, "concept-overview"]], "Expanding to a Matrix": [[116, "expanding-to-a-matrix"]], "Minimum Function": [[116, "minimum-function"]], "Inserting Separators in Large Integers": [[117, "inserting-separators-in-large-integers"]], "Generating Test Data": [[117, "generating-test-data"]], "Approach 1: Using Partitioning": [[117, "approach-1-using-partitioning"]], "Approach 2: Using Regular Expressions": [[117, "approach-2-using-regular-expressions"]], "Approach 3: Using a Matrix-Based Method": [[117, "approach-3-using-a-matrix-based-method"]], "Calculating Characters to Remove": [[117, "calculating-characters-to-remove"]], "Problem Definition": [[118, "problem-definition"], [38, "problem-definition"]], "Building a Staircase in APL": [[118, "building-a-staircase-in-apl"]], "Setting Up the Environment": [[118, "setting-up-the-environment"]], "Generating the Matrix": [[118, "generating-the-matrix"]], "Creating the Addition Table": [[118, "creating-the-addition-table"]], "Optimization with Index Origin": [[118, "optimization-with-index-origin"]], "An Efficient Matrix Builder": [[118, "an-efficient-matrix-builder"]], "Finding the Symmetric Difference Between Two Sets": [[119, "finding-the-symmetric-difference-between-two-sets"]], "Using the Fork Construct": [[119, "using-the-fork-construct"]], "Alternative Approach": [[119, "alternative-approach"]], "Modifying the Set Difference Function": [[119, "modifying-the-set-difference-function"]], "Handling Higher-Rank Arguments": [[119, "handling-higher-rank-arguments"]], "APL Quest 2022": [[120, "apl-quest-2022"]], "Implementing a Simple Caesar Cipher for Uppercase Characters and Spaces": [[121, "implementing-a-simple-caesar-cipher-for-uppercase-characters-and-spaces"]], "The Concept": [[121, "the-concept"]], "Implementing the Cipher": [[121, "implementing-the-cipher"]], "Applying the Cipher": [[121, "applying-the-cipher"]], "Rotation": [[121, "rotation"]], "Code Clean-Up": [[121, "code-clean-up"]], "Reversing the Cipher": [[121, "reversing-the-cipher"]], "Computing the Next Double Critical Day": [[122, "computing-the-next-double-critical-day"]], "Steps to Determine the Next Double Critical Day": [[122, "steps-to-determine-the-next-double-critical-day"]], "Programming the Solution": [[122, "programming-the-solution"]], "Implementation Example": [[122, "implementation-example"], [125, "implementation-example"]], "Interchanging Horizontally Adjacent Elements in a Multi-Dimensional Array": [[123, "interchanging-horizontally-adjacent-elements-in-a-multi-dimensional-array"]], "Example Initialization": [[123, "example-initialization"]], "Initial Algorithm Development": [[123, "initial-algorithm-development"]], "Example Code Implementation": [[123, "example-code-implementation"]], "Optimizing the Approach": [[123, "optimizing-the-approach"]], "Removing Non-Decreasing Elements from a List": [[124, "removing-non-decreasing-elements-from-a-list"]], "Problem Explanation": [[124, "problem-explanation"]], "APL Implementation": [[124, "apl-implementation"]], "Multiple Passes": [[124, "multiple-passes"]], "Efficient Approach: Single Pass": [[124, "efficient-approach-single-pass"]], "Steps to Implement the Single-Pass Solution": [[124, "steps-to-implement-the-single-pass-solution"]], "APL Implementation for Single Pass": [[124, "apl-implementation-for-single-pass"]], "Interchanging Adjacent Elements in a Multi-Dimensional Array": [[125, "interchanging-adjacent-elements-in-a-multi-dimensional-array"]], "Developing the Algorithm": [[125, "developing-the-algorithm"]], "Utilizing Partitioning and Function Wrapping": [[125, "utilizing-partitioning-and-function-wrapping"]], "Applying to Subarrays": [[125, "applying-to-subarrays"]], "Using Indexing": [[125, "using-indexing"]], "Employing the Stencil Operator": [[125, "employing-the-stencil-operator"]], "Parsing Key-Value Pairs into a Matrix": [[126, "parsing-key-value-pairs-into-a-matrix"]], "Custom Notation Example": [[126, "custom-notation-example"]], "The Cutting Process": [[126, "the-cutting-process"]], "Applying the Identity Function": [[126, "applying-the-identity-function"]], "Parsing Each Key-Value Pair": [[126, "parsing-each-key-value-pair"]], "Removing Code Duplication": [[126, "removing-code-duplication"]], "Using the Stencil Operator": [[126, "using-the-stencil-operator"]], "Finding a Reduced Fraction for a Given Number": [[127, "finding-a-reduced-fraction-for-a-given-number"]], "Step-by-Step Solution": [[127, "step-by-step-solution"]], "Understanding the Fork Operation": [[127, "understanding-the-fork-operation"]], "What is the Lowest Common Multiple?": [[127, "what-is-the-lowest-common-multiple"]], "Constructing the Fraction": [[127, "constructing-the-fraction"]], "Comparing Version Numbers": [[128, "comparing-version-numbers"]], "Step-by-Step Comparison": [[128, "step-by-step-comparison"]], "Using Mathematical Approaches": [[128, "using-mathematical-approaches"]], "Functional Analysis": [[128, "functional-analysis"]], "Alternative Evaluation": [[128, "alternative-evaluation"]], "Understanding the Methodology": [[128, "understanding-the-methodology"]], "APL Quest: Splitting Text on Spaces": [[129, "apl-quest-splitting-text-on-spaces"]], "Classic Ways to Split on Spaces": [[129, "classic-ways-to-split-on-spaces"]], "Automatically Inserting an Empty Segment": [[129, "automatically-inserting-an-empty-segment"]], "Merging Trailing Elements": [[129, "merging-trailing-elements"]], "Another Solution to the Problem": [[129, "another-solution-to-the-problem"]], "Handling Excess Segments": [[129, "handling-excess-segments"]], "Finding End Points of One Array in Another": [[130, "finding-end-points-of-one-array-in-another"]], "Visualizing the Problem": [[130, "visualizing-the-problem"]], "Two Methods to Find End Points": [[130, "two-methods-to-find-end-points"]], "Simplifying the Code": [[130, "simplifying-the-code"]], "An Alternative Method": [[130, "an-alternative-method"]], "Understanding Dice Mechanics in Risk": [[131, "understanding-dice-mechanics-in-risk"]], "Overview of the Mechanics": [[131, "overview-of-the-mechanics"]], "The Players": [[131, "the-players"]], "Example Dice Throws": [[131, "example-dice-throws"]], "Determining Losses": [[131, "determining-losses"]], "APL Calculation": [[131, "apl-calculation"]], "Dice Comparison Rules": [[131, "dice-comparison-rules"]], "APL Comparison Table": [[131, "apl-comparison-table"]], "Extracting the Diagonal": [[131, "extracting-the-diagonal"]], "Counting Losses": [[131, "counting-losses"]], "Summing the Losses": [[131, "summing-the-losses"]], "APL Quest 2023": [[132, "apl-quest-2023"]], "What is APL?": [[133, "what-is-apl"]], "About APL Quest": [[133, "about-apl-quest"]], "Structure of This Book": [[133, "structure-of-this-book"]], "Join the Quest!": [[133, "join-the-quest"]], "APL Quest {year}": [[134, "apl-quest-year"]], "Making the Grade": [[14, "making-the-grade"], [16, "making-the-grade"], [15, "making-the-grade"]], "Example Solutions": [[16, "example-solutions"], [15, "example-solutions"], [10, "example-solutions"], [11, "example-solutions"], [6, "example-solutions"], [7, "example-solutions"]], "Advanced Solutions": [[16, "advanced-solutions"], [15, "advanced-solutions"], [10, "advanced-solutions"], [6, "advanced-solutions"]], "Performance:": [[16, "performance"], [15, "performance"], [6, "performance"]], "Comment:": [[16, "comment"], [15, "comment"], [6, "comment"]], "What\u2019s in a Word": [[10, "what-s-in-a-word"]], "Optimizations": [[10, "optimizations"]], "Performance": [[10, "performance"]], "Glyphs Used:": [[10, "glyphs-used"], [11, "glyphs-used"]], "Concepts Used:": [[10, "concepts-used"], [11, "concepts-used"]], "Outer Product in APL: A Comprehensive Overview": [[135, "outer-product-in-apl-a-comprehensive-overview"]], "1. Function Application": [[135, "function-application"]], "2. Order of Operations": [[135, "order-of-operations"]], "3. Kinds of Arguments": [[135, "kinds-of-arguments"]], "4. Lists": [[135, "lists"]], "5. Functions as Arguments": [[135, "functions-as-arguments"]], "6. Operator Valence": [[135, "operator-valence"]], "7. Parsing Precedence": [[135, "parsing-precedence"]], "8. Multiplication Table with Outer Product": [[135, "multiplication-table-with-outer-product"]], "9. Character Equality": [[135, "character-equality"]], "10. Pascal\u2019s Triangle": [[135, "pascal-s-triangle"]], "11. Exchanging Arguments": [[135, "exchanging-arguments"]], "12. Commutativity": [[135, "commutativity"]], "13. Multiple Outer Products": [[135, "multiple-outer-products"]], "14. Associativity of Outer Product": [[135, "associativity-of-outer-product"]], "15. Array Programming and Shape": [[135, "array-programming-and-shape"]], "16. Nested Lists and Leading Axis Theory": [[135, "nested-lists-and-leading-axis-theory"]], "17. Empty Arrays": [[135, "empty-arrays"]], "18. Identity Elements for Outer Product": [[135, "identity-elements-for-outer-product"]], "19. Array Attributes and Everything is an Array": [[135, "array-attributes-and-everything-is-an-array"]], "20. Rank Operator": [[135, "rank-operator"]], "21. Reverse with Rank": [[135, "reverse-with-rank"]], "22. More Functions with Rank": [[135, "more-functions-with-rank"]], "23. Dyadic Functions with Rank": [[135, "dyadic-functions-with-rank"]], "24. Scalar Extension": [[135, "scalar-extension"]], "25. Functional Programming and Functors": [[135, "functional-programming-and-functors"]], "26. Typed Functions": [[135, "typed-functions"]], "27. Outer Product with Functors": [[135, "outer-product-with-functors"]], "28. Split Compose": [[135, "split-compose"]], "29. Using the Rank Operator": [[135, "using-the-rank-operator"]], "30. Combining Functional Programming with APL": [[135, "combining-functional-programming-with-apl"]], "Key Properties": [[135, "key-properties"]], "Commutativity": [[135, "id1"]], "Associativity": [[135, "associativity"]], "Applications": [[135, "applications"]], "Multiplication Tables": [[135, "multiplication-tables"]], "Character Equality": [[135, "id2"]], "Combination Generation": [[135, "combination-generation"]], "Pascal\u2019s Triangle and Sierpinski\u2019s Triangle": [[135, "pascal-s-triangle-and-sierpinski-s-triangle"]], "Multiple Outer Products": [[135, "id3"]], "Relationship to Functional Programming": [[135, "relationship-to-functional-programming"]], "Identity Element": [[135, "identity-element"]], "Whats in a Word": [[19, "whats-in-a-word"], [18, "whats-in-a-word"]], "What\u2019s in a Word 2013-3": [[11, "what-s-in-a-word-2013-3"]], "Solution F: Splitting on Sequences of Spaces": [[11, "solution-f-splitting-on-sequences-of-spaces"]], "Solution G: Using Regular Expressions": [[11, "solution-g-using-regular-expressions"]], "Solution H: VFI": [[11, "solution-h-vfi"]], "Using Boolean Masks": [[11, "using-boolean-masks"]], "Transcript:": [[11, "transcript"]], "Making the Grade 2013-2": [[6, "making-the-grade-2013-2"]], "Solution F": [[6, "solution-f"], [7, "solution-f"]], "Solution J": [[6, "solution-j"], [7, "solution-j"]], "Solution K": [[6, "solution-k"]], "Seems a Bit Odd To Me 2013-1": [[7, "seems-a-bit-odd-to-me-2013-1"]], "Solution G": [[7, "solution-g"]], "Solution H": [[7, "solution-h"]], "Solution I": [[7, "solution-i"]], "APL Quest: Problem Six Overview": [[38, "apl-quest-problem-six-overview"]], "Coordinate Representation": [[38, "coordinate-representation"]], "Visualization": [[38, "visualization"]], "Checking Overlaps": [[38, "checking-overlaps"]], "Cases of Containment": [[38, "cases-of-containment"]], "Coding Implementation": [[38, "coding-implementation"]], "Building The Function": [[38, "building-the-function"]], "Optimization and Performance": [[38, "optimization-and-performance"]]}, "indexentries": {}})