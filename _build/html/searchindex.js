Search.setIndex({"docnames": ["apl-quest/2013/Float-Your-Boat-APLQuest-2013-7", "apl-quest/2013/Go-Forth-And-Multiply-APLQuest-2013-8", "apl-quest/2013/Home-On-The-Range-APLQuest-2013-6", "apl-quest/2013/Identity-Crisis-APLQuest-2013-5", "apl-quest/2013/It-Isa-Moving-Experience-APLQuest-2013-9", "apl-quest/2013/Keeping-Things-In-Balance-APLQuest-2013-4", "apl-quest/2013/Making-The-Grade-APLQuest-2013-2", "apl-quest/2013/Seemsa-Bit-Odd-To-Me-APLQuest-2013-1", "apl-quest/2013/Solution-Salvation-APLQuest-2013-10", "apl-quest/2013/What-Is-Ina-Word-APLQuest-2013-3", "apl-quest/2013/index", "apl-quest/2013/old/1", "apl-quest/2013/old/2", "apl-quest/2013/old/3", "apl-quest/2013/old/4", "apl-quest/2013/old/5", "apl-quest/2013/old/6", "apl-quest/2013/old/7", "apl-quest/2013/old/8", "apl-quest/2014/Go-The-Distance-APLQuest-2014-8", "apl-quest/2014/Going-Ballistic-APLQuest-2014-9", "apl-quest/2014/How-Tweet-It-Is-APLQuest-2014-2", "apl-quest/2014/It-Is-All-Right-APLQuest-2014-1", "apl-quest/2014/Mirror-Mirror-APLQuest-2014-5", "apl-quest/2014/Revolutionary-Thinking-APLQuest-2014-7", "apl-quest/2014/Sales-Are-Up-APLQuest-2014-10", "apl-quest/2014/Space-The-Final-Frontier-APLQuest-2014-4", "apl-quest/2014/Tell-a-Fib-APLQuest-2014-3", "apl-quest/2014/index", "apl-quest/2015/Blazing-A-Trail-APLQuest-2015-10", "apl-quest/2015/Farey-Tales-APLQuest-2015-3", "apl-quest/2015/Hes-So-Mean-He-Has-No-Standard-Deviation-APLQuest-2015-5", "apl-quest/2015/Hey-Thisis-My-Space-APLQuest-2015-6-EXTENDED", "apl-quest/2015/Id-Like-Mine-Scrambled-Please-APLQuest-2015-9", "apl-quest/2015/Justin-Upper-Case-APLQuest-2015-7", "apl-quest/2015/Longest-Streak-APLQuest-2015-2", "apl-quest/2015/Nag-A-Ram-APLQuest-2015-1", "apl-quest/2015/Progessive-Dyadic-Iota-APLQuest-2015-4", "apl-quest/2015/index", "apl-quest/2016/3-sand-5-s-APLQuest-2016-7", "apl-quest/2016/Delimited-Text-APLQuest-2016-9", "apl-quest/2016/Order-Total-APLQuest-2016-10", "apl-quest/2016/Separating-Outthe-Negative-APLQuest-2016-8", "apl-quest/2016/Shorter-Onestothe-Front-APLQuest-2016-6", "apl-quest/2016/Statistics-Mean-APLQuest-2016-1", "apl-quest/2016/Statistics-Median-APLQuest-2016-2", "apl-quest/2016/Statistics-Mode-APLQuest-2016-3", "apl-quest/2016/Youre-Unique-Just-Like-Everyone-Else-APLQuest-2016-5", "apl-quest/2016/index", "apl-quest/2017/Be-the-First-1-APLQuest-2017-8", "apl-quest/2017/Counting-DNANucleotides-APLQuest-2017-7", "apl-quest/2017/DNA-APLQuest-2017-5", "apl-quest/2017/Double-Trouble-APLQuest-2017-9", "apl-quest/2017/Good-Evening-APLQuest-2017-2", "apl-quest/2017/Miss-Quoted-APLQuest-2017-3", "apl-quest/2017/Slices-of-Pies-APLQuest-2017-4", "apl-quest/2017/Squaring-Off-APLQuest-2017-10", "apl-quest/2017/What-an-Odd-Bunch-APLQuest-2017-1", "apl-quest/2017/index", "apl-quest/2017/k-mers-APLQuest-2017-6", "apl-quest/2018/Anagrammatically-Correct-APLQuest-2018-10", "apl-quest/2018/Earlier-Later-or-the-Same-APLQuest-2018-9", "apl-quest/2018/Makinga-Good-Argument-APLQuest-2018-8", "apl-quest/2018/Number-Splitting-APLQuest-2018-2", "apl-quest/2018/Oh-Say-Can-You-See-APLQuest-2018-1", "apl-quest/2018/Rolling-Along-APLQuest-2018-3", "apl-quest/2018/Unconditionally-Shifty-APLQuest-2018-7", "apl-quest/2018/Whats-Your-Angle-APLQuest-2018-6", "apl-quest/2018/Whats-Your-Sign-APLQuest-2018-4", "apl-quest/2018/Whats-Your-Sign-Revisited-APLQuest-2018-5", "apl-quest/2018/index", "apl-quest/2019/Area-Code-Gauss-APLQuest-2019-9", "apl-quest/2019/Chunky-Monkey-APLQuest-2019-1", "apl-quest/2019/Doubling-Up-APLQuest-2019-5", "apl-quest/2019/Goingthe-Distance-APLQuest-2019-8", "apl-quest/2019/Grade-Distribution-APLQuest-2019-3", "apl-quest/2019/In-the-Center-of-it-All-APLQuest-2019-7", "apl-quest/2019/Knight-Moves-APLQuest-2019-4", "apl-quest/2019/Makingthe-Grade-APLQuest-2019-2", "apl-quest/2019/Odds-Evens-APLQuest-2019-10", "apl-quest/2019/Telephone-Names-APLQuest-2019-6", "apl-quest/2019/index", "apl-quest/2020/Character-Building-APLQuest-2020-2", "apl-quest/2020/Excel-lent-Columns-APLQuest-2020-3", "apl-quest/2020/Lets-Split-APLQuest-2020-1", "apl-quest/2020/Movetothe-Front-APLQuest-2020-6", "apl-quest/2020/Riseand-Fall-APLQuest-2020-9", "apl-quest/2020/See-Youina-Bit-APLQuest-2020-7", "apl-quest/2020/Stacking-It-Up-APLQuest-2020-10", "apl-quest/2020/Steppinginthe-Proper-Direction-APLQuest-2020-5", "apl-quest/2020/Takea-Leap-APLQuest-2020-4", "apl-quest/2020/Zigzag-Numbers-APLQuest-2020-8", "apl-quest/2020/index", "apl-quest/2021/Are-You-a--Bacteria-APLQuest-2021-1", "apl-quest/2021/Can-You-Feelthe-Magic-APLQuest-2021-7", "apl-quest/2021/Fischer-Random-Chess-APLQuest-2021-6", "apl-quest/2021/Index-Of-Modified-APLQuest-2021-2", "apl-quest/2021/Inthe-Long-Run-APLQuest-2021-9", "apl-quest/2021/Multiplicity-APLQuest-2021-3", "apl-quest/2021/Onthe-Right-Side-APLQuest-2021-10", "apl-quest/2021/Rect-ify-APLQuest-2021-5", "apl-quest/2021/Square-Peg-Round-Hole-APLQuest-2021-4", "apl-quest/2021/Timeto-Makea-Difference-APLQuest-2021-8", "apl-quest/2021/index", "apl-quest/2022/An-Average-Windowora-Windowed-Average-APLQuest-2022-9", "apl-quest/2022/Attackofthe-Mutations-APLQuest-2022-2", "apl-quest/2022/Counting-DNA-Nucleotides-APLQuest-2022-1", "apl-quest/2022/Inthe-Long-One-APLQuest-2022-4", "apl-quest/2022/Just-Golfing-Around-APLQuest-2022-7", "apl-quest/2022/Lets-Split-APLQuest-2022-8", "apl-quest/2022/Pyramid-Scheme-APLQuest-2022-6", "apl-quest/2022/Separation-Anxiety-APLQuest-2022-10", "apl-quest/2022/Stairwayto-Heaven-APLQuest-2022-5", "apl-quest/2022/Uniquely-Qualified-APLQuest-2022-3", "apl-quest/2022/index", "apl-quest/2023/Caesar-Salad-APLQuest-2023-3", "apl-quest/2023/Critical-Thinking-APLQuest-2023-8", "apl-quest/2023/EXTENDEDFlipping-Pairs-APLQuest-2023-9", "apl-quest/2023/Elimination-Sort-APLQuest-2023-1", "apl-quest/2023/Flipping-Pairs-APLQuest-2023-9", "apl-quest/2023/Key-Value-Pairs-APLQuest-2023-6", "apl-quest/2023/Lets-Be-Rational-APLQuest-2023-7", "apl-quest/2023/Like-a-Version-APLQuest-2023-4", "apl-quest/2023/Partition-witha-Twist-APLQuest-2023-10", "apl-quest/2023/Put-It-In-Reverse-APLQuest-2023-2", "apl-quest/2023/Risky-Business-APLQuest-2023-5", "apl-quest/2023/index", "intro", "master"], "filenames": ["apl-quest/2013/Float-Your-Boat-APLQuest-2013-7.md", "apl-quest/2013/Go-Forth-And-Multiply-APLQuest-2013-8.md", "apl-quest/2013/Home-On-The-Range-APLQuest-2013-6.md", "apl-quest/2013/Identity-Crisis-APLQuest-2013-5.md", "apl-quest/2013/It-Isa-Moving-Experience-APLQuest-2013-9.md", "apl-quest/2013/Keeping-Things-In-Balance-APLQuest-2013-4.md", "apl-quest/2013/Making-The-Grade-APLQuest-2013-2.md", "apl-quest/2013/Seemsa-Bit-Odd-To-Me-APLQuest-2013-1.md", "apl-quest/2013/Solution-Salvation-APLQuest-2013-10.md", "apl-quest/2013/What-Is-Ina-Word-APLQuest-2013-3.md", "apl-quest/2013/index.md", "apl-quest/2013/old/1.md", "apl-quest/2013/old/2.md", "apl-quest/2013/old/3.md", "apl-quest/2013/old/4.md", "apl-quest/2013/old/5.md", "apl-quest/2013/old/6.md", "apl-quest/2013/old/7.md", "apl-quest/2013/old/8.md", "apl-quest/2014/Go-The-Distance-APLQuest-2014-8.md", "apl-quest/2014/Going-Ballistic-APLQuest-2014-9.md", "apl-quest/2014/How-Tweet-It-Is-APLQuest-2014-2.md", "apl-quest/2014/It-Is-All-Right-APLQuest-2014-1.md", "apl-quest/2014/Mirror-Mirror-APLQuest-2014-5.md", "apl-quest/2014/Revolutionary-Thinking-APLQuest-2014-7.md", "apl-quest/2014/Sales-Are-Up-APLQuest-2014-10.md", "apl-quest/2014/Space-The-Final-Frontier-APLQuest-2014-4.md", "apl-quest/2014/Tell-a-Fib-APLQuest-2014-3.md", "apl-quest/2014/index.md", "apl-quest/2015/Blazing-A-Trail-APLQuest-2015-10.md", "apl-quest/2015/Farey-Tales-APLQuest-2015-3.md", "apl-quest/2015/Hes-So-Mean-He-Has-No-Standard-Deviation-APLQuest-2015-5.md", "apl-quest/2015/Hey-Thisis-My-Space-APLQuest-2015-6-EXTENDED.md", "apl-quest/2015/Id-Like-Mine-Scrambled-Please-APLQuest-2015-9.md", "apl-quest/2015/Justin-Upper-Case-APLQuest-2015-7.md", "apl-quest/2015/Longest-Streak-APLQuest-2015-2.md", "apl-quest/2015/Nag-A-Ram-APLQuest-2015-1.md", "apl-quest/2015/Progessive-Dyadic-Iota-APLQuest-2015-4.md", "apl-quest/2015/index.md", "apl-quest/2016/3-sand-5-s-APLQuest-2016-7.md", "apl-quest/2016/Delimited-Text-APLQuest-2016-9.md", "apl-quest/2016/Order-Total-APLQuest-2016-10.md", "apl-quest/2016/Separating-Outthe-Negative-APLQuest-2016-8.md", "apl-quest/2016/Shorter-Onestothe-Front-APLQuest-2016-6.md", "apl-quest/2016/Statistics-Mean-APLQuest-2016-1.md", "apl-quest/2016/Statistics-Median-APLQuest-2016-2.md", "apl-quest/2016/Statistics-Mode-APLQuest-2016-3.md", "apl-quest/2016/Youre-Unique-Just-Like-Everyone-Else-APLQuest-2016-5.md", "apl-quest/2016/index.md", "apl-quest/2017/Be-the-First-1-APLQuest-2017-8.md", "apl-quest/2017/Counting-DNANucleotides-APLQuest-2017-7.md", "apl-quest/2017/DNA-APLQuest-2017-5.md", "apl-quest/2017/Double-Trouble-APLQuest-2017-9.md", "apl-quest/2017/Good-Evening-APLQuest-2017-2.md", "apl-quest/2017/Miss-Quoted-APLQuest-2017-3.md", "apl-quest/2017/Slices-of-Pies-APLQuest-2017-4.md", "apl-quest/2017/Squaring-Off-APLQuest-2017-10.md", "apl-quest/2017/What-an-Odd-Bunch-APLQuest-2017-1.md", "apl-quest/2017/index.md", "apl-quest/2017/k-mers-APLQuest-2017-6.md", "apl-quest/2018/Anagrammatically-Correct-APLQuest-2018-10.md", "apl-quest/2018/Earlier-Later-or-the-Same-APLQuest-2018-9.md", "apl-quest/2018/Makinga-Good-Argument-APLQuest-2018-8.md", "apl-quest/2018/Number-Splitting-APLQuest-2018-2.md", "apl-quest/2018/Oh-Say-Can-You-See-APLQuest-2018-1.md", "apl-quest/2018/Rolling-Along-APLQuest-2018-3.md", "apl-quest/2018/Unconditionally-Shifty-APLQuest-2018-7.md", "apl-quest/2018/Whats-Your-Angle-APLQuest-2018-6.md", "apl-quest/2018/Whats-Your-Sign-APLQuest-2018-4.md", "apl-quest/2018/Whats-Your-Sign-Revisited-APLQuest-2018-5.md", "apl-quest/2018/index.md", "apl-quest/2019/Area-Code-Gauss-APLQuest-2019-9.md", "apl-quest/2019/Chunky-Monkey-APLQuest-2019-1.md", "apl-quest/2019/Doubling-Up-APLQuest-2019-5.md", "apl-quest/2019/Goingthe-Distance-APLQuest-2019-8.md", "apl-quest/2019/Grade-Distribution-APLQuest-2019-3.md", "apl-quest/2019/In-the-Center-of-it-All-APLQuest-2019-7.md", "apl-quest/2019/Knight-Moves-APLQuest-2019-4.md", "apl-quest/2019/Makingthe-Grade-APLQuest-2019-2.md", "apl-quest/2019/Odds-Evens-APLQuest-2019-10.md", "apl-quest/2019/Telephone-Names-APLQuest-2019-6.md", "apl-quest/2019/index.md", "apl-quest/2020/Character-Building-APLQuest-2020-2.md", "apl-quest/2020/Excel-lent-Columns-APLQuest-2020-3.md", "apl-quest/2020/Lets-Split-APLQuest-2020-1.md", "apl-quest/2020/Movetothe-Front-APLQuest-2020-6.md", "apl-quest/2020/Riseand-Fall-APLQuest-2020-9.md", "apl-quest/2020/See-Youina-Bit-APLQuest-2020-7.md", "apl-quest/2020/Stacking-It-Up-APLQuest-2020-10.md", "apl-quest/2020/Steppinginthe-Proper-Direction-APLQuest-2020-5.md", "apl-quest/2020/Takea-Leap-APLQuest-2020-4.md", "apl-quest/2020/Zigzag-Numbers-APLQuest-2020-8.md", "apl-quest/2020/index.md", "apl-quest/2021/Are-You-a--Bacteria-APLQuest-2021-1.md", "apl-quest/2021/Can-You-Feelthe-Magic-APLQuest-2021-7.md", "apl-quest/2021/Fischer-Random-Chess-APLQuest-2021-6.md", "apl-quest/2021/Index-Of-Modified-APLQuest-2021-2.md", "apl-quest/2021/Inthe-Long-Run-APLQuest-2021-9.md", "apl-quest/2021/Multiplicity-APLQuest-2021-3.md", "apl-quest/2021/Onthe-Right-Side-APLQuest-2021-10.md", "apl-quest/2021/Rect-ify-APLQuest-2021-5.md", "apl-quest/2021/Square-Peg-Round-Hole-APLQuest-2021-4.md", "apl-quest/2021/Timeto-Makea-Difference-APLQuest-2021-8.md", "apl-quest/2021/index.md", "apl-quest/2022/An-Average-Windowora-Windowed-Average-APLQuest-2022-9.md", "apl-quest/2022/Attackofthe-Mutations-APLQuest-2022-2.md", "apl-quest/2022/Counting-DNA-Nucleotides-APLQuest-2022-1.md", "apl-quest/2022/Inthe-Long-One-APLQuest-2022-4.md", "apl-quest/2022/Just-Golfing-Around-APLQuest-2022-7.md", "apl-quest/2022/Lets-Split-APLQuest-2022-8.md", "apl-quest/2022/Pyramid-Scheme-APLQuest-2022-6.md", "apl-quest/2022/Separation-Anxiety-APLQuest-2022-10.md", "apl-quest/2022/Stairwayto-Heaven-APLQuest-2022-5.md", "apl-quest/2022/Uniquely-Qualified-APLQuest-2022-3.md", "apl-quest/2022/index.md", "apl-quest/2023/Caesar-Salad-APLQuest-2023-3.md", "apl-quest/2023/Critical-Thinking-APLQuest-2023-8.md", "apl-quest/2023/EXTENDEDFlipping-Pairs-APLQuest-2023-9.md", "apl-quest/2023/Elimination-Sort-APLQuest-2023-1.md", "apl-quest/2023/Flipping-Pairs-APLQuest-2023-9.md", "apl-quest/2023/Key-Value-Pairs-APLQuest-2023-6.md", "apl-quest/2023/Lets-Be-Rational-APLQuest-2023-7.md", "apl-quest/2023/Like-a-Version-APLQuest-2023-4.md", "apl-quest/2023/Partition-witha-Twist-APLQuest-2023-10.md", "apl-quest/2023/Put-It-In-Reverse-APLQuest-2023-2.md", "apl-quest/2023/Risky-Business-APLQuest-2023-5.md", "apl-quest/2023/index.md", "intro.md", "master.md"], "titles": ["Float your Boat 2013-7", "Go forth and Multiply 2013-8", "Home on the range 2013-6", "Identity Crisis 2013-5", "It\u2019s a moving experience 2013-9", "Keeping things in balance 2013-4", "Making the Grade 2013-2", "Seems a Bit Odd To Me 2013-1", "Solution Salvation 2013-10", "What is in a Word? 2013-3", "APL Quest 2013", "Seems a Bit Odd To Me", "Making the Grade", "Whats in a Word", " Keeping Things In Balance", "Identity Crisis", "Home on the range", "Float your Boat", "&lt;no title&gt;", "Welcome to the APL Quest", "APL Quest", "APL Quest: Problem Solving and Performance of Text Processing Techniques", "Welcome to the APL Quest", "Welcome to the APL Quest", "Welcome to the APL Quest", "APL Quest: Analyzing the Largest Percentage Increase", "APL Quest: Normalizing Text Spaces", "Computing the Fibonacci Sequence", "APL Quest 2014", "API Quest: Generating a Centered Pascal\u2019s Triangle", "Welcome to the APL Quest", "APL Quest: Standard Deviation Calculation", "APL Quest: Problem Six Overview", "APL Quest: Swapping Interior Letters", "APL Quest: Problem 7 from the 2015 APL Problem Solver Competition", "APL Quest", "APL Quest: Anagrams Problem", "APL Quest Cap Wiki: Progressive Dyadic Iota", "APL Quest 2015", "Welcome to the APL Quest", "APL Quest: Delimiter Splitting Challenge", "Welcome to the APL Quest", "APL Quest: 8th Quest Overview", "Welcome to the APL Quest", "Welcome to the APL Quest", "Welcome to the APL Quest", "Welcome to APL Quest", "Welcome to the Appeal Quest", "APL Quest 2016", "Understanding Boolean Vector Processing in APL", "Counting Letters in a String: A Guide", "Checking Character Vectors for Valid Letters", "Finding Locations of Identical Characters in Text", "Ensure Odd Numbers Become Even Using APL", "Removing Text Between Double Quotes Using Regular Expressions", "Computing Areas of Circle Sectors Using APL", "Fitting Elements into a Square Array", "Welcome to the APL Quest", "APL Quest 2017", "Chopping Text into Sequences of a Given Length", "Comparing Two Character Vectors: An Anagram Checker", "Comparing Dates in APL: A Guide", "Validating Dyadic Transpose Arguments", "Splitting Numbers into Integer and Fractional Parts", "Counting Visible Buildings", "Simulating Dice Rolls and Analyzing Outcomes", "Shifting Boolean Data: An Introduction", "A Simple Test for XML Validity", "Converting Gregorian Year Numbers to Chinese Zodiac Animals", "Computing Zodiac Signs from Dates", "APL Quest 2018", "Calculating the Area of a Polygon Using the Shoelace Formula", "Chunking a List into Segments", "Checking for Consecutive Identical Letters in Words", "Computing the Distance Around a Path Defined by Points", "Compiling Simple Statistics on Grades", "Centering Words in a Matrix", "Understanding the Movement of a Chess Knight", "Converting Scores into Letter Grades", "Splitting a List of Words by Length", "Translating Telephone Numbers from Digits and Letters to Plain Numbers", "APL Quest 2019", "Understanding Byte Sequences and UTF-8 Encoding", "Understanding Column Label Conversion in Spreadsheet Software", "Understanding Vector Partitioning in APL", "Moving Elements in a Numeric Vector to the Front in APL", "Analyzing Non-Decreasing and Non-Increasing Patterns in a List of Numbers", "Checking Bit States in APL", "Emulating APL Array Printing Behavior", "Generating Inclusive Integer Ranges in APL", "Understanding Leap Years: A Guide", "Analyzing Alternating Digit Growth in Numbers", "APL Quest 2020", "Calculating Percentage of Characters in a DNA String", "Checking for Magic Squares", "Chess Setup Challenge", "Creating a Cover for the Dyadic Iota in APL", "Finding the Longest Consecutive Sequence in a List of Numbers", "Grouping Integers by Divisibility", "Justified Text Transformation in APL", "Finding Rectangle Dimensions with Given Area", "Finding the Difference in Area Between an Inscribed Square and Its Circumscribing Circle", "Calculating Absolute Time Difference in Minutes", "APL Quest 2021", "Calculating the Window Average of a List of Numbers in APL", "Comparing DNA Strings: A Guide", "Counting DNA Letters in a Character Vector", "Finding the Longest Run of Ones in a Boolean Vector", "Analyzing Golf Scores: Rank Calculation with Average Position for Tied Scores", "Splitting Text in APL", "Constructing Concentric Rings of Numbers", "Inserting Separators in Large Integers", "Building a Staircase in APL", "Finding the Symmetric Difference Between Two Sets", "APL Quest 2022", "Implementing a Simple Caesar Cipher for Uppercase Characters and Spaces", "Computing the Next Double Critical Day", "Interchanging Horizontally Adjacent Elements in a Multi-Dimensional Array", "Removing Non-Decreasing Elements from a List", "Interchanging Adjacent Elements in a Multi-Dimensional Array", "Parsing Key-Value Pairs into a Matrix", "Finding a Reduced Fraction for a Given Number", "Comparing Version Numbers", "APL Quest: Splitting Text on Spaces", "Finding End Points of One Array in Another", "Understanding Dice Mechanics in Risk", "APL Quest 2023", "Welcome to APL Quest", "APL Quest {year}"], "terms": {"problem": [0, 1, 2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 30, 37, 39, 40, 42, 43, 44, 47, 49, 54, 57, 66, 67, 69, 72, 76, 79, 84, 85, 100, 106, 107, 109, 117, 120, 127], "write": [0, 1, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 24, 27, 31, 34, 40, 41, 44, 45, 46, 113], "dfn": [0, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 27, 29, 33, 35, 36, 64, 74, 97, 111], "which": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 88, 90, 91, 93, 96, 98, 99, 100, 102, 105, 106, 107, 108, 109, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125], "select": [0, 3, 4, 8, 15, 16, 17, 18, 25, 30, 59, 68, 84, 85, 98], "non": [0, 2, 9, 16, 17, 21, 25, 26, 30, 35, 36, 42, 62, 63, 90, 94, 98, 100, 122, 123], "integ": [0, 6, 7, 11, 17, 18, 30, 35, 39, 56, 62, 82, 84, 87, 100, 110, 116, 121, 125], "number": [0, 1, 2, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 29, 30, 35, 39, 41, 42, 43, 44, 46, 47, 49, 50, 56, 57, 59, 61, 62, 64, 65, 66, 69, 70, 72, 75, 76, 78, 79, 82, 83, 84, 85, 87, 89, 92, 93, 94, 98, 102, 105, 106, 111, 112, 115, 116, 118, 123, 124, 125], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 123, 124, 126, 127, 128], "numer": [0, 2, 7, 11, 13, 14, 15, 16, 17, 27, 29, 30, 35, 44, 45, 49, 68, 69, 78, 80, 83, 101, 107, 118, 121], "vector": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 31, 35, 36, 39, 40, 41, 43, 44, 45, 59, 61, 65, 66, 69, 71, 74, 75, 76, 77, 87, 88, 89, 93, 96, 98, 99, 104, 105, 109, 111, 113, 115, 117, 118, 119, 120, 123, 125], "video": [0, 1, 2, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 37, 89, 98, 99, 111, 123, 125], "http": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18], "youtu": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18], "w5lvimfvi2m": [0, 17], "code": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 27, 29, 31, 35, 40, 41, 42, 59, 62, 64, 69, 71, 75, 77, 81, 82, 89, 94, 95, 98, 100, 107, 109, 127], "abrudz": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 106], "apl_quest": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18], "In": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126], "todai": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 57, 59, 60, 66, 113], "": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128], "quest": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 27, 60, 62, 113], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128], "task": [0, 1, 2, 3, 4, 6, 9, 13, 15, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 37, 39, 41, 43, 54, 61, 66, 68, 72, 75, 76, 84, 98, 105, 106, 111, 117], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128], "i": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128], "seven": [0, 1, 17, 18, 72], "apl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 27, 29, 47, 50, 51, 52, 54, 59, 60, 62, 63, 65, 68, 69, 71, 72, 74, 75, 76, 77, 79, 82, 83, 86, 90, 93, 94, 95, 97, 100, 101, 102, 105, 107, 110, 113, 115, 119, 121, 122, 124], "solv": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 57, 58, 70, 76, 79, 81, 84, 85, 92, 100, 103, 106, 112, 114, 120, 126, 127, 128], "competit": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 57, 76, 89], "first": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 30, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 71, 72, 74, 75, 78, 79, 80, 84, 85, 87, 88, 89, 93, 94, 95, 96, 97, 99, 100, 102, 104, 106, 108, 109, 110, 111, 115, 116, 117, 118, 119, 122, 123, 125], "let": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 99, 100, 102, 104, 107, 109, 110, 111, 112, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126], "creat": [0, 1, 2, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 21, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 44, 46, 47, 52, 55, 57, 59, 60, 63, 65, 67, 68, 72, 74, 75, 79, 82, 88, 89, 90, 95, 97, 99, 100, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 119, 123, 125, 127], "some": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 31, 34, 35, 36, 37, 39, 42, 43, 44, 45, 49, 50, 51, 53, 55, 59, 64, 67, 71, 72, 73, 74, 75, 79, 82, 87, 88, 95, 99, 107, 111, 116], "ourselv": [0, 14, 17, 18, 59], "what": [0, 1, 7, 10, 11, 12, 14, 15, 16, 17, 18, 31, 37, 41, 44, 49, 51, 55, 57, 58, 59, 63, 66, 70, 83, 86, 120, 123], "defin": [0, 2, 3, 5, 6, 8, 9, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 29, 30, 32, 33, 34, 36, 37, 40, 42, 43, 44, 45, 46, 50, 54, 55, 56, 57, 59, 61, 64, 66, 67, 68, 71, 75, 76, 78, 82, 84, 91, 94, 96, 97, 99, 101, 104, 105, 106, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121], "isn": [0, 14, 15, 16, 17, 18, 19, 31, 34, 83, 94, 96], "t": [0, 1, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 31, 34, 35, 36, 38, 39, 40, 43, 44, 48, 50, 51, 52, 53, 54, 58, 59, 60, 63, 64, 67, 70, 72, 77, 78, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 94, 96, 99, 103, 104, 106, 108, 110, 111, 114, 118, 123, 126, 127, 128], "an": [0, 1, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 122, 125, 127], "There": [0, 1, 2, 5, 7, 9, 11, 13, 15, 16, 17, 18, 32, 34, 35, 41, 44, 45, 47, 49, 61, 68, 72, 77, 89, 96, 109, 124], "variou": [0, 2, 3, 4, 5, 6, 8, 15, 17, 18, 20, 21, 23, 26, 27, 31, 32, 36, 37, 46, 50, 54, 59, 62, 65, 68, 79, 82, 84, 86, 88, 89, 91, 93, 99, 102, 104, 107, 108, 112, 117, 120], "wai": [0, 1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 29, 33, 36, 38, 40, 42, 44, 45, 47, 48, 55, 56, 57, 58, 60, 61, 65, 69, 70, 72, 73, 75, 77, 78, 79, 81, 85, 88, 89, 92, 93, 94, 96, 97, 98, 103, 107, 108, 109, 110, 113, 114, 117, 119, 120, 126, 127, 128], "veri": [0, 3, 13, 14, 15, 16, 17, 19, 39, 44, 47, 49, 57, 82, 107, 123], "simpl": [0, 1, 3, 5, 8, 14, 15, 16, 17, 18, 19, 21, 25, 31, 33, 34, 36, 39, 41, 44, 47, 49, 50, 51, 54, 56, 57, 63, 64, 66, 74, 80, 84, 86, 88, 90, 99, 104, 109, 112, 117, 124, 127], "effect": [0, 3, 4, 7, 11, 18, 20, 21, 22, 25, 31, 33, 34, 37, 39, 40, 41, 44, 46, 49, 52, 53, 54, 56, 59, 60, 61, 62, 63, 64, 66, 68, 73, 74, 75, 77, 78, 80, 83, 85, 86, 87, 88, 89, 90, 91, 94, 96, 102, 107, 109, 110, 115, 117, 118, 124, 125], "method": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 46, 47, 50, 52, 54, 56, 61, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 85, 86, 88, 91, 93, 97, 98, 99, 100, 102, 104, 105, 106, 107, 110, 112, 113, 117, 119, 120, 122, 125], "compar": [0, 3, 5, 6, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 29, 30, 34, 35, 36, 37, 39, 47, 49, 50, 64, 67, 73, 75, 77, 85, 86, 90, 91, 98, 99, 106, 108, 111, 112, 117, 118, 123, 125], "happen": [0, 13, 14, 15, 17, 44, 49, 86], "ani": [0, 1, 2, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 28, 30, 35, 38, 40, 42, 44, 46, 48, 49, 52, 53, 54, 58, 68, 69, 70, 71, 72, 73, 77, 78, 80, 81, 83, 84, 86, 88, 90, 92, 99, 102, 103, 111, 114, 115, 116, 118, 120, 123, 126, 128], "remain": [0, 1, 5, 24, 30, 33, 39, 45, 61, 63, 66, 80, 84, 86, 94, 99, 105, 107, 109, 117, 119, 123], "unchang": [0, 33, 49, 53, 66, 99, 105, 107], "when": [0, 2, 4, 5, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 29, 31, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 59, 61, 63, 64, 65, 66, 68, 71, 72, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 100, 101, 104, 106, 107, 108, 109, 115, 116, 121, 123], "while": [0, 1, 2, 4, 5, 6, 8, 9, 12, 17, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 32, 33, 35, 36, 39, 42, 47, 49, 50, 51, 53, 54, 55, 56, 57, 61, 62, 64, 67, 68, 69, 71, 72, 73, 75, 77, 78, 82, 83, 85, 86, 88, 89, 91, 94, 95, 96, 97, 99, 104, 106, 107, 108, 109, 111, 112, 113, 117, 120, 123, 124, 125], "chang": [0, 5, 7, 13, 14, 15, 16, 17, 22, 33, 37, 41, 49, 59, 65, 66, 86, 88, 119, 123], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "find": [0, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 21, 24, 25, 26, 29, 31, 34, 36, 37, 41, 43, 44, 54, 55, 60, 65, 68, 75, 76, 78, 80, 82, 85, 93, 95, 96, 98, 102, 104, 105, 106, 108, 111, 115, 116, 117, 118, 119, 122, 125], "valu": [0, 2, 7, 9, 11, 13, 15, 16, 17, 18, 22, 23, 25, 27, 30, 35, 40, 42, 44, 45, 47, 49, 50, 56, 57, 62, 63, 66, 69, 71, 74, 76, 77, 82, 83, 85, 86, 87, 89, 91, 93, 97, 98, 101, 102, 105, 107, 108, 110, 112, 115, 116, 118, 119, 122, 125, 126], "our": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125], "floor": [0, 17, 18, 63, 75], "function": [0, 3, 4, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 29, 30, 33, 34, 40, 44, 56, 59, 62, 63, 66, 67, 71, 73, 75, 77, 83, 86, 87, 88, 89, 91, 93, 94, 95, 97, 99, 101, 104, 109, 111, 115, 116, 117, 118, 121, 123, 124, 125], "allow": [0, 1, 5, 7, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 26, 27, 31, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 61, 62, 64, 65, 66, 68, 69, 71, 74, 75, 76, 80, 82, 84, 86, 87, 88, 90, 94, 95, 96, 98, 105, 106, 108, 109, 111, 112, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125], "u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "filter": [0, 14, 15, 17, 18, 23, 26, 30, 39, 42, 47, 49, 54, 62, 118], "here": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 28, 29, 32, 34, 36, 37, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 119, 121, 122, 123, 124, 125, 126, 128], "how": [0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 28, 29, 30, 31, 37, 39, 40, 43, 44, 45, 47, 49, 50, 51, 53, 54, 56, 57, 59, 60, 61, 63, 64, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "implement": [0, 8, 14, 18, 24, 29, 33, 34, 36, 45, 53, 56, 64, 69, 71, 83, 89, 96, 111], "call": [0, 1, 5, 6, 9, 12, 13, 14, 16, 17, 18, 24, 31, 34, 36, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 60, 73, 78, 80, 90, 99, 105, 106, 109, 111, 123], "v": [0, 8, 16, 17, 20, 26, 36, 37, 42, 125], "3": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 48, 50, 56, 57, 58, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 91, 92, 94, 96, 97, 98, 100, 102, 103, 104, 105, 107, 109, 110, 112, 114, 116, 118, 121, 122, 123, 126], "1": [0, 1, 2, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "4": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 35, 38, 39, 41, 43, 44, 46, 53, 55, 56, 57, 58, 59, 61, 62, 65, 66, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 103, 104, 107, 109, 110, 111, 112, 114, 115, 118, 121, 122, 125, 126], "5": [0, 1, 2, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 24, 27, 28, 31, 32, 35, 37, 38, 39, 41, 43, 44, 45, 46, 48, 53, 56, 57, 58, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 77, 79, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 108, 110, 112, 114, 116, 118, 119, 121, 122, 125, 126], "92": [0, 17, 97], "6": [0, 1, 6, 8, 10, 12, 15, 16, 17, 19, 25, 31, 34, 35, 37, 38, 39, 43, 44, 46, 48, 53, 55, 57, 58, 64, 65, 66, 69, 70, 72, 75, 77, 80, 81, 85, 88, 89, 92, 94, 97, 100, 101, 103, 104, 110, 112, 114, 118, 121, 122, 123, 125, 126], "test": [0, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 28, 29, 31, 32, 34, 35, 37, 38, 44, 48, 50, 51, 52, 53, 54, 56, 57, 58, 61, 66, 70, 73, 74, 76, 78, 81, 84, 91, 92, 97, 98, 103, 105, 106, 107, 108, 114, 117, 123, 126, 127, 128], "against": [0, 14, 15, 17, 20, 36, 47, 50, 54, 62, 68, 96, 98, 99, 107, 112], "version": [0, 14, 15, 17, 18, 19, 20, 24, 31, 32, 36, 60, 94, 113, 115, 126], "same": [0, 1, 2, 3, 6, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 27, 29, 35, 36, 40, 43, 44, 46, 50, 52, 53, 56, 60, 61, 63, 64, 66, 67, 70, 72, 74, 78, 79, 80, 86, 89, 91, 94, 95, 97, 105, 108, 113, 115, 116, 118, 120, 121, 122], "int": [0, 17], "differ": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 32, 34, 35, 36, 38, 40, 41, 42, 44, 45, 47, 48, 53, 54, 58, 59, 60, 61, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 88, 89, 92, 93, 94, 96, 97, 99, 100, 103, 107, 108, 109, 111, 112, 114, 116, 117, 119, 120, 122, 124, 126, 128], "down": [0, 1, 13, 14, 15, 17, 18, 21, 22, 45, 47, 53, 63, 76, 77, 82, 83, 89, 94, 97, 104, 110, 116], "nearest": [0, 17, 56, 63], "real": [0, 11, 14, 15, 17, 18, 49, 72, 91], "Not": [0, 12, 13, 16, 17, 87, 90], "equal": [0, 3, 6, 7, 11, 12, 13, 14, 15, 17, 18, 22, 27, 30, 34, 35, 39, 42, 45, 46, 47, 50, 52, 54, 62, 73, 76, 82, 83, 85, 87, 91, 94, 96, 100, 101, 105, 123], "whether": [0, 3, 5, 7, 13, 14, 15, 16, 17, 18, 23, 30, 34, 35, 36, 45, 46, 54, 60, 61, 62, 67, 68, 72, 77, 79, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 109, 118, 122, 124, 127], "argument": [0, 1, 3, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 27, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 55, 56, 57, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 83, 84, 85, 86, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 109, 110, 111, 115, 116, 120, 121, 123, 124], "unequ": [0, 17, 85], "return": [0, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 26, 27, 32, 34, 42, 43, 44, 45, 46, 47, 49, 51, 54, 59, 61, 62, 63, 64, 69, 72, 75, 77, 79, 86, 87, 89, 91, 93, 96, 98, 106, 108, 109, 110, 116, 117, 118, 120, 122, 124], "boolean": [0, 6, 7, 11, 12, 13, 14, 15, 17, 18, 26, 30, 35, 40, 46, 64, 67, 76, 79, 85, 87, 93, 98, 109, 112, 120], "arrai": [0, 1, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 21, 28, 29, 33, 37, 38, 39, 42, 43, 45, 46, 48, 50, 58, 59, 62, 64, 65, 66, 70, 71, 75, 76, 78, 81, 84, 86, 92, 93, 94, 97, 99, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 120, 123, 126, 127, 128], "where": [0, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 50, 52, 54, 55, 57, 59, 61, 62, 66, 71, 76, 77, 82, 83, 84, 85, 86, 87, 91, 93, 94, 96, 97, 98, 101, 102, 106, 107, 108, 109, 110, 112, 115, 118, 119, 120, 122, 124, 125], "indic": [0, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 24, 29, 30, 32, 33, 34, 35, 37, 39, 40, 43, 44, 46, 47, 49, 50, 51, 52, 54, 57, 59, 61, 62, 64, 65, 66, 67, 69, 71, 72, 73, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 93, 95, 96, 97, 98, 100, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 122, 125], "compress": [0, 13, 14, 15, 17, 18, 21, 26], "right": [0, 1, 4, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 34, 35, 37, 40, 41, 42, 43, 44, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 71, 72, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 93, 94, 96, 98, 101, 103, 104, 105, 106, 107, 109, 111, 112, 113, 116, 120, 121, 122, 123, 124, 125], "left": [0, 1, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 28, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 67, 70, 71, 72, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 89, 92, 93, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 128], "commut": [0, 3, 13, 14, 15, 16, 17, 18, 22, 37, 39, 42, 72], "aka": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18], "swap": [0, 7, 8, 11, 13, 14, 15, 16, 17, 18, 39, 40, 42, 56, 72, 113, 117, 119], "put": [0, 1, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 23, 33, 43, 44, 57, 66, 126], "gener": [0, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 35, 36, 37, 39, 52, 54, 63, 64, 65, 67, 68, 69, 74, 75, 76, 77, 79, 83, 88, 90, 91, 94, 99, 106, 107, 109, 113, 117, 119, 123, 125], "step": [0, 1, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 27, 29, 33, 45, 47, 49, 51, 56, 63, 65, 68, 69, 71, 74, 77, 83, 84, 91, 94, 102, 104, 106, 111, 120, 124, 125], "2": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 48, 50, 52, 55, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 107, 110, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126], "b": [0, 1, 3, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 30, 32, 34, 35, 36, 41, 49, 60, 74, 75, 83, 95, 98, 107, 113], "The": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128], "rightmost": [0, 35, 39, 42, 51, 52, 57, 78, 99], "selfi": [0, 14, 15, 16, 17, 18, 107], "monad": [0, 12, 13, 14, 15, 17, 18, 110], "It": [0, 1, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 22, 25, 28, 29, 36, 41, 44, 46, 47, 54, 62, 64, 68, 69, 80, 82, 85, 90, 91, 92, 99, 105, 118, 126, 127], "make": [0, 1, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 24, 31, 33, 35, 37, 44, 50, 53, 57, 67, 68, 77, 93, 96, 101, 106, 107, 111, 115, 120, 122, 124, 127], "both": [0, 1, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 30, 32, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 50, 55, 56, 60, 61, 62, 63, 64, 68, 71, 74, 79, 80, 82, 85, 86, 87, 89, 91, 93, 94, 95, 97, 99, 101, 102, 104, 105, 107, 108, 112, 113, 115, 116, 118, 120, 121, 124, 125, 127], "side": [0, 1, 14, 15, 16, 17, 18, 22, 55, 56, 65, 66, 74, 76, 77, 78, 86, 87, 88, 89, 100, 101, 103, 104], "For": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 13, 14, 16, 18, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 54, 55, 59, 62, 63, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 88, 89, 91, 93, 94, 95, 97, 98, 99, 100, 102, 104, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125], "input": [0, 2, 9, 10, 13, 14, 15, 19, 20, 24, 26, 28, 33, 35, 37, 38, 40, 44, 45, 47, 48, 50, 52, 53, 54, 58, 59, 61, 64, 67, 68, 69, 70, 71, 74, 80, 81, 84, 86, 87, 89, 90, 91, 92, 101, 103, 104, 107, 108, 109, 112, 114, 116, 118, 120, 126, 127, 128], "equival": [0, 1, 4, 6, 12, 16, 17, 18, 19, 22, 41, 55, 83], "composit": [0, 17, 26, 31, 76], "appli": [0, 1, 2, 3, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 71, 73, 74, 75, 77, 78, 79, 80, 83, 84, 86, 87, 88, 90, 91, 94, 96, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 122, 123, 124], "Then": [0, 1, 7, 11, 12, 13, 14, 15, 16, 17, 18, 44, 97, 111], "result": [0, 1, 2, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 46, 47, 49, 51, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "origin": [0, 1, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 35, 37, 39, 43, 46, 47, 53, 54, 56, 62, 63, 66, 67, 68, 74, 78, 82, 85, 86, 91, 94, 96, 97, 99, 104, 106, 107, 108, 111, 118, 120, 123], "so": [0, 1, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 52, 55, 57, 58, 60, 63, 64, 68, 70, 71, 72, 81, 82, 83, 85, 91, 92, 93, 99, 100, 103, 110, 111, 114, 118, 121, 122, 126, 128], "doe": [0, 5, 7, 11, 12, 13, 14, 16, 17, 18, 24, 27, 29, 34, 36, 39, 42, 49, 50, 52, 55, 56, 64, 68, 73, 74, 75, 78, 83, 86, 94, 96, 107, 109], "deriv": [0, 3, 13, 14, 15, 17, 18, 22, 27, 33, 34, 39, 46, 47, 49, 50, 51, 54, 56, 57, 60, 61, 63, 66, 68, 71, 83, 84, 91, 101, 104, 105, 107, 113, 116, 122], "take": [0, 1, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 29, 33, 34, 35, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 54, 56, 59, 60, 63, 66, 67, 69, 71, 72, 74, 76, 79, 80, 82, 84, 86, 88, 91, 93, 94, 95, 96, 98, 99, 100, 102, 105, 106, 107, 109, 110, 115, 120, 121, 123], "singl": [0, 9, 13, 14, 15, 16, 18, 21, 22, 26, 27, 31, 37, 40, 41, 42, 49, 51, 60, 62, 65, 66, 68, 71, 72, 75, 76, 82, 88, 91, 94, 97, 99, 104, 105, 108, 109, 117, 120], "combin": [0, 5, 14, 15, 16, 17, 19, 21, 25, 26, 29, 39, 40, 41, 44, 46, 47, 50, 51, 62, 63, 65, 68, 76, 77, 80, 82, 84, 85, 87, 88, 93, 94, 95, 99, 100, 105, 106, 112, 120, 123], "mask": [0, 7, 11, 12, 13, 14, 15, 17, 21, 30, 35, 40, 42, 46, 52, 72, 76, 77, 79, 95, 107, 109, 111, 117, 119, 120, 123], "identifi": [0, 21, 24, 25, 26, 30, 33, 35, 45, 46, 47, 50, 52, 57, 68, 73, 76, 78, 82, 83, 85, 90, 95, 97, 105, 108, 112, 116, 118, 120, 122, 124], "outermost": 0, "ensur": [0, 2, 4, 7, 9, 11, 17, 19, 21, 22, 23, 25, 26, 27, 30, 31, 32, 41, 44, 45, 46, 50, 51, 52, 56, 59, 60, 62, 64, 66, 67, 68, 69, 71, 75, 76, 78, 79, 80, 86, 88, 89, 90, 91, 95, 96, 100, 102, 105, 106, 107, 108, 109, 110, 113, 118, 120, 122, 123], "creation": [0, 88], "structur": [0, 2, 4, 5, 7, 16, 21, 32, 36, 49, 52, 62, 69, 71, 73, 74, 75, 76, 80, 88, 96, 97, 98, 110, 111, 112, 117, 119, 120, 125], "condit": [0, 4, 5, 14, 16, 24, 27, 32, 35, 39, 45, 49, 64, 89, 90, 95, 107, 118], "one": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 35, 36, 40, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 59, 60, 61, 64, 66, 68, 69, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 86, 88, 89, 91, 93, 94, 95, 96, 97, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 122, 124, 127], "concis": [0, 7, 10, 16, 28, 34, 38, 39, 48, 49, 56, 58, 61, 70, 71, 81, 84, 85, 92, 103, 114, 126, 127, 128], "oper": [0, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 29, 31, 32, 34, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 59, 62, 63, 65, 66, 69, 71, 76, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 99, 100, 102, 104, 105, 109, 112, 113, 116, 117, 124, 127], "see": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 32, 34, 36, 40, 43, 45, 47, 49, 51, 63, 64, 67, 68, 70, 71, 73, 74, 82, 83, 86, 87, 92, 94, 97, 98, 99, 107, 108, 113, 117, 123, 124], "bind": [0, 12, 13, 14, 15, 16, 18, 31, 51, 60, 63, 80, 82, 93, 96, 121], "more": [0, 2, 4, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 30, 31, 34, 36, 37, 41, 44, 46, 47, 53, 54, 56, 63, 64, 65, 66, 67, 69, 71, 75, 80, 82, 83, 89, 96, 98, 106, 107, 108, 111, 115, 118, 122, 123], "inform": [0, 10, 28, 29, 33, 38, 43, 48, 58, 69, 70, 81, 90, 92, 103, 111, 114, 126, 128], "note": [0, 6, 12, 17, 18, 19, 25, 27, 36, 37, 44, 45, 47, 50, 53, 54, 55, 57, 68, 69, 72, 80, 85, 88, 91, 105, 107, 112, 116, 117, 119], "anoth": [0, 3, 4, 7, 8, 11, 13, 15, 16, 17, 18, 19, 22, 23, 27, 31, 33, 39, 41, 44, 50, 52, 56, 57, 59, 63, 69, 74, 77, 80, 82, 85, 91, 94, 95, 96, 98, 106, 109, 111, 112, 113, 119, 121, 122], "intern": [0, 13, 17, 21, 26, 68], "By": [0, 2, 3, 4, 5, 7, 9, 15, 19, 20, 21, 23, 24, 26, 27, 29, 30, 35, 36, 37, 40, 41, 46, 47, 49, 50, 52, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 122, 124, 125], "check": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 21, 22, 23, 26, 27, 30, 33, 34, 35, 36, 37, 39, 40, 42, 46, 47, 52, 54, 59, 62, 64, 67, 68, 74, 90, 91, 95, 96, 97, 98, 100, 105, 109, 115, 118, 120, 125], "actual": [0, 9, 12, 13, 14, 15, 16, 17, 18, 34, 36, 43, 44, 47, 62, 104, 121], "type": [0, 6, 12, 13, 14, 17, 18, 36, 40, 41, 46, 49, 50, 54, 78, 99, 105, 112], "e": [0, 1, 15, 16, 17, 18, 20, 25, 35, 36, 37, 40, 45, 47, 49, 61, 62, 64, 66, 67, 73, 87, 99, 100, 110, 117, 119, 124, 127], "g": [0, 6, 9, 11, 12, 13, 15, 16, 17, 18, 20, 24, 25, 26, 30, 33, 37, 40, 45, 49, 50, 51, 53, 59, 61, 62, 64, 74, 75, 80, 93, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 124], "64": [0, 12, 16, 17], "bit": [0, 9, 10, 12, 13, 14, 15, 16, 17, 18, 44, 47, 66, 68, 69, 83, 90, 92, 93, 96, 100, 112, 122, 123], "binari": [0, 15, 17, 82, 89, 107, 118, 122], "other": [0, 1, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 32, 36, 37, 40, 42, 44, 45, 47, 49, 50, 57, 60, 61, 63, 65, 67, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 95, 98, 100, 101, 104, 109, 111, 112], "work": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 31, 34, 35, 37, 41, 44, 47, 49, 50, 57, 59, 63, 64, 67, 72, 73, 74, 75, 80, 83, 84, 88, 89, 96, 106, 108, 111, 116, 117, 122, 123], "well": [0, 1, 2, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 37, 40, 44, 53, 57, 86, 97, 108, 109, 116, 117, 120, 127], "most": [0, 4, 6, 9, 10, 13, 16, 17, 18, 21, 28, 33, 35, 37, 38, 46, 47, 48, 49, 58, 60, 70, 73, 81, 89, 92, 93, 99, 103, 112, 114, 126, 127, 128], "case": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 26, 35, 38, 42, 44, 45, 49, 50, 51, 54, 56, 59, 60, 61, 63, 64, 66, 67, 73, 77, 85, 87, 89, 91, 97, 99, 105, 106, 107, 117, 121, 122], "fail": [0, 4, 17, 34, 35, 73, 87, 88], "larg": [0, 4, 6, 9, 13, 14, 15, 16, 17, 23, 25, 36, 56, 57, 64, 65, 76, 82, 107, 110, 118], "x": [0, 8, 15, 16, 17, 18, 20, 30, 32, 35, 36, 37, 61, 62, 71, 79, 116], "1e400": [0, 17], "d": [0, 1, 14, 15, 16, 17, 18, 20, 21, 23, 26, 34, 36, 37, 39, 40, 43, 45, 46, 69, 75, 80, 82, 88, 96, 99, 101, 109, 111, 113], "645": [0, 17], "dr": [0, 17], "per": [0, 13, 17, 41, 44, 45, 62, 76, 119, 125], "element": [0, 1, 2, 3, 4, 7, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 27, 30, 31, 33, 34, 35, 37, 39, 40, 42, 44, 49, 50, 51, 53, 57, 60, 62, 65, 66, 67, 72, 74, 75, 76, 77, 78, 84, 86, 87, 89, 94, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 111, 113, 115, 120, 124], "mean": [0, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 33, 37, 38, 39, 40, 42, 43, 44, 47, 48, 53, 56, 76, 78, 80, 82, 83, 86, 87, 91, 95, 100, 113, 115, 116, 124], "convert": [0, 5, 13, 14, 16, 17, 18, 20, 21, 25, 34, 53, 57, 61, 63, 69, 71, 75, 80, 82, 83, 84, 88, 99, 107, 116, 120], "its": [0, 1, 2, 5, 7, 14, 15, 16, 17, 18, 20, 21, 22, 24, 31, 39, 40, 41, 44, 46, 49, 50, 52, 53, 55, 61, 63, 65, 66, 68, 69, 71, 72, 73, 78, 80, 82, 83, 88, 90, 91, 96, 101, 107, 111, 113, 115, 119, 120, 127], "y": [0, 5, 8, 13, 14, 15, 17, 18, 32, 36, 37, 61, 62, 68, 71, 96, 109, 113], "accord": [0, 16, 17, 22, 59, 72, 77, 120], "specif": [0, 2, 6, 16, 17, 19, 21, 24, 26, 34, 36, 40, 43, 44, 45, 49, 50, 54, 56, 57, 59, 60, 69, 72, 73, 74, 77, 79, 80, 82, 86, 88, 90, 91, 94, 95, 96, 99, 104, 116, 117, 120, 123, 127], "each": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 114, 115, 117, 119, 123, 125, 126, 127, 128], "omega": [0, 1, 7, 11, 13, 14, 15, 16, 17, 18, 34, 39, 40, 41, 44, 50, 51, 55, 57, 60, 66, 74, 78, 84, 94, 95, 97, 99, 102, 105, 107, 113, 120, 121], "1287": [0, 17], "128": [0, 17, 82], "member": [0, 14, 16, 17, 23, 34, 36, 40, 51], "representiaton": [0, 17], "human": [0, 17, 29, 61, 69], "readabl": [0, 17, 19, 34, 42, 61, 68, 69, 96, 115], "format": [0, 5, 14, 17, 29, 40, 41, 49, 50, 59, 61, 63, 65, 69, 74, 75, 80, 82, 90, 91, 96, 102, 110, 111, 116, 120], "f": [0, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 29, 30, 31, 33, 34, 36, 37, 50, 51, 53, 59, 60, 61, 62, 64, 67, 68, 71, 73, 74, 75, 76, 80, 82, 84, 86, 87, 89, 91, 97, 104, 105, 107, 108, 109, 110, 111, 112, 115, 124, 125], "charact": [0, 5, 9, 13, 14, 15, 17, 18, 19, 21, 23, 26, 29, 33, 36, 37, 40, 44, 49, 54, 57, 59, 67, 73, 75, 76, 80, 82, 83, 88, 92, 96, 99, 105, 112, 113, 120, 123], "compos": [0, 13, 17, 100], "membership": [0, 14, 16, 17, 21, 23, 34, 36, 51, 77, 93, 120], "without": [0, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 27, 33, 34, 35, 37, 39, 41, 42, 44, 45, 46, 50, 52, 53, 54, 55, 56, 57, 60, 64, 65, 66, 67, 68, 69, 73, 74, 76, 80, 85, 86, 88, 89, 91, 94, 107, 108, 109, 112, 115, 117, 118, 119, 122], "entir": [0, 1, 2, 3, 5, 7, 11, 13, 14, 15, 16, 17, 18, 21, 27, 29, 32, 34, 39, 40, 44, 49, 61, 63, 64, 67, 90, 98, 105, 106, 117, 119, 124], "improv": [0, 9, 13, 14, 21, 25, 29, 31, 68, 74, 99, 115, 117, 118, 119, 120], "increas": [0, 5, 7, 9, 11, 14, 29, 35, 64, 72, 94, 97, 112], "print": [0, 12, 17, 29, 43, 49, 54], "precis": [0, 7, 11, 17, 29, 44, 50], "pp": [0, 17, 29, 36], "34": [0, 17, 61, 65], "signific": [0, 12, 13, 17, 21, 33, 68, 83, 88, 97, 107, 117, 119, 122], "digit": [0, 15, 17, 36, 83, 111, 122], "displai": [0, 17, 59, 97, 98, 112], "output": [0, 2, 4, 6, 7, 10, 11, 17, 28, 29, 33, 38, 39, 40, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 68, 70, 74, 76, 77, 78, 81, 82, 83, 85, 87, 88, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 107, 110, 111, 112, 114, 116, 120, 125, 126, 127, 128], "default": [0, 2, 7, 11, 12, 17, 78], "10": [0, 6, 10, 12, 15, 17, 19, 24, 28, 33, 35, 38, 39, 48, 53, 57, 58, 63, 64, 65, 68, 70, 76, 80, 81, 87, 88, 89, 91, 92, 97, 98, 100, 101, 103, 105, 107, 108, 110, 111, 114, 116, 118, 126, 127, 128], "max": [0, 16, 17, 32], "properti": [0, 1, 3, 7, 11, 18, 20, 23, 36, 42, 47, 62, 64, 76, 89, 118], "h": [0, 1, 6, 9, 11, 12, 13, 16, 17, 18, 33, 47, 50, 64, 73, 74, 91, 105, 107, 111, 112, 115], "ct": [0, 17], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 95, 96, 97, 98, 100, 102, 105, 107, 109, 110, 111, 112, 117, 118, 119, 120, 122, 123, 124, 125], "j": [0, 1, 6, 9, 12, 13, 15, 16, 17, 18, 20, 26, 33, 50], "k": [0, 12, 13, 16, 17, 18, 26, 58, 59, 95, 99], "residu": [0, 7, 11, 15, 17, 18], "modulo": [0, 17, 53], "give": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 27, 29, 31, 35, 37, 39, 40, 41, 44, 47, 50, 52, 55, 56, 57, 59, 60, 63, 64, 66, 73, 74, 76, 77, 79, 80, 82, 86, 88, 90, 91, 93, 94, 97, 98, 99, 101, 104, 105, 106, 107, 110, 112, 113, 121, 123, 124, 125], "remaind": [0, 11, 15, 17, 18, 24, 39, 53, 68, 79, 84, 90, 95, 100], "divis": [0, 6, 11, 12, 15, 17, 68, 90, 93, 121], "between": [0, 1, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 30, 32, 35, 37, 42, 44, 45, 52, 57, 59, 61, 62, 63, 64, 71, 74, 77, 82, 86, 87, 88, 89, 91, 95, 97, 99, 102, 105, 111, 122, 123], "two": [0, 1, 2, 3, 5, 7, 11, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 51, 52, 53, 54, 55, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 74, 75, 77, 78, 79, 84, 85, 87, 89, 91, 94, 95, 98, 100, 101, 102, 104, 105, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 125], "signum": [0, 15, 17, 18, 61, 91, 122], "three": [0, 4, 8, 13, 14, 15, 16, 17, 18, 22, 35, 41, 43, 44, 52, 61, 64, 65, 66, 67, 74, 75, 78, 79, 83, 84, 90, 97, 102, 108, 111, 113, 116, 117, 119, 122, 123, 125], "possibl": [0, 10, 15, 16, 17, 28, 30, 38, 41, 47, 48, 49, 58, 65, 66, 70, 77, 80, 81, 87, 92, 99, 100, 103, 104, 111, 114, 126, 128], "posit": [0, 3, 15, 17, 18, 21, 24, 32, 33, 35, 40, 42, 47, 52, 53, 60, 66, 68, 73, 75, 77, 83, 85, 86, 89, 91, 95, 96, 105, 107, 112, 115, 117, 118, 120, 122, 124], "neg": [0, 7, 11, 14, 15, 16, 17, 18, 25, 35, 42, 45, 48, 53, 57, 66, 68, 69, 77, 78, 87, 89, 91, 102, 107, 115, 122, 124], "zero": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 29, 30, 35, 42, 44, 49, 54, 56, 63, 64, 66, 78, 79, 83, 84, 85, 90, 91, 96, 98, 100, 102, 107, 112, 122], "alwai": [0, 7, 14, 15, 17, 18, 33, 42, 45, 49, 64, 73, 74, 78, 94, 107, 113, 118], "If": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 24, 27, 32, 33, 35, 36, 40, 41, 44, 45, 46, 47, 49, 51, 53, 57, 59, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 75, 78, 79, 83, 84, 85, 86, 89, 90, 91, 94, 96, 98, 99, 100, 102, 104, 105, 107, 108, 111, 112, 118, 122, 123, 125, 127], "divd": [0, 12, 17], "base": [0, 2, 3, 4, 5, 9, 11, 14, 15, 17, 18, 20, 30, 32, 33, 35, 36, 39, 40, 45, 54, 56, 62, 65, 66, 68, 69, 71, 72, 73, 75, 77, 79, 82, 84, 85, 87, 91, 96, 98, 100, 102, 105, 108, 109, 112, 116, 118, 119, 120, 122, 123, 124, 125], "have": [0, 1, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 28, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 126, 128], "orgin": [0, 17], "determin": [0, 2, 7, 11, 14, 15, 17, 21, 22, 23, 24, 25, 29, 30, 32, 34, 35, 36, 43, 46, 47, 50, 52, 55, 56, 60, 61, 62, 64, 66, 67, 68, 69, 73, 75, 76, 77, 79, 80, 83, 84, 86, 87, 89, 90, 93, 94, 95, 97, 100, 101, 102, 104, 105, 107, 108, 111, 119, 121, 122, 124], "judg": [0, 17], "exact": [0, 17, 60, 73], "1e": [0, 17, 29, 64, 97], "13": [0, 4, 17, 32, 39, 53, 65, 88], "15": [0, 15, 17, 39, 53, 55, 59, 64, 65, 88, 94, 102, 104, 110], "14": [0, 17, 36, 39, 44, 53, 65, 71, 88, 116], "w": [0, 6, 15, 17, 21, 33, 76], "all": [0, 1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 29, 30, 33, 35, 36, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 57, 60, 61, 65, 67, 68, 69, 72, 73, 74, 75, 77, 79, 80, 81, 82, 85, 87, 88, 89, 91, 94, 96, 100, 104, 106, 108, 109, 112, 113, 117, 119, 123, 125, 127], "repres": [0, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 21, 22, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 54, 55, 56, 60, 61, 62, 63, 64, 65, 69, 71, 72, 77, 78, 82, 83, 87, 90, 91, 93, 97, 99, 101, 102, 104, 105, 107, 108, 110, 113, 115, 119, 120, 121, 122, 124, 125], "To": [0, 2, 4, 5, 8, 9, 10, 13, 14, 16, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128], "address": [0, 2, 6, 24, 34, 36, 52, 54, 59, 64, 65, 73, 79, 106, 117, 119], "issu": [0, 2, 7, 11, 21, 36, 40, 44, 47, 52, 59, 65, 68, 77, 79, 88, 106, 107, 123, 124], "includ": [0, 2, 5, 6, 9, 10, 16, 17, 23, 28, 29, 30, 37, 38, 40, 43, 48, 49, 51, 52, 58, 67, 68, 70, 72, 74, 75, 77, 79, 81, 92, 98, 102, 103, 104, 106, 109, 114, 119, 120, 122, 123, 126, 128], "temporarili": [0, 17, 123], "set": [0, 3, 5, 6, 7, 10, 11, 14, 15, 17, 20, 22, 23, 25, 28, 34, 36, 38, 39, 40, 47, 48, 50, 51, 58, 59, 64, 65, 68, 69, 70, 74, 78, 80, 81, 82, 87, 88, 90, 92, 103, 106, 108, 111, 114, 120, 122, 123, 126, 127, 128], "classifi": 0, "smallest": [0, 2, 16, 17, 100, 109, 112], "unit": [0, 15, 17, 22, 63, 91], "mani": [0, 1, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 21, 24, 29, 35, 39, 43, 44, 45, 47, 57, 62, 64, 65, 66, 75, 76, 79, 84, 89, 105, 111, 115, 116, 123, 125], "ones": [0, 1, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 21, 35, 36, 43, 46, 47, 50, 62, 64, 66, 83, 85, 89, 91, 98, 106, 107, 113, 119, 123, 124], "exactli": [0, 15, 16, 17, 46, 68, 96, 113], "doesn": [0, 9, 13, 14, 15, 16, 17, 18, 19, 22, 39, 43, 44, 52, 53, 54, 77, 88], "care": [0, 17, 35, 47, 60, 71, 99, 108, 122], "about": [0, 9, 13, 14, 15, 16, 17, 31, 35, 40, 47, 55, 60, 68, 75, 95, 117, 119, 122], "fun": [0, 10, 14, 15, 16, 18, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "unconvent": [0, 5], "replic": [0, 1, 15, 16, 17, 18, 46, 100, 112, 120], "error": [0, 2, 5, 14, 16, 17, 41, 44, 62, 65, 73, 80, 108, 109, 113], "handl": [0, 5, 21, 25, 26, 34, 37, 40, 44, 49, 64, 68, 69, 74, 82, 83, 89, 99, 100, 104, 115, 117, 120], "l": [0, 13, 17, 18, 23, 24, 26, 36, 37, 47, 54, 72, 73, 77, 109, 113], "want": [0, 1, 2, 3, 7, 11, 13, 14, 15, 16, 17, 18, 19, 26, 27, 35, 36, 39, 40, 42, 43, 44, 46, 47, 49, 52, 53, 55, 57, 59, 63, 64, 66, 68, 71, 76, 79, 84, 85, 89, 96, 98, 99, 100, 101, 104, 105, 109, 113, 115, 123, 124], "otherwis": [0, 14, 15, 16, 17, 18, 24, 27, 44, 62, 93, 94], "empti": [0, 4, 9, 13, 14, 15, 16, 17, 18, 27, 40, 43, 44, 52, 59, 64, 68, 98], "attempt": [0, 7, 11, 13, 19, 34, 40, 41, 44, 52, 59, 62, 65, 66, 123], "factor": [0, 17, 57, 93, 100, 101], "catch": [0, 4, 14, 16, 40, 104], "interpret": [0, 13, 14, 27, 31, 36, 41, 61, 83, 84, 88, 118], "desir": [0, 7, 11, 15, 25, 40, 47, 59, 66, 76, 78, 79, 85, 88, 89, 96, 98, 106, 109, 110, 113, 116, 119, 120, 124], "copi": [0, 9, 12, 13, 14, 15, 16, 17, 18, 89, 104, 107, 111], "given": [0, 8, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 35, 36, 41, 45, 50, 52, 54, 55, 57, 61, 62, 64, 66, 68, 69, 71, 73, 75, 77, 78, 86, 87, 91, 93, 94, 97, 98, 101, 106, 107, 108, 109, 110, 112, 116, 118], "time": [0, 1, 3, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 27, 30, 33, 36, 40, 45, 46, 47, 52, 55, 60, 61, 64, 74, 83, 84, 87, 89, 90, 91, 93, 94, 100, 107, 108, 111, 112, 116, 117, 118, 119], "zild": [0, 17], "guard": [0, 5, 14, 16, 17, 62], "express": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 36, 37, 39, 43, 44, 49, 50, 51, 52, 55, 56, 57, 60, 63, 64, 68, 69, 72, 73, 76, 84, 86, 90, 93, 96, 98, 101, 104, 107, 109, 113, 118, 120, 121, 122, 127], "evalu": [0, 5, 6, 9, 13, 14, 16, 17, 26, 27, 29, 33, 34, 46, 49, 61, 64, 73, 74, 77, 82, 83, 87, 90, 95, 104, 105, 107, 118, 125], "appear": [0, 16, 17, 47, 52, 54, 59, 64, 75, 79, 80, 85, 88, 91, 106, 113], "scalar": [0, 7, 12, 13, 14, 15, 16, 17, 18, 35, 43, 44, 60, 61, 99, 106, 108, 109, 110, 113], "requir": [0, 2, 12, 13, 17, 20, 34, 40, 44, 45, 56, 57, 64, 66, 68, 74, 75, 76, 82, 87, 88, 89, 96, 104, 109, 116, 119, 123], "either": [0, 7, 9, 11, 13, 14, 15, 16, 17, 18, 24, 29, 36, 39, 44, 45, 49, 53, 57, 77, 88, 89, 93, 94, 97, 113, 122], "retain": [0, 14, 17, 66, 113, 118], "discard": [0, 17, 21, 46, 62, 118, 123], "dyadic": [0, 3, 12, 15, 17, 18, 31, 38, 84], "thu": [0, 6, 17, 23, 27, 29, 36, 39, 44, 49, 51, 53, 55, 60, 61, 64, 66, 69, 72, 78, 83, 84, 87, 88, 90, 101, 102, 104, 105, 107, 109, 113, 120, 121, 122, 123], "dydact": [0, 17], "column": [0, 2, 15, 16, 17, 18, 34, 35, 37, 41, 44, 47, 50, 56, 68, 75, 76, 77, 78, 92, 94, 110, 111, 117, 119, 120, 125], "width": [0, 17, 35, 76, 82, 87, 99, 112], "place": [0, 13, 16, 17, 18, 19, 40, 42, 46, 55, 66, 68, 72, 95, 108, 110, 115, 117, 119], "operand": [0, 1, 14, 15, 16, 17, 18, 21, 31, 54], "turn": [0, 14, 16, 17, 24, 42, 74], "list": [0, 1, 6, 12, 13, 14, 15, 16, 17, 18, 30, 33, 37, 39, 42, 44, 46, 47, 56, 65, 66, 68, 69, 71, 73, 75, 76, 77, 78, 80, 88, 91, 95, 98, 99, 100, 106, 111, 120, 125], "mix": [0, 1, 14, 15, 17, 18, 19, 65, 71, 74, 99, 102, 120], "program": [0, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 28, 38, 44, 48, 50, 51, 53, 58, 61, 65, 70, 71, 78, 79, 81, 82, 83, 85, 88, 90, 91, 92, 96, 97, 103, 108, 112, 114, 119, 120, 124, 126, 127, 128], "hook": [0, 17], "begin": [0, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 21, 23, 26, 28, 31, 34, 35, 38, 40, 46, 48, 52, 53, 58, 61, 65, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 81, 82, 88, 89, 92, 97, 99, 103, 107, 109, 114, 115, 118, 119, 121, 123, 124, 126, 128], "parenthesi": [0, 5, 12, 14, 16, 17, 37], "own": [0, 17, 21, 31, 65, 72, 96], "preprocess": [0, 14, 17, 22, 31, 34, 36, 61, 86, 102, 109], "jot": [0, 12, 17], "initi": [0, 3, 4, 15, 17, 20, 21, 23, 24, 30, 32, 40, 52, 54, 59, 61, 64, 66, 69, 75, 76, 78, 82, 84, 97, 99, 102, 107, 116, 119], "r": [0, 5, 8, 14, 17, 21, 24, 26, 27, 36, 37, 49, 53, 54, 55, 68, 69, 95, 101, 111], "hello": [0, 5, 8, 9, 14, 17, 23, 25, 26, 40, 47, 59, 73, 84, 115], "welcom": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 48, 58, 70, 81, 92, 103, 114, 123, 126, 128], "wiki": [0, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 22, 26, 27, 30, 32, 33, 36, 40, 41, 45, 47, 123], "detail": [0, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 26, 28, 29, 30, 33, 36, 38, 40, 41, 42, 45, 47, 48, 58, 70, 81, 92, 98, 103, 114, 123, 126, 128], "interest": [0, 3, 4, 5, 9, 13, 15, 16, 17, 20, 23, 24, 25, 39, 44, 54, 55, 65, 73, 79, 80, 83, 87, 95, 100, 102, 116, 117, 122, 127], "thing": [0, 1, 10, 12, 13, 15, 16, 17, 18, 44, 57, 68, 96], "constitut": [0, 17, 62], "becaus": [0, 1, 2, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 24, 27, 34, 35, 37, 40, 44, 46, 49, 57, 64, 65, 67, 76, 83, 93, 95, 96, 100, 106, 112, 123], "realli": [0, 1, 13, 14, 15, 16, 17, 18, 19, 43, 57], "good": [0, 8, 10, 13, 15, 16, 17, 28, 38, 48, 54, 58, 70, 81, 92, 103, 114, 126, 128], "distinct": [0, 17, 45, 64, 79, 84, 91, 106, 115, 121], "ll": [0, 2, 3, 5, 6, 9, 12, 13, 14, 15, 16, 17, 19, 21, 23, 25, 27, 32, 46, 47, 53, 59, 61, 62, 63, 72, 80, 82, 83, 85, 86, 88, 89, 90, 98, 99, 107, 111, 112, 115, 118, 121], "do": [0, 1, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 23, 27, 28, 31, 32, 33, 36, 38, 40, 43, 44, 45, 47, 48, 52, 57, 58, 59, 64, 68, 70, 73, 81, 85, 88, 90, 91, 92, 100, 101, 103, 105, 114, 118, 120, 122, 123, 124, 126, 128], "best": [0, 3, 9, 13, 15, 17, 27, 29, 88, 111, 119], "would": [0, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 31, 32, 39, 40, 41, 43, 44, 45, 46, 51, 53, 54, 56, 57, 63, 64, 65, 71, 75, 78, 82, 83, 85, 89, 93, 96, 98, 99, 100, 102, 104, 108, 109, 112, 113, 118, 120, 123], "consid": [0, 2, 4, 9, 17, 19, 21, 23, 25, 36, 39, 45, 49, 52, 55, 61, 63, 64, 71, 72, 73, 77, 78, 80, 82, 83, 85, 86, 87, 91, 94, 97, 100, 104, 105, 107, 109, 113, 116, 117, 119, 121, 122, 124], "correct": [0, 7, 8, 9, 11, 12, 16, 17, 22, 41, 45, 46, 52, 59, 66, 70, 80, 83, 84, 105, 106, 110, 112, 117, 120, 123], "off": [0, 6, 8, 12, 14, 15, 16, 17, 18, 21, 33, 57, 58, 66, 80, 123], "probabl": [0, 14, 15, 16, 17, 44, 65], "were": [0, 7, 11, 13, 16, 17, 21, 37, 41, 54, 76, 78, 89, 100, 120], "stai": [0, 17, 29, 86, 97], "re": [0, 1, 4, 5, 8, 12, 13, 14, 15, 16, 17, 18, 27, 30, 35, 36, 42, 44, 46, 47, 50, 59, 83, 95, 127], "go": [0, 5, 10, 12, 13, 14, 15, 16, 17, 18, 21, 27, 28, 32, 35, 44, 57, 59, 68, 78, 86, 89, 94, 97, 112, 121], "name": [0, 1, 7, 11, 13, 14, 15, 16, 17, 18, 34, 44, 47, 56, 57, 60, 67, 68, 74, 76, 80, 81, 86, 105, 107, 112, 113, 119, 124], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "somebodi": [0, 15, 17], "who": [0, 4, 6, 12, 17], "particip": [0, 17, 22, 26, 33, 46, 66, 127], "live": [0, 6, 7, 11, 15, 17, 66], "chat": [0, 6, 15, 17, 66, 89, 98, 111], "event": [0, 6, 7, 11, 15, 17, 66, 111, 116], "notic": [0, 7, 11, 12, 13, 17, 47, 49, 52, 56, 71, 77, 80, 82, 84, 93], "written": [0, 1, 16, 17, 18, 44, 57, 80, 113], "even": [0, 1, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 34, 44, 56, 57, 58, 71, 74, 79, 81, 85, 88, 90, 91, 95, 98, 102, 105, 106, 127], "train": [0, 7, 11, 12, 14, 17, 18, 34, 41, 63], "togeth": [0, 1, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 21, 33, 44, 50, 63, 66, 75, 76, 87, 102, 108, 117, 119, 121, 123], "transform": [0, 13, 15, 17, 20, 50, 52, 53, 61, 65, 66, 67, 68, 69, 75, 76, 82, 84, 86, 88, 91, 95, 109, 116], "form": [0, 2, 5, 14, 15, 16, 17, 22, 24, 39, 42, 50, 52, 55, 59, 63, 65, 73, 74, 76, 82, 84, 100, 110, 112, 113, 119, 120, 121], "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 56, 57, 60, 61, 66, 67, 68, 69, 71, 73, 74, 76, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 122, 123, 124, 125], "rid": [0, 1, 16, 17, 18], "nois": [0, 17, 44], "keep": [0, 4, 10, 13, 16, 17, 18, 20, 21, 30, 33, 39, 40, 42, 46, 49, 53, 57, 64, 68, 74, 80, 105, 111, 118], "just": [0, 1, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 31, 32, 38, 40, 43, 44, 47, 48, 49, 57, 58, 66, 70, 81, 83, 92, 103, 105, 109, 112, 114, 117, 119, 126, 128], "outer": [0, 3, 14, 15, 16, 17, 18, 29, 30, 44, 49, 67, 75, 84, 90, 98, 99, 101, 104, 106, 110, 112, 113, 120], "itself": [0, 7, 9, 11, 13, 15, 16, 17, 18, 22, 24, 27, 44, 45, 53, 77, 85, 91, 101, 120], "flow": [0, 16, 17, 54, 98], "feed": [0, 17, 41, 73, 88], "like": [0, 1, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 27, 28, 34, 35, 36, 37, 38, 40, 41, 43, 44, 47, 48, 52, 53, 54, 55, 56, 57, 58, 63, 70, 71, 75, 77, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 96, 97, 99, 102, 103, 107, 108, 109, 111, 112, 114, 115, 118, 119, 120, 122, 126, 128], "think": [0, 10, 12, 13, 14, 15, 16, 17, 18, 28, 31, 38, 48, 55, 58, 63, 65, 70, 74, 81, 83, 92, 103, 110, 112, 114, 121, 126, 127, 128], "besid": [0, 17, 63, 88], "And": [0, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 39, 43, 57, 63, 76, 104, 121], "pattern": [0, 9, 12, 13, 17, 21, 72, 84, 87, 91, 95, 99, 110, 111, 112, 116, 120], "again": [0, 1, 6, 12, 13, 14, 15, 16, 17, 18, 24, 66, 75, 83, 99, 111, 117], "parenthes": [0, 7, 11, 14, 15, 17, 34, 39, 40, 41, 42, 44, 50, 53, 57, 96, 105, 124], "over": [0, 1, 4, 12, 13, 14, 15, 16, 17, 18, 21, 22, 29, 39, 41, 42, 44, 49, 59, 65, 71, 73, 86, 98, 107, 112, 119], "fulli": [0, 17, 30, 66, 87], "howev": [0, 2, 4, 7, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 29, 34, 35, 36, 37, 39, 40, 42, 43, 44, 47, 51, 52, 56, 57, 59, 61, 63, 68, 77, 78, 79, 80, 83, 85, 88, 89, 90, 91, 93, 96, 99, 100, 106, 107, 108, 109, 110, 116, 118, 120, 122, 123], "don": [0, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 28, 38, 40, 44, 48, 58, 60, 70, 78, 81, 85, 90, 92, 99, 103, 110, 114, 123, 126, 127, 128], "perfectli": [0, 15, 17, 56], "exercis": [0, 1, 3, 17, 18, 112], "sake": [0, 17, 75], "convers": [0, 3, 9, 15, 17, 24, 32, 66, 75, 84, 89, 102, 105, 116], "now": [0, 1, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 34, 35, 36, 39, 40, 42, 43, 44, 45, 47, 49, 51, 53, 55, 56, 60, 63, 66, 68, 71, 73, 74, 76, 77, 78, 80, 85, 86, 87, 88, 89, 91, 95, 97, 101, 104, 106, 107, 110, 112, 116, 117, 119, 120, 121, 123], "mention": [0, 17, 18, 41, 44, 50, 55, 57, 62, 84, 91, 105, 116], "question": [0, 16, 17, 44, 71, 101, 108], "regard": [0, 17, 84, 99, 108], "sai": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 26, 31, 47, 57, 59, 70, 76, 99, 110, 115, 123, 124], "small": [0, 4, 15, 16, 17, 31, 44, 46, 84, 85, 99, 124], "power": [0, 1, 3, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 24, 27, 28, 31, 38, 41, 48, 53, 58, 61, 70, 81, 84, 85, 87, 92, 97, 101, 103, 109, 111, 112, 114, 119, 126, 127, 128], "add": [0, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 40, 53, 57, 59, 68, 74, 76, 83, 89, 96, 97, 99, 122, 123], "through": [0, 2, 3, 4, 5, 8, 14, 17, 18, 21, 23, 29, 32, 33, 46, 47, 49, 50, 52, 54, 59, 60, 64, 65, 71, 73, 74, 78, 80, 83, 84, 85, 88, 90, 91, 100, 101, 104, 108, 109, 111, 112, 115, 116, 117, 118, 120, 121, 122, 125, 127], "thei": [0, 3, 6, 12, 13, 14, 15, 17, 18, 21, 24, 30, 32, 33, 34, 36, 37, 44, 54, 55, 60, 61, 67, 69, 72, 75, 76, 78, 80, 82, 85, 86, 87, 88, 89, 91, 95, 98, 102, 106, 108, 109, 113, 118, 119, 122, 123, 124], "look": [0, 2, 3, 4, 5, 8, 12, 13, 14, 15, 16, 17, 18, 21, 27, 35, 37, 41, 47, 54, 55, 56, 59, 63, 64, 68, 75, 77, 78, 80, 82, 88, 96, 97, 100, 102, 108, 109, 112, 113, 115, 116, 118, 119, 120, 123], "ve": [0, 2, 3, 4, 5, 12, 13, 15, 16, 17, 18, 21, 31, 44, 68, 71, 82, 88, 99, 104, 116, 117, 124, 125], "onli": [0, 1, 3, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 30, 36, 39, 40, 44, 46, 47, 49, 50, 51, 52, 54, 57, 59, 60, 64, 67, 68, 69, 76, 77, 78, 79, 80, 85, 87, 94, 95, 96, 99, 100, 104, 106, 107, 108, 112, 113, 117, 122, 124], "ad": [0, 1, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 23, 31, 36, 54, 57, 66, 68, 76, 80, 83, 86, 106, 111, 112, 123], "could": [0, 1, 2, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 32, 33, 36, 40, 42, 44, 46, 57, 64, 77, 79, 84, 88, 96, 102, 106, 108, 112, 113, 122, 123], "also": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 31, 32, 34, 35, 36, 37, 40, 41, 42, 44, 45, 49, 52, 55, 57, 61, 63, 64, 66, 68, 69, 72, 77, 78, 79, 82, 85, 87, 90, 91, 93, 94, 99, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 125], "cours": [0, 12, 14, 15, 16, 17, 18, 44, 57], "minu": [0, 2, 7, 11, 12, 14, 15, 16, 17, 35, 45, 57, 89], "inaccuraci": [0, 17, 20], "level": [0, 5, 14, 16, 17, 84, 99, 127], "should": [0, 4, 12, 14, 15, 17, 18, 19, 24, 26, 33, 34, 35, 36, 43, 44, 45, 49, 62, 66, 67, 68, 69, 71, 74, 83, 87, 89, 91, 95, 97, 99, 107, 111, 113, 118, 124], "try": [0, 1, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 44, 65, 106, 117, 123], "oh": [0, 17, 70], "9": [0, 2, 7, 10, 11, 16, 17, 19, 20, 28, 32, 35, 38, 39, 46, 48, 53, 55, 56, 57, 58, 65, 70, 74, 75, 77, 80, 81, 82, 83, 85, 88, 89, 92, 94, 97, 98, 100, 103, 104, 110, 111, 112, 114, 115, 126], "odd": [0, 10, 17, 57, 58, 79, 81, 95], "reason": [0, 7, 11, 13, 14, 16, 17, 54, 55, 87, 95, 97, 123], "ha": [0, 2, 5, 7, 11, 13, 14, 15, 16, 17, 18, 21, 24, 33, 37, 38, 42, 43, 44, 49, 52, 61, 62, 73, 76, 79, 87, 95, 96, 97, 102, 106, 109, 112, 119, 124, 127], "someth": [0, 8, 12, 13, 14, 15, 16, 17, 31, 44, 54, 55, 57, 97, 106, 112], "multipl": [0, 3, 4, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 22, 24, 26, 27, 28, 30, 36, 38, 40, 41, 44, 45, 46, 47, 48, 55, 56, 57, 58, 61, 65, 66, 70, 72, 77, 78, 81, 88, 92, 94, 96, 99, 103, 105, 110, 114, 116, 119, 120, 126, 128], "fuzz": [0, 17], "long": [0, 17, 18, 40, 55, 57, 72, 103, 114, 118], "ratio": [0, 6, 17, 22, 27], "than": [0, 2, 4, 6, 9, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 30, 34, 35, 37, 41, 42, 44, 47, 52, 53, 54, 59, 64, 67, 68, 71, 73, 74, 82, 87, 89, 91, 96, 97, 107, 116, 118, 119, 122, 124, 125], "plu": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 44, 47, 52, 104, 105], "why": [0, 16, 17, 44, 49, 122], "chose": [0, 17], "soon": [0, 2, 14, 17], "hit": [0, 9, 14, 17, 65, 96], "reach": [0, 8, 9, 14, 17, 20, 83, 86, 89, 110], "order": [0, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 24, 29, 30, 34, 36, 37, 40, 43, 44, 45, 48, 50, 56, 60, 64, 65, 66, 67, 68, 72, 80, 84, 94, 95, 98, 102, 106, 108, 109, 111, 113, 118, 119], "magnitud": [0, 3, 15, 16, 17, 18, 22, 53], "therefor": [0, 3, 7, 11, 13, 14, 17, 23, 24, 56, 69, 77, 83, 89, 102, 124], "awai": [0, 14, 17, 115, 116], "counteract": [0, 17], "local": [0, 17], "after": [0, 2, 9, 12, 14, 15, 17, 21, 25, 26, 27, 33, 36, 37, 39, 40, 45, 47, 52, 53, 54, 61, 62, 64, 65, 67, 68, 69, 71, 76, 79, 83, 84, 86, 88, 96, 97, 99, 102, 106, 107, 109, 111, 112, 115, 116, 117, 118, 119], "formula": [0, 14, 17, 19, 25, 27, 31, 42, 55, 101, 104, 111, 113, 124], "befor": [0, 1, 4, 14, 15, 17, 18, 23, 31, 33, 35, 39, 40, 44, 45, 47, 54, 61, 68, 69, 71, 79, 80, 93, 96, 102, 106, 109, 123, 125], "fc": [0, 17], "definit": [0, 6, 12, 14, 17, 18, 24, 31, 36, 40, 44, 49, 68, 78, 89], "normal": [0, 1, 9, 13, 14, 15, 16, 17, 18, 35, 37, 59, 66, 82, 83, 86, 95, 96], "much": [0, 1, 12, 14, 15, 16, 17, 18, 19, 21, 26, 47, 66, 111], "unless": [0, 17, 90], "possibli": [0, 17, 43], "perform": [0, 3, 4, 12, 13, 14, 15, 17, 19, 20, 34, 41, 44, 45, 46, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 67, 69, 73, 76, 84, 85, 86, 87, 89, 93, 94, 96, 98, 102, 116, 123], "optim": [0, 5, 13, 15, 17, 21, 25, 30, 33, 34, 36, 41, 42, 47, 69, 80, 89, 96, 97, 99, 107, 118], "usual": [0, 17, 27], "themselv": [0, 14, 17, 18, 23, 44, 47, 52, 71], "But": [0, 13, 14, 15, 16, 17, 18, 44, 49, 63, 64], "ask": [0, 7, 11, 15, 17, 31, 35, 41, 71, 82], "back": [0, 7, 8, 11, 13, 15, 17, 20, 21, 33, 35, 53, 74, 75, 82, 87, 88, 91, 105, 111, 116, 117, 119], "store": [0, 17, 42, 112], "quad": [0, 5, 7, 9, 11, 12, 13, 14, 17, 23, 34, 54, 61, 68, 82, 90, 106, 112], "tri": [0, 17], "compact": [0, 17, 26, 56, 63, 71], "everi": [0, 1, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 23, 27, 36, 37, 39, 40, 46, 47, 51, 54, 57, 66, 67, 72, 77, 87, 90, 91, 111, 117], "tell": [0, 17, 28, 43, 123], "separ": [0, 13, 17, 29, 37, 40, 42, 48, 57, 63, 66, 69, 76, 88, 94, 105, 114, 120], "them": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 30, 33, 34, 36, 37, 40, 42, 43, 44, 46, 47, 50, 52, 57, 59, 60, 66, 69, 71, 73, 74, 76, 77, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 105, 108, 111, 113, 116, 117, 123, 124], "fit": [0, 7, 11, 15, 17, 29, 74, 76, 83, 86, 88, 116, 123, 125], "second": [0, 1, 6, 12, 13, 14, 15, 16, 17, 18, 21, 33, 35, 37, 42, 44, 45, 49, 61, 62, 63, 64, 67, 69, 77, 78, 79, 84, 89, 91, 94, 95, 106, 122, 125], "8": [0, 5, 10, 14, 15, 17, 18, 20, 28, 29, 35, 39, 43, 44, 46, 48, 53, 57, 58, 65, 66, 70, 71, 75, 77, 80, 81, 85, 87, 88, 89, 92, 93, 94, 97, 98, 100, 101, 103, 104, 110, 112, 114, 118, 121, 126], "That": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 44], "byte": [0, 13, 17], "exploit": [0, 17, 53], "fact": [0, 15, 16, 17, 24, 44, 69, 87], "addit": [0, 4, 6, 7, 11, 12, 13, 15, 17, 18, 21, 33, 50, 57, 64, 72, 74, 79, 89, 96, 105, 121, 123, 125], "matter": [0, 1, 7, 11, 12, 13, 15, 16, 17, 18, 74, 78, 94], "400": [0, 17, 90], "answer": [0, 14, 17, 107], "instead": [0, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 53, 54, 55, 56, 57, 66, 69, 74, 75, 80, 83, 84, 85, 88, 89, 91, 93, 94, 96, 98, 99, 100, 106, 107, 110, 112, 117, 118, 120, 123, 124], "rather": [0, 9, 13, 15, 16, 17, 27, 34, 35, 41, 49, 52, 62, 71, 73, 74, 83, 91, 97, 116, 119], "run": [0, 6, 7, 9, 11, 12, 13, 14, 16, 17, 21, 29, 31, 35, 36, 37, 46, 47, 65, 72, 74, 75, 83, 87, 90, 103, 104, 112, 118, 120, 123, 125], "spectacularli": [0, 17], "upgrad": [0, 17, 19], "stuck": [0, 17], "becam": [0, 17], "sinc": [0, 1, 9, 13, 14, 15, 16, 17, 18, 20, 21, 24, 31, 34, 40, 42, 45, 46, 47, 50, 56, 57, 61, 64, 68, 72, 73, 77, 79, 80, 87, 95, 99, 100, 105, 109, 117, 119, 120, 121, 122, 123, 124, 127], "anyth": [0, 13, 16, 17, 18, 21, 27], "amend": [0, 3, 15, 17], "contain": [0, 5, 9, 16, 17, 34, 39, 40, 42, 43, 52, 53, 59, 60, 62, 65, 69, 73, 84, 89, 93, 98, 100, 106, 109, 113, 118, 120, 127], "gd": [0, 17], "match": [0, 9, 12, 13, 14, 16, 17, 21, 22, 23, 37, 40, 50, 52, 54, 56, 67, 68, 69, 85, 87, 95, 96, 109, 111, 118, 123, 124], "said": [0, 17], "none": [0, 13, 14, 16, 17, 49], "m": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 24, 26, 30, 42, 44, 46, 54, 124], "sure": [0, 3, 13, 15, 16, 17], "agre": [0, 17], "depend": [0, 7, 11, 17, 24, 45, 98, 99, 111], "understand": [0, 4, 5, 15, 16, 17, 26, 29, 32, 37, 45, 54, 62, 63, 65, 66, 104, 106, 110, 112, 117], "simplist": [0, 17], "perspect": [0, 3, 17, 124], "bunch": [0, 12, 13, 15, 16, 17, 41, 57, 58, 59], "out": [0, 3, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 31, 35, 36, 37, 47, 49, 54, 56, 60, 62, 63, 67, 76, 78, 99, 100, 105, 106, 112, 116, 117, 118, 124, 125], "dot": [0, 12, 17, 105], "scale": [0, 17, 18, 22, 53, 75], "insid": [0, 16, 17, 44, 47, 54, 57, 60], "loop": [0, 17, 18, 41, 45, 74, 98, 99], "fuse": [0, 17, 18, 41], "simpli": [0, 1, 2, 7, 9, 10, 11, 15, 16, 17, 18, 28, 35, 38, 41, 44, 45, 47, 48, 49, 58, 70, 72, 73, 79, 81, 83, 88, 89, 91, 92, 103, 105, 106, 113, 114, 115, 120, 123, 124, 126, 128], "rememb": [0, 6, 10, 15, 16, 17, 28, 35, 38, 48, 58, 70, 72, 81, 82, 85, 89, 92, 103, 113, 114, 123, 126, 128], "littl": [0, 12, 13, 14, 15, 16, 17], "being": [0, 4, 6, 9, 11, 12, 13, 14, 15, 17, 42, 44, 55, 72, 79, 90, 100, 112, 122], "close": [0, 5, 14, 17, 20, 31, 47, 67, 88], "too": [0, 4, 15, 17, 44, 57, 59, 62, 65, 66, 123], "underscor": [0, 17, 82], "cannot": [0, 13, 17, 56, 64, 67, 94, 100], "figur": [0, 17, 25, 78, 101], "printout": [0, 17], "17": [0, 17, 29, 65, 88, 106], "implicit": [0, 17], "maximum": [0, 2, 16, 17, 25, 34, 35, 44, 65, 86, 97, 118], "new": [0, 10, 13, 14, 15, 17, 21, 24, 28, 31, 35, 38, 46, 48, 50, 51, 53, 54, 56, 57, 58, 61, 69, 70, 72, 74, 81, 82, 86, 92, 96, 103, 104, 106, 107, 111, 113, 114, 115, 119, 126, 127, 128], "post": [0, 14, 17, 27], "okai": [0, 13, 14, 15, 16, 17, 18], "regular": [0, 5, 13, 14, 17, 18], "exot": [0, 17], "known": [0, 8, 15, 17, 34, 35, 37, 40, 41, 44, 59, 64, 67, 71, 72, 74, 83, 91, 101, 105, 120, 121, 127], "wa": [0, 7, 11, 13, 14, 15, 16, 17, 20, 68, 108, 123], "multipli": [0, 6, 7, 10, 11, 12, 15, 16, 17, 18, 20, 22, 25, 27, 41, 53, 55, 75, 77, 83, 91, 93, 96, 100, 121], "Of": [0, 12, 15, 16, 17, 18, 44, 103], "wherev": [0, 17, 35], "whenev": [0, 14, 17, 39, 41, 49, 54], "nonzero": [0, 17], "sign": [0, 15, 17, 18, 46, 57, 68, 70, 77, 84, 89, 116, 122], "never": [0, 4, 5, 13, 14, 17, 64, 91], "ic": [0, 17], "tricki": [0, 17], "radix": [0, 3, 15, 17, 91, 102], "full": [0, 2, 14, 15, 16, 17, 29, 55, 59, 65, 99, 104, 110, 116, 121, 122], "know": [0, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 55, 69, 73, 74, 101, 113, 123], "explain": [0, 17, 37], "sens": [0, 7, 11, 17, 96], "end": [0, 5, 13, 14, 15, 16, 17, 18, 21, 23, 25, 26, 35, 40, 43, 44, 45, 52, 63, 66, 67, 68, 72, 79, 88, 89, 95, 96, 97, 107, 111, 118, 123], "up": [0, 1, 3, 5, 9, 12, 13, 14, 15, 16, 17, 18, 20, 27, 28, 29, 33, 40, 41, 44, 52, 53, 56, 63, 66, 68, 71, 74, 78, 79, 80, 81, 82, 83, 92, 93, 96, 97, 98, 109, 111, 117, 118, 120, 123], "larger": [0, 2, 5, 12, 15, 16, 17, 18, 23, 47, 54, 82, 86, 91, 96, 97, 117, 119], "abus": [0, 13, 14, 17], "specifi": [0, 14, 15, 17, 18, 34, 50, 51, 59, 61, 66, 69, 72, 75, 76, 78, 82, 84, 86, 89, 91, 93, 99, 100, 101, 104, 112, 116, 120], "clear": [0, 14, 16, 17, 27, 33, 52, 65, 76, 97, 98, 127], "product": [0, 3, 12, 14, 15, 16, 17, 18, 22, 29, 30, 49, 75, 83, 90, 91, 98, 106, 110], "better": [0, 4, 13, 14, 15, 17, 21, 25, 35, 36, 68, 69, 80, 91, 93, 102, 107, 108, 117, 124], "reader": [0, 17, 29], "around": [0, 2, 15, 17, 18, 21, 24, 35, 43, 57, 75, 76, 96, 98, 110, 114], "measur": [0, 17, 21, 23, 30, 33, 35, 74, 97, 99], "rel": [0, 17, 45, 46, 62, 82, 97], "consequ": [0, 17, 49, 56, 66, 74, 87, 101, 106], "true": [0, 1, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 39, 42, 49, 50, 51, 77, 86, 98, 105], "300": [0, 17, 90], "spoke": [0, 17], "system": [0, 2, 13, 14, 15, 16, 17, 32, 61, 65, 68, 80, 83, 91, 102, 112, 122], "special": [0, 3, 15, 16, 17, 25, 36, 39, 47, 52, 63, 68, 106, 113], "oop": [0, 13, 15, 17, 18], "sorri": [0, 15, 17, 18], "wrong": [0, 14, 17, 66], "final": [0, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 21, 23, 26, 27, 28, 31, 33, 34, 37, 39, 41, 42, 45, 49, 50, 55, 56, 64, 65, 66, 72, 77, 79, 89, 94, 95, 96, 106, 108, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 125], "joke": [0, 17], "subject": [0, 14, 15, 17, 18, 36], "limit": [0, 2, 13, 17, 18, 53, 59, 96, 122], "domain": [0, 2, 16, 17, 107], "main": [0, 11, 12, 13, 14, 15, 16, 17, 18, 29, 50, 67, 77, 94, 106, 108], "gap": [0, 17, 107], "enlist": [0, 2, 14, 16, 17], "collaps": [0, 15, 17], "horribl": [0, 17], "complet": [0, 2, 5, 7, 11, 16, 17, 18, 24, 34, 52, 56, 66, 68, 78, 83, 104, 116], "deal": [0, 2, 7, 9, 11, 12, 17, 52, 54, 59, 68, 83, 87], "pleas": [0, 7, 11, 17, 19, 22, 30, 36, 38, 40, 41, 47, 71, 123], "tabl": [1, 4, 14, 15, 16, 18, 37, 44, 49, 50, 62, 68, 77, 78, 80, 110, 116], "eighth": [1, 18, 19], "2013": [11, 12, 13, 14, 15, 16, 17, 18, 127], "onc": [1, 7, 11, 13, 15, 16, 18, 21, 27, 36, 47, 50, 63, 65, 80, 84, 88, 102, 109, 111, 115, 119, 124], "straight": [1, 18, 20], "certain": [1, 18, 19, 25, 29, 44, 69, 85, 91, 100, 108], "target": [1, 18, 85, 98, 104, 124], "provid": [1, 3, 4, 10, 14, 18, 19, 20, 21, 28, 31, 32, 34, 38, 39, 41, 42, 43, 48, 53, 55, 56, 58, 59, 61, 62, 66, 68, 70, 77, 79, 81, 85, 88, 89, 90, 92, 94, 96, 97, 99, 102, 103, 106, 107, 108, 109, 112, 113, 114, 115, 116, 126, 128], "vertic": [1, 3, 14, 15, 18, 32, 39, 77, 94], "horizont": [1, 3, 15, 18, 20, 32, 69, 71, 77, 94, 119], "basic": [1, 2, 4, 5, 7, 10, 16, 18, 26, 27, 28, 32, 38, 39, 44, 48, 55, 57, 58, 70, 73, 81, 91, 92, 99, 103, 114, 117, 126, 128], "A": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 47, 48, 49, 51, 53, 54, 55, 58, 59, 60, 62, 64, 65, 68, 69, 70, 71, 75, 79, 80, 81, 82, 84, 85, 88, 92, 94, 95, 96, 97, 98, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 118, 123, 124, 125, 126, 127, 128], "get": [1, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 23, 33, 35, 39, 41, 42, 44, 46, 47, 49, 51, 56, 57, 60, 64, 69, 71, 72, 74, 80, 82, 85, 88, 89, 94, 99, 100, 106, 107, 108, 109, 112, 123, 125], "alreadi": [1, 13, 14, 15, 16, 18, 33, 44, 52, 64, 66, 91, 99, 104], "pair": [1, 5, 13, 14, 15, 18, 27, 30, 32, 37, 44, 52, 54, 66, 69, 72, 73, 74, 77, 91, 98, 100, 105, 112, 117, 119, 126], "util": [1, 3, 5, 6, 7, 8, 11, 12, 20, 21, 23, 25, 30, 31, 40, 42, 46, 50, 56, 59, 60, 62, 63, 64, 65, 69, 71, 73, 74, 75, 76, 78, 79, 80, 82, 86, 88, 89, 90, 91, 97, 104, 105, 106, 107, 108, 111, 112, 115, 117, 118, 120, 121, 122, 124, 125], "distribut": [1, 15, 18, 39, 65, 81], "rank": [1, 14, 15, 16, 18, 19, 37, 62, 65, 73, 98, 109, 117, 119], "iota": [1, 7, 11, 12, 15, 18, 34, 38, 57, 112], "7": [1, 2, 7, 10, 11, 17, 18, 19, 28, 35, 37, 38, 39, 43, 46, 48, 53, 57, 58, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 85, 86, 88, 89, 92, 94, 96, 97, 98, 100, 103, 105, 109, 112, 114, 118, 122, 126], "approach": [1, 3, 5, 7, 8, 11, 13, 14, 17, 18, 21, 23, 26, 31, 32, 34, 36, 39, 41, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 65, 66, 68, 69, 73, 74, 75, 76, 80, 82, 83, 86, 87, 89, 93, 95, 98, 99, 102, 105, 121, 123, 124, 125, 127], "hidden": [1, 18], "interestingli": [1, 14, 31], "shape": [1, 2, 3, 7, 11, 13, 14, 15, 16, 18, 30, 37, 53, 66, 77, 78, 112, 113, 117, 119], "hold": [1, 9, 18, 66, 86, 87, 122], "those": [1, 4, 6, 7, 11, 12, 13, 14, 15, 16, 18, 21, 29, 30, 35, 36, 37, 44, 47, 52, 54, 60, 76, 86, 88, 91, 96, 108, 113, 117, 118], "correspond": [1, 5, 7, 8, 11, 13, 15, 18, 21, 29, 40, 41, 47, 55, 62, 66, 67, 68, 69, 72, 77, 78, 80, 83, 85, 86, 89, 98, 105, 107, 108, 120, 125], "across": [1, 5, 6, 18, 39, 44, 46, 47, 61, 66, 73, 87, 108, 110, 117, 119], "reduc": [1, 12, 13, 14, 16, 18, 19, 21, 26, 27, 30, 35, 39, 42, 44, 47, 49, 52, 59, 71, 74, 88, 91, 93, 104, 105, 106, 107, 123], "start": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 30, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 60, 62, 63, 64, 65, 68, 69, 72, 74, 76, 77, 78, 79, 82, 83, 85, 86, 88, 89, 98, 99, 101, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 123, 124], "repetit": [1, 18, 71], "seri": [1, 7, 11, 18, 35, 91, 127], "On": [1, 10, 15, 18, 63], "row": [1, 2, 4, 8, 14, 15, 16, 18, 35, 37, 41, 44, 47, 50, 52, 56, 62, 68, 69, 71, 74, 77, 78, 88, 94, 106, 110, 117, 119], "third": [1, 9, 13, 16, 18, 30, 33, 49, 69, 79, 83, 94, 95, 122, 125], "easili": [1, 2, 5, 16, 18, 33, 37, 45, 51, 55, 63, 66, 68, 75, 85, 106, 115, 120, 124], "observ": [1, 6, 7, 11, 15, 16, 18, 20, 23, 25, 27, 35, 36, 47, 49, 60, 62, 64, 76, 84, 91, 101, 108, 117, 124], "applic": [1, 18, 26, 37, 45, 50, 51, 59, 63, 68, 76, 79, 99, 109, 122], "duplic": [1, 15, 16, 18, 30, 34, 47, 52, 62, 71, 73, 94, 104, 108, 110], "self": [1, 3, 15, 18, 19, 22, 23, 77], "concaten": [1, 4, 13, 14, 15, 16, 18, 23, 30, 31, 40, 47, 59, 75, 79, 80, 84, 85, 88, 90, 94, 98, 102, 104, 109, 113, 116, 121, 123], "treatedli": 1, "next": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 23, 25, 27, 31, 35, 36, 37, 40, 42, 43, 44, 49, 50, 51, 53, 54, 56, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 82, 83, 84, 87, 88, 91, 95, 96, 97, 99, 100, 101, 102, 104, 106, 107, 110, 111, 112, 113, 115, 118], "elimin": [1, 4, 8, 14, 18, 21, 23, 26, 27, 30, 39, 44, 51, 69, 74, 84, 91, 96, 101, 105, 106, 113, 118, 122, 123, 124, 126], "proce": [1, 14, 18, 23, 29, 63, 87], "testedli": [1, 18], "sum": [1, 4, 6, 7, 11, 12, 13, 14, 18, 19, 20, 22, 41, 44, 50, 65, 71, 74, 75, 76, 77, 83, 89, 93, 94, 101, 104, 105, 106], "mai": [1, 2, 3, 7, 9, 10, 11, 13, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 36, 37, 38, 46, 47, 48, 56, 58, 59, 64, 67, 69, 70, 71, 73, 76, 77, 81, 82, 83, 86, 88, 91, 92, 93, 95, 97, 102, 103, 107, 108, 111, 113, 114, 117, 125, 126, 127, 128], "seem": [1, 2, 18, 20, 44, 47, 71, 77, 83, 84, 86, 87], "silli": [1, 18], "nice": [1, 14, 15, 18, 57, 123], "insight": [1, 5, 18, 65, 66, 83, 116, 117], "relationship": [1, 8, 18, 19, 24, 32, 33, 52, 61, 64, 101, 122], "recycl": [1, 18], "until": [1, 3, 5, 8, 14, 15, 18, 24, 44, 45, 46, 86, 89, 110, 118, 123], "enough": [1, 13, 14, 15, 18, 24, 123], "fill": [1, 2, 3, 7, 11, 15, 16, 18, 56, 66, 93, 112], "repeat": [1, 14, 15, 18, 57, 76, 115, 118], "repeatedli": [1, 4, 7, 11, 23, 24, 27, 36, 118], "transpos": [1, 3, 15, 18, 35, 68, 69, 88, 94, 125], "had": [1, 12, 16, 18, 40, 57, 83], "yield": [1, 5, 8, 9, 19, 21, 24, 25, 27, 33, 34, 35, 36, 37, 39, 40, 43, 44, 46, 49, 50, 51, 53, 54, 56, 64, 65, 66, 68, 73, 74, 77, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 93, 96, 97, 98, 100, 101, 102, 106, 107, 108, 109, 110, 117, 118, 119, 121], "wrap": [1, 13, 14, 16, 18, 60, 65, 76, 96, 99, 104, 124], "simplifi": [1, 4, 8, 16, 20, 23, 29, 30, 32, 34, 39, 40, 51, 53, 59, 61, 65, 67, 69, 80, 84, 87, 88, 106, 107, 112, 113, 120, 125], "enclos": [1, 13, 14, 15, 18, 34, 53, 66, 71, 73, 74, 82, 88, 99], "matrix": [1, 2, 8, 14, 15, 16, 18, 19, 29, 30, 32, 34, 41, 44, 56, 62, 68, 71, 74, 78, 82, 88, 90, 94, 99, 106, 125], "miss": [1, 13, 15, 18, 54, 58, 64, 96, 102, 106], "proper": [1, 13, 15, 18, 19, 25, 66, 67, 69, 78, 83, 84, 89, 92, 108], "ultim": [1, 4, 5, 9, 18, 21, 24, 30, 45, 54, 56, 61, 76, 77], "though": [1, 21, 34, 35, 45, 111], "might": [1, 4, 9, 13, 14, 16, 18, 19, 20, 23, 25, 34, 35, 41, 44, 52, 55, 59, 63, 64, 71, 82, 83, 88, 89, 97, 104, 106, 108, 111, 118, 122, 123], "imposs": [1, 18, 24], "count": [1, 4, 6, 7, 9, 11, 12, 13, 18, 29, 35, 44, 45, 46, 47, 56, 58, 65, 72, 73, 79, 91, 94, 97, 107, 112, 114, 116, 123], "stick": [1, 18], "exampl": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 27, 28, 31, 32, 33, 34, 36, 38, 41, 46, 47, 48, 51, 52, 54, 55, 57, 58, 59, 63, 64, 65, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 91, 92, 93, 94, 97, 101, 103, 105, 110, 111, 112, 114, 115, 118, 121, 123, 124, 126, 127, 128], "twice": [1, 7, 11, 15, 16, 18, 19, 47, 57, 62, 96], "must": [1, 2, 5, 7, 9, 11, 13, 14, 15, 16, 21, 22, 23, 24, 29, 30, 32, 35, 37, 40, 42, 49, 52, 55, 56, 60, 61, 62, 64, 66, 67, 68, 72, 86, 87, 95, 102, 108, 109, 110, 113, 118, 125], "cell": [1, 4, 7, 11, 13, 14, 15, 18, 34, 37], "ravel": [1, 2, 12, 13, 14, 15, 16, 18, 71, 109], "whatsoev": [1, 18], "tradit": [1, 15, 27, 29, 32, 37, 82, 110], "clever": [1, 2, 3, 7, 11, 14, 16, 26, 52, 98, 115, 122], "simplest": [1, 4, 15, 20, 72, 88], "show": [1, 7, 8, 13, 14, 18, 21, 29, 30, 39, 44, 49, 50, 63, 65, 66, 67, 79, 83, 84, 86, 87, 94, 95, 97, 98, 105, 106, 117, 119, 125], "flexibl": [1, 7, 18, 50, 54, 79, 109, 124], "reveal": [1, 25, 87, 101, 117], "thank": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "read": [1, 4, 10, 15, 23, 28, 37, 38, 42, 48, 49, 51, 53, 54, 58, 61, 62, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 97, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 118, 119, 121, 122, 124, 125, 126, 128], "explan": [1, 2, 5, 11, 12, 37, 54, 85], "dyalog": [1, 18, 84, 96, 109, 113], "github": [1, 2, 5, 11, 12, 13, 14, 15, 16, 17, 18, 106], "repositori": [1, 5], "discuss": [2, 5, 6, 7, 11, 24, 34, 37, 39, 54, 72, 75, 77, 78, 89, 97, 98, 111, 113, 125], "revolv": 2, "round": [2, 4, 8, 9, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 53, 56, 57, 63, 76, 103], "straightforward": [2, 3, 7, 8, 9, 13, 29, 31, 41, 43, 44, 45, 50, 61, 65, 67, 79, 83, 88, 93, 94, 99, 104, 106, 111], "highest": [2, 16, 19, 86], "lowest": [2, 16, 108], "explor": [2, 3, 4, 5, 6, 8, 10, 22, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 66, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128], "along": [2, 7, 11, 13, 14, 15, 16, 18, 19, 23, 24, 25, 27, 32, 33, 36, 39, 41, 44, 47, 56, 65, 69, 70, 80, 94, 96, 115, 117], "us": [2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 43, 47, 48, 49, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 70, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 109, 110, 112, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128], "reduct": [2, 9, 12, 13, 14, 15, 16, 18, 21, 22, 25, 26, 30, 32, 35, 39, 41, 44, 46, 47, 51, 52, 59, 64, 71, 73, 74, 87, 88, 89, 91, 105, 107, 109, 125], "found": [2, 14, 15, 29, 34, 37, 52, 67, 96, 100, 109, 118, 120], "minimum": [2, 16, 86, 107, 109], "numeric_rang": 2, "encapsul": [2, 25, 26, 35, 39, 42, 45, 50, 63, 67, 69, 71, 73, 90, 97, 106, 109, 110, 119, 124], "logic": [2, 5, 7, 9, 14, 25, 30, 32, 35, 37, 42, 46, 47, 50, 51, 54, 56, 62, 68, 69, 75, 76, 77, 86, 87, 97, 108, 116, 118, 119, 120], "within": [2, 8, 21, 23, 26, 32, 50, 52, 54, 62, 76, 77, 80, 82, 83, 94, 101, 109, 116, 117, 119, 120, 124], "comput": [2, 4, 7, 8, 11, 12, 14, 16, 18, 19, 24, 25, 29, 30, 31, 32, 35, 36, 41, 44, 46, 50, 61, 64, 65, 66, 67, 77, 80, 83, 89, 97, 101, 104, 108, 113, 119, 120, 127], "numeric_range_funct": 2, "With": [2, 12, 13, 29, 31, 34, 39, 49, 50, 60, 63, 66, 68, 74, 75, 90, 91, 98, 107, 112], "encount": [2, 4, 7, 11, 40, 41, 47, 52, 54, 59, 67, 79, 88, 106], "construct": [2, 7, 11, 15, 29, 46, 54, 55, 63, 65, 73, 82, 83, 98, 99, 107, 112, 124], "four": [2, 13, 15, 16, 18, 34, 44, 49, 53, 59, 68, 69, 73, 74, 82, 90, 123], "resolv": [2, 7, 11, 21, 40, 45, 80, 85, 108, 123], "critic": [2, 36, 41, 76, 126], "rais": [2, 7, 11, 15, 18, 19, 75, 111], "treat": [2, 30, 45, 49, 66, 73, 106, 116, 117, 119, 122], "represent": [2, 13, 14, 16, 17, 29, 59, 65, 66, 69, 77, 80, 83, 88, 91, 107, 111, 113, 122], "rectifi": [2, 69], "modifi": [2, 9, 12, 15, 24, 36, 42, 44, 51, 53, 66, 69, 72, 86, 96, 103], "examin": [2, 7, 11, 22, 23, 35, 40, 52, 64, 66, 68, 73, 79, 87, 99, 119], "addition": [2, 36, 50, 68, 96, 106, 115, 116], "emphas": [2, 97], "produc": [2, 7, 11, 15, 16, 18, 29, 32, 39, 40, 41, 47, 49, 52, 54, 61, 62, 65, 73, 82, 88, 89, 97, 104, 106, 118, 120, 121, 125], "opposit": [2, 15, 16, 18, 34, 35, 66, 72, 95], "length": [2, 4, 12, 15, 16, 18, 22, 27, 33, 34, 41, 43, 45, 49, 52, 57, 62, 64, 66, 67, 72, 76, 84, 89, 93, 96, 99, 101, 104, 105, 111, 119, 123, 124, 125], "guarante": [2, 106, 113], "sever": [2, 5, 6, 30, 33, 61, 77, 96, 99, 100, 109, 124], "achiev": [2, 3, 12, 13, 21, 23, 25, 27, 29, 31, 33, 34, 36, 39, 40, 41, 42, 46, 50, 52, 53, 55, 56, 59, 60, 64, 65, 66, 68, 69, 71, 72, 73, 75, 76, 78, 79, 80, 84, 85, 86, 88, 89, 91, 93, 94, 96, 99, 105, 106, 107, 109, 110, 111, 113, 115, 117, 119, 120, 124, 125], "effici": [2, 4, 5, 6, 9, 15, 16, 18, 19, 23, 24, 25, 29, 30, 32, 33, 35, 37, 42, 45, 46, 47, 50, 51, 55, 61, 63, 64, 68, 69, 71, 74, 75, 80, 82, 84, 90, 91, 93, 94, 97, 98, 99, 104, 106, 108, 109, 113, 115, 116, 120, 122], "sort": [2, 16, 18, 23, 30, 33, 36, 43, 65, 78, 118, 119, 125, 126], "access": [2, 13, 15, 18, 45, 61, 96, 112], "last": [2, 6, 8, 9, 12, 13, 14, 16, 19, 22, 23, 25, 26, 27, 33, 40, 41, 52, 63, 66, 67, 69, 74, 84, 87, 88, 94, 96, 104, 111, 123], "append": [2, 9, 13, 16, 27, 52, 74, 89, 111], "condition": [2, 26, 84, 96], "complex": [2, 10, 15, 20, 21, 24, 28, 35, 38, 40, 48, 50, 53, 54, 58, 67, 68, 70, 71, 81, 82, 83, 92, 99, 103, 107, 108, 109, 114, 116, 126, 127, 128], "flatten": [2, 14, 15, 16, 31, 45, 65, 66, 71, 74, 88, 111, 113], "help": [2, 3, 6, 7, 11, 14, 15, 23, 33, 35, 37, 41, 45, 46, 47, 49, 54, 68, 69, 74, 78, 80, 82, 85, 88, 89, 91, 96, 97, 99, 107, 110, 120, 122, 124, 125], "prevent": [2, 13, 24, 109, 119], "aris": [2, 24, 45, 68, 69, 87], "nest": [2, 5, 14, 16, 18, 37, 41, 46, 67, 71, 73, 74, 97, 99, 107, 111, 119, 123, 124], "leverag": [2, 3, 5, 7, 10, 14, 20, 28, 34, 36, 37, 38, 40, 48, 51, 55, 58, 61, 64, 65, 69, 70, 77, 78, 81, 89, 91, 92, 96, 97, 103, 108, 114, 126, 127, 128], "potenti": [2, 8, 14, 23, 74, 75, 77, 86, 89, 100, 105, 107, 113, 118, 122, 125], "consist": [2, 4, 10, 14, 16, 22, 24, 28, 29, 36, 38, 43, 44, 48, 51, 58, 59, 60, 66, 67, 69, 70, 77, 81, 82, 84, 92, 95, 97, 100, 102, 103, 114, 119, 120, 121, 122, 126, 128], "tackl": [2, 8, 21, 24, 31, 42, 61, 77, 79, 89, 109, 124], "divers": [2, 109], "join": [2, 5, 6, 8, 21, 24, 26, 31, 36, 45, 59, 123], "forward": [2, 8, 13], "week": [2, 7, 9, 11, 13, 16], "world": [2, 9, 23, 26, 47, 65, 73, 115], "studi": 2, "refer": [2, 7, 11, 13, 14, 18, 22, 30, 37, 41, 47, 51, 52, 57, 63, 64, 68, 72, 73, 74, 78, 79, 80, 91, 94, 95, 98, 101, 102, 107, 111, 113], "avail": [2, 7, 11, 13, 16, 19, 36, 47, 59, 61, 77, 111], "n": [3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 19, 20, 25, 27, 29, 33, 35, 37, 72, 79, 80, 83, 84, 111, 119, 121], "plenti": 3, "accomplish": [3, 7, 11, 36, 40, 44, 47, 51, 60, 91, 94, 108, 110, 124], "dive": [3, 26, 39, 42, 93, 112, 122, 127], "seriou": [3, 15], "afterward": [3, 36], "dimens": [3, 15, 18, 41, 44, 47, 62, 65, 73, 119], "calcul": [2, 3, 4, 5, 6, 8, 15, 19, 22, 23, 24, 25, 29, 35, 39, 44, 53, 56, 64, 65, 68, 77, 87, 89, 91, 94, 97, 105, 116, 121, 122], "index": [3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 18, 23, 30, 33, 34, 37, 57, 59, 68, 77, 80, 82, 83, 84, 85, 103, 109, 115, 117, 127], "follow": [3, 5, 6, 7, 8, 9, 11, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 74, 75, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 125], "identitymatrix": 3, "directli": [3, 9, 16, 27, 30, 31, 35, 37, 41, 42, 43, 45, 47, 55, 57, 59, 60, 61, 64, 69, 74, 75, 80, 87, 91, 96, 99, 105, 107, 112, 113, 120], "dimension": [3, 15, 16, 19, 39, 41, 44, 53, 71, 73, 75, 90, 105], "diagon": [3, 15, 18, 22, 47, 74, 101, 112], "assign": [3, 14, 15, 40, 42, 53, 68, 69, 80, 108, 115], "verbos": [3, 15], "matric": [3, 14, 35, 37, 44, 88, 94], "strategi": [3, 4, 25, 26, 42, 79, 124], "rearrang": [3, 20, 31, 37, 42, 62, 69, 71, 85], "obtain": [3, 5, 7, 8, 11, 15, 30, 35, 36, 43, 45, 47, 49, 53, 63, 66, 68, 75, 77, 80, 88, 89, 94, 96, 100, 101, 102, 106], "tacit": [3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 44, 50], "twist": [3, 102, 126], "indirectli": 3, "behav": [3, 73, 96, 109], "uniqu": [3, 15, 29, 30, 31, 37, 46, 48, 62, 64, 65, 69, 79, 88, 94, 106, 108, 112, 114, 123, 127], "assess": [3, 5, 36, 64, 87, 95, 108, 122], "12": [3, 15, 18, 20, 39, 53, 55, 61, 65, 68, 69, 74, 75, 83, 88, 98, 104, 106, 110], "0j1": [3, 15, 20, 22], "\u03c0": [3, 15], "arg": [3, 15, 19], "ai": [3, 15], "mod": [3, 15, 96], "throughout": [3, 5, 71, 118], "uncov": 3, "classic": [3, 5, 7, 11, 14, 37, 52], "adopt": [3, 29, 37], "trick": [3, 14, 15, 35, 123], "feel": [3, 45, 71, 76, 99, 108, 125], "free": [3, 15, 44, 45, 71, 76, 84, 99, 108, 125], "choos": [3, 7, 11, 15, 16, 18, 40, 61, 88, 104, 127], "whichev": [3, 7, 11], "practic": [3, 18, 37, 65, 90, 111, 122], "purpos": [3, 6, 36, 59, 68, 82, 86], "watch": [3, 5, 9, 12, 13, 14, 15, 18, 19, 20, 29, 34, 35, 39, 40, 41, 42, 43, 44, 47, 57, 60, 63, 78, 87, 95, 99, 113, 120, 123, 124], "hi": [4, 16, 31], "ninth": [4, 33], "year": [4, 8, 10, 28, 38, 48, 58, 69, 70, 81, 92, 103, 114, 126, 127], "worth": [4, 12, 54, 99], "obviou": [4, 13, 18], "suppos": [4, 7, 11, 16, 19, 22, 41, 57, 78, 109], "sale": [4, 25, 28], "group": [4, 9, 13, 15, 18, 35, 37, 50, 69, 75, 79, 80, 111, 119], "window": [4, 13, 25, 33, 35, 52, 59, 73, 91, 114, 119, 120], "goal": [4, 5, 8, 10, 25, 28, 30, 35, 37, 38, 40, 42, 46, 48, 50, 52, 53, 58, 62, 64, 66, 70, 74, 77, 81, 84, 85, 86, 88, 92, 97, 100, 103, 106, 107, 108, 109, 111, 112, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128], "idiomat": 4, "divid": [4, 6, 12, 15, 16, 18, 20, 22, 24, 25, 30, 39, 44, 53, 55, 63, 68, 71, 75, 79, 82, 93, 95, 98, 100, 101, 104, 107, 121], "avgsal": 4, "naiv": [4, 21, 89, 118], "move": [10, 13, 14, 15, 16, 22, 24, 29, 72, 74, 76, 81, 86, 94, 110, 122], "month": [4, 69], "naiveavg": 4, "although": [4, 5, 7, 11, 20, 24, 35, 42, 55, 66, 75, 77, 80, 83, 87, 95], "improvedavg": 4, "tacitavg": 4, "vari": [4, 6, 9, 32, 61, 64, 82, 99, 107, 108, 111], "properli": [4, 37, 50, 67, 69, 91, 98], "edg": [4, 16, 32, 59, 64, 89], "exce": [4, 30, 59, 65, 87, 99, 100, 123], "greater": [4, 6, 12, 14, 27, 35, 53, 54, 59, 68, 82, 87, 89, 96, 97, 107, 122], "twelv": 4, "instanc": [4, 5, 23, 25, 34, 40, 41, 49, 52, 63, 65, 71, 73, 75, 76, 77, 78, 80, 82, 84, 85, 86, 91, 94, 95, 97, 100, 102, 104, 107, 108, 113, 116, 117, 118], "thirteen": 4, "fourteen": 4, "clampedavg": 4, "prefer": [4, 7, 11, 40, 47, 72, 83, 111], "dynam": [4, 59, 73], "adjust": [4, 7, 11, 21, 25, 34, 35, 37, 44, 59, 63, 68, 69, 72, 89, 106, 108, 116, 119, 123, 124], "univers": [4, 36], "generalizedavg": 4, "involv": [4, 9, 24, 25, 27, 29, 30, 32, 33, 47, 52, 54, 62, 63, 64, 66, 67, 71, 73, 74, 76, 77, 79, 82, 83, 86, 88, 89, 90, 93, 95, 99, 100, 104, 107, 109, 111, 113, 116, 119, 121, 122, 124, 125], "scenario": [4, 21, 26, 36, 41, 54, 66, 74, 77, 107, 125], "due": [4, 6, 20, 21, 40, 47, 69, 95, 99, 107, 119], "errorhandledavg": 4, "explicit": [4, 6, 16, 42, 56, 74, 84, 124], "assert": [4, 21], "safeavg": 4, "relianc": 4, "mainten": 4, "essenti": [4, 25, 36, 41, 61, 63, 68, 69, 73, 74, 76, 77, 78, 80, 91, 99, 106, 116, 124], "situat": [4, 73, 83], "shapepreservingavg": 4, "accur": [4, 20, 46, 68, 69, 80, 83, 90, 104, 108, 122, 124, 125], "intend": [4, 9, 80, 117], "articl": [4, 34, 37, 39, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125], "refin": [4, 21, 25, 46, 54, 76, 124], "happi": [4, 32, 59, 69, 115, 127], "fourth": [5, 14, 26, 33, 37, 69, 90, 125], "session": [5, 66], "open": [5, 14, 16, 47, 67], "vice": [5, 35, 77, 91], "versa": [5, 35, 77, 91], "aren": [5, 14, 106], "unclos": 5, "data": [5, 6, 12, 13, 14, 15, 16, 17, 18, 29, 36, 41, 42, 49, 53, 56, 59, 64, 65, 72, 74, 82, 89, 96, 97, 98, 106, 112, 120, 124, 125], "depth": [5, 14, 15, 18, 37], "term": [5, 10, 16, 18, 20, 28, 35, 38, 44, 48, 56, 58, 63, 68, 70, 81, 86, 92, 93, 103, 114, 126, 127, 128], "map": [5, 7, 11, 14, 15, 18, 37, 40, 53, 55, 62, 65, 74, 78, 89, 91, 94, 109, 112], "decreas": [5, 14, 19, 25, 97, 110], "affect": [5, 14, 30, 52, 76, 77, 88], "track": [5, 24, 26, 30, 42, 54, 64, 68, 118, 123], "parenthesis_depth_chang": 5, "techniqu": [5, 18, 26, 31, 40, 41, 51, 64, 65, 69, 73, 79, 80, 86, 88, 89, 91, 106, 107, 117, 118, 119, 122, 125, 127], "di": [5, 14], "variat": [5, 6, 12, 19, 95, 125], "enhanc": [5, 24, 37, 42, 46, 61, 93, 107, 112, 120, 124], "capabl": [5, 8, 21, 44, 61, 74, 88, 97, 108, 115], "df": [5, 14], "sourc": [5, 14], "snippet": [5, 36, 61, 88, 107], "turtl": [5, 14, 79], "joi": [5, 14, 127], "languag": [5, 9, 13, 14, 50, 53, 65, 71, 82, 83, 85, 88, 96, 97, 108, 112, 119, 124, 127], "unbalanc": [5, 14], "respect": [5, 14, 19, 37, 40, 42, 44, 49, 60, 79, 83, 86, 95, 105, 110], "reshap": [5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 33, 41, 45, 56, 67, 72, 89, 104, 111, 119, 120], "conduct": [5, 6, 23, 27, 67, 97, 108], "thorough": 5, "programmat": 5, "cmpx": [5, 6, 9, 12, 13, 14, 21, 23, 24, 25, 26, 27, 29, 30, 33, 35, 36, 37, 64, 74, 97, 107, 111, 112], "fastest": [5, 14, 15, 36, 80, 89, 108, 111], "under": [5, 14, 15, 19, 31, 49, 100], "100": [5, 6, 12, 14, 20, 24, 25, 30, 75, 90, 93, 99, 105, 111], "vr": [5, 14], "establish": [5, 36, 37, 55, 61, 78, 80, 98, 121], "fulfil": [5, 12, 37, 100], "At": [5, 15, 18, 44, 51, 60, 88, 122], "below": [5, 9, 14, 24, 30, 33, 60, 68, 78, 94, 98, 107, 108, 120], "ba": [5, 14], "bn": [5, 14], "robust": [5, 23, 26, 36, 91, 104, 109], "focus": [5, 9, 25, 27, 30, 32, 46, 49, 62, 63, 67, 82, 88, 95, 99, 117, 119, 122, 127], "methodologi": [5, 67, 108, 117, 125], "valid": [5, 16, 18, 23, 30, 83, 86, 87, 90, 91, 94, 100, 101, 121], "offer": [5, 54, 56, 61, 65, 66, 98, 117, 119, 127], "experi": [5, 10, 49, 119, 127], "perl": [5, 9, 13], "modern": 5, "featur": [5, 14, 31, 39], "replac": [5, 7, 11, 12, 14, 15, 18, 34, 37, 50, 54, 56, 105, 107, 111, 115, 120], "overhead": [5, 6, 32, 64, 89, 107], "regex": [5, 9, 13, 14, 21, 26, 54, 111], "less": [5, 13, 14, 27, 29, 30, 34, 35, 42, 44, 46, 64, 67, 82, 87, 89, 96, 97, 107, 118, 124], "pure": [5, 51], "develop": [5, 23, 50, 53, 64, 69, 89, 111, 127], "relev": [5, 15, 67, 69, 122, 123, 125], "re0": [5, 14], "plain": [5, 14], "text": [5, 8, 9, 13, 14, 20, 23, 48, 55, 71, 93, 101, 120, 121], "escap": [5, 14, 54], "fi": [5, 14], "humor": 5, "yet": [5, 14, 15, 40, 52, 55, 76, 115, 118, 120, 124], "built": [5, 13, 42, 44, 59, 75, 124], "dure": [5, 7, 11, 15, 36, 41, 44, 49, 62, 66, 76, 89, 102, 119, 122], "deliber": 5, "mismatch": [5, 62, 67, 87], "invok": [5, 118], "report": 5, "nd": [5, 14], "np": [5, 14], "execut": [5, 6, 12, 14, 26, 30, 36, 37, 40, 41, 44, 53, 62, 74, 75, 86, 89, 97, 99, 106, 107, 108, 111, 112, 117, 119], "except": [5, 16, 21, 42, 96, 113], "pars": [5, 7, 9, 11, 12, 13, 14, 87], "gain": [5, 21, 65, 83, 117], "consider": [5, 36, 71, 73, 107, 112], "elegantli": [5, 21, 29, 34, 125], "manag": [5, 32, 37, 56, 59, 69, 73, 83, 91, 107, 115], "statement": [5, 10, 14, 15, 16, 28, 34, 38, 40, 48, 58, 67, 70, 81, 92, 103, 114, 126, 127, 128], "phase": [6, 7, 11, 12, 15, 18], "point": [6, 8, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 35, 44, 60, 68, 71, 77, 79, 82, 84, 86, 88, 89, 99, 113], "peopl": [6, 12, 18], "score": [6, 12], "65": [6, 12, 23, 78], "higher": [6, 12, 16, 19, 65, 72, 91, 98, 105, 123, 125], "random": [6, 9, 12, 13, 15, 25, 33, 34, 35, 36, 59, 65, 74, 99, 103, 107, 108], "total": [6, 12, 13, 14, 15, 18, 24, 36, 45, 48, 65, 67, 68, 74, 75, 77, 93, 102, 104, 105, 122, 123, 124, 125], "individu": [6, 7, 9, 11, 13, 21, 41, 43, 49, 73, 82, 87, 88, 99, 116, 117, 119, 120, 122, 127], "succeed": [6, 12], "success": [6, 9, 13, 24, 110], "failur": [6, 86], "fraction": [6, 12, 25, 30, 55, 62], "expect": [6, 13, 16, 29, 33, 34, 35, 37, 39, 52, 59, 67, 72, 89, 99, 101, 107, 109, 112], "These": [6, 8, 14, 41, 44, 56, 59, 61, 78, 82, 100, 122], "slightli": [6, 24, 36, 42, 56], "import": [6, 8, 9, 12, 13, 14, 16, 23, 25, 35, 36, 47, 69, 71, 73, 76, 79, 82, 85, 88, 96, 105, 106, 112, 116], "mathemat": [6, 7, 8, 11, 12, 14, 15, 24, 41, 53, 55, 62, 64, 65, 71, 77, 82, 83, 89, 91, 93, 101, 116, 121, 127], "significantli": [6, 9, 25, 32, 37, 71, 74, 108, 112, 119], "impact": [6, 107], "comparison": [6, 12, 13, 14, 15, 17, 18, 32, 42, 49, 50, 52, 75, 82, 87, 97, 98, 105, 107, 118, 124], "dataset": [6, 36, 46, 50, 64, 66, 67, 97, 107, 108, 117], "1e6": [6, 9, 12, 13, 97, 111], "million": [6, 12, 13, 14, 97, 107, 111], "cy": [6, 9, 12, 13, 14, 21, 24, 25, 27, 29, 33, 35, 36, 64, 74, 97, 111], "load": 6, "custom": [6, 18, 41, 46, 54, 75], "6e": [6, 12, 37, 97, 111], "4e": [6, 12, 25], "3451": [6, 12], "8e": [6, 12, 29, 36, 37], "4126": [6, 12], "workload": 6, "similar": [6, 14, 15, 23, 24, 25, 36, 37, 43, 47, 57, 65, 84, 88, 89, 99, 105, 119, 120, 122], "high": [6, 31, 37, 45, 57, 82, 127], "least": [6, 12, 14, 16, 24, 32, 73, 106, 107, 116, 118], "amount": [6, 12, 41], "done": [6, 13, 14, 15, 18, 62, 67, 68, 85, 96, 120], "fridai": [6, 66], "assum": [6, 75, 99, 105, 119, 125], "wouldn": [6, 16, 23], "remov": [6, 9, 12, 13, 14, 15, 16, 18, 21, 23, 26, 30, 36, 44, 45, 46, 47, 50, 66, 68, 74, 79, 84, 99, 100, 113, 122, 123], "interv": [6, 12, 23, 35, 80, 82], "cutoff": [6, 12, 78, 116, 123], "highlight": [6, 18, 21, 24, 33, 77, 80, 105, 107, 121], "episod": [3, 6, 7, 8, 11, 12, 15], "past": [7, 11, 36], "concept": [11, 12, 13, 14, 15, 16, 17, 18, 32, 39, 64, 65, 77, 83, 84, 91, 94, 121], "adjac": [9, 13, 21, 26, 27, 54, 59, 64, 74, 91, 97, 107, 118], "manipul": [8, 10, 21, 28, 29, 33, 38, 48, 54, 55, 58, 59, 61, 64, 70, 75, 79, 81, 91, 92, 93, 101, 103, 109, 112, 114, 116, 119, 120, 122, 125, 126, 127, 128], "offset": [7, 11, 13, 15, 80, 89, 124], "subtract": [7, 11, 14, 15, 16, 17, 19, 35, 53, 57, 74, 77, 89, 97, 102, 106, 107, 122], "io": [7, 8, 11, 12, 15, 18], "cumul": [7, 11, 14, 15, 18, 49, 54, 89], "altern": [7, 9, 11, 14, 18, 20, 22, 29, 32, 33, 37, 40, 42, 52, 57, 66, 67, 77, 93, 96, 98], "As": [7, 11, 13, 14, 19, 24, 36, 52, 54, 64, 68, 74, 77, 104, 107, 110, 124], "scientist": [7, 11], "mathematician": [7, 11], "upsid": 45, "downsid": [], "your": [7, 10, 11, 12, 16, 28, 38, 48, 49, 50, 53, 55, 58, 66, 70, 74, 78, 81, 85, 88, 89, 92, 99, 103, 108, 111, 112, 114, 126, 127, 128], "context": [24, 42, 43, 50, 53, 59, 72, 78, 87, 90, 96, 107, 120], "miscommun": [], "share": [7, 11, 16, 107, 108], "account": [9, 13, 21, 34, 54, 68, 80, 89, 104, 106, 107, 108, 109, 115, 124, 125], "framework": [7, 11, 19, 61], "switch": [7, 11, 14, 16, 35, 42, 74, 84, 91, 96, 112, 119], "flip": [13, 14, 17, 54, 65, 82, 84, 85, 94, 109, 112, 117, 119, 126], "oddnumb": [], "regardless": [7, 102], "pariti": [7, 11, 54, 95], "cancel": [22, 49], "lead": [9, 13, 15, 19, 20, 21, 22, 25, 26, 27, 29, 35, 42, 44, 46, 49, 50, 54, 65, 66, 68, 71, 77, 82, 83, 84, 89, 98, 106, 110, 113, 118, 120, 122, 123, 125], "scan": [7, 11, 12, 14, 15, 18, 27, 54, 64, 123], "relat": [7, 11, 24, 25, 40, 67, 69, 78, 87, 105], "immun": 7, "revert": 84, "formul": [7, 11, 37, 40, 55, 106], "fork": [7, 11, 12, 14, 16, 18, 67, 82, 84, 124], "talli": [7, 9, 11, 12, 13, 14, 15, 16, 18, 43, 44, 47, 72, 75], "hope": [42, 54, 61, 78, 85, 89, 99, 102, 110, 112], "enjoi": 14, "nuanc": [73, 122], "further": [9, 14, 16, 18, 37, 39, 42, 43, 45, 46, 49, 54, 60, 61, 65, 71, 72, 74, 76, 77, 83, 88, 91, 99, 105, 107, 112, 122, 124, 125], "elabor": [], "hand": [15, 31, 34, 41, 63, 75, 101], "learn": [10, 14, 23, 28, 37, 38, 48, 58, 70, 81, 92, 103, 114, 126, 127, 128], "object": [8, 20, 26, 47, 66, 88, 102, 117, 119], "variabl": [8, 12, 13, 27, 40, 56, 59, 68, 69, 80, 82], "4x": 8, "1y": 8, "1z": 8, "2x": 8, "2y": 8, "2z": 8, "6x": 8, "3y": 8, "solut": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 28, 31, 32, 33, 35, 36, 38, 39, 41, 42, 46, 48, 50, 54, 57, 58, 61, 63, 66, 67, 70, 73, 76, 77, 81, 85, 87, 88, 89, 92, 94, 96, 97, 99, 103, 106, 108, 112, 114, 120, 124, 126, 128], "z": [8, 22, 51, 115], "verifi": [8, 9, 13, 22, 51, 62, 69, 83, 91, 94, 95], "substitut": [8, 20, 40, 44, 55, 96, 101, 121], "inde": [8, 12, 15, 22, 34, 83, 87, 95], "outcom": [8, 22, 25, 50, 56, 85, 88, 125], "priori": 8, "cdot": [8, 20, 71, 101], "coeffici": [8, 27, 29], "satisfi": [8, 62, 87], "command": [8, 59, 62, 68, 91], "eleg": [8, 10, 28, 34, 38, 46, 48, 52, 53, 58, 61, 70, 77, 81, 85, 92, 101, 103, 108, 114, 120, 126, 128], "approxim": [8, 14, 20, 27, 29, 69], "invers": [8, 15, 18, 19, 22, 87, 91, 109], "One": [7, 8, 11, 13, 16, 23, 24, 25, 27, 29, 35, 46, 50, 52, 55, 57, 68, 69, 77, 110, 114], "hotel": [8, 117], "bodewig": 8, "scheme": [8, 114], "v_": 8, "v_n": 8, "2i": [8, 15], "ident": [7, 8, 10, 11, 12, 14, 16, 18, 20, 27, 31, 50, 53, 61, 86, 91, 94, 107], "v\u1d62": 8, "\u2081": 8, "2v\u1d62": 8, "estim": 8, "stabl": [8, 45], "notat": [7, 8, 11, 12, 44, 55, 56, 71], "11": [8, 32, 39, 53, 63, 65, 87, 88, 100, 116], "aspect": [8, 10, 23, 28, 31, 36, 38, 48, 58, 70, 80, 81, 92, 102, 103, 114, 126, 128], "recent": [8, 89], "propos": [8, 9, 20], "solemani": 8, "suggest": [8, 29, 77, 79], "frac": [8, 20, 30, 55, 71, 93, 101, 121], "trace": 8, "mm\u1d40": 8, "systemat": [8, 59, 78, 84, 86, 88], "procedur": [8, 16, 34, 66, 117], "toward": [8, 10, 28, 38, 48, 58, 70, 81, 92, 103, 112, 114, 124, 126, 128], "gauss": [8, 81], "jordan": 8, "gaussjordan": 8, "ml": 8, "elim": 8, "col": 8, "p": [8, 18, 23, 26, 27, 44, 54, 71, 74, 97, 109, 116, 117, 124], "pivot": 8, "th": 8, "pth": 8, "mat": 8, "diag": 8, "red": 8, "conclud": [7, 8, 11, 33, 40, 41, 67, 87], "2014": [8, 19, 20, 21, 22, 23, 24, 25, 26], "upcom": 8, "titl": [9, 10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "space": [9, 13, 14, 15, 19, 21, 28, 29, 35, 36, 38, 44, 52, 54, 59, 64, 65, 68, 99, 112], "delimit": [9, 13, 48, 120], "trail": [9, 13, 26, 37, 38, 68, 69, 88, 97, 111, 122], "dash": [9, 13], "split": [9, 13, 15, 16, 21, 26, 68, 70, 80, 82, 84, 88, 92, 111, 114], "letter": [9, 13, 21, 23, 34, 37, 39, 40, 42, 47, 60, 68, 72, 75, 79, 83, 93, 95, 99, 115, 124], "sequenc": [7, 9, 13, 33, 40, 67, 68, 89, 91, 106, 107, 108, 111, 118], "string": [9, 13, 14, 16, 21, 36, 43, 51, 52, 54, 60, 78, 82, 109, 111, 115, 120, 123], "partit": [9, 13, 21, 33, 35, 40, 68, 82, 107, 109, 117, 120, 123, 126], "extract": [9, 46, 52, 69, 74, 77, 84, 122, 124], "snag": 9, "fortun": 9, "come": [9, 13, 18, 21, 24, 36, 43, 79, 85, 111, 127], "background": [9, 10, 13, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "search": [9, 13, 14, 40], "invert": [9, 13, 96], "class": [9, 13, 61], "occurr": [9, 30, 35, 37, 46, 47, 50, 54, 65, 75, 106, 108, 116, 123, 125], "vfi": [9, 13], "extran": [9, 13], "metadata": 9, "process": [9, 14, 16, 27, 29, 30, 36, 37, 42, 45, 46, 47, 50, 52, 54, 59, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 76, 78, 82, 83, 84, 86, 88, 91, 93, 97, 100, 101, 104, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 121, 122, 125], "extra": [9, 40, 53, 80, 86, 89, 99, 111, 123], "analyz": [9, 13, 26, 32, 43, 50, 67, 75, 77, 87, 96, 98, 106, 107, 111, 118, 119, 122, 124, 125], "pairwis": [9, 13, 25, 35, 118], "insert": [9, 13, 15, 16, 18, 30, 40, 44, 52, 80, 86, 87, 106, 107], "artifici": 9, "avoid": [9, 13, 15, 16, 23, 27, 32, 33, 34, 35, 37, 41, 50, 74, 75, 88, 110, 112, 113], "unnecessari": [9, 16, 19, 23, 35, 60, 64, 74, 88, 89, 119, 123], "maxim": [9, 12], "particularli": [7, 9, 11, 21, 29, 35, 59, 61, 62, 71, 75, 82, 91, 96, 127], "focu": [7, 9, 11, 25, 31, 35, 36, 37, 42, 59, 62, 66, 67, 69, 77, 89, 91, 97, 105, 116, 117, 125], "prepend": [9, 13, 15, 40, 64, 79, 111], "cheaper": 9, "compil": 9, "shown": [9, 24, 46, 47, 66, 68, 93, 107, 120], "abc": [9, 13, 80, 115], "substr": [9, 124], "engin": [9, 13, 14], "tend": [9, 111], "costli": 9, "faster": [9, 14, 20, 24, 26, 37, 41, 64, 108], "confirm": [9, 16, 20, 51, 54, 62, 73, 83, 86, 87, 90, 91, 94, 101, 107], "especi": [9, 13, 23, 25, 37, 39], "challeng": [10, 18, 21, 24, 27, 28, 29, 32, 34, 38, 45, 48, 49, 58, 61, 68, 69, 70, 81, 87, 92, 96, 103, 108, 114, 124, 126, 127, 128], "skill": [10, 21, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 127, 128], "push": [10, 28, 38, 48, 58, 66, 70, 81, 92, 103, 114, 126, 128], "orient": [10, 21, 24, 28, 38, 48, 58, 70, 74, 81, 92, 103, 114, 126, 127, 128], "height": [10, 28, 38, 48, 58, 64, 70, 81, 92, 103, 112, 114, 126, 128], "design": [7, 10, 28, 38, 42, 48, 58, 70, 77, 81, 91, 92, 103, 114, 126, 127, 128], "algorithm": [10, 28, 38, 48, 58, 64, 70, 75, 81, 92, 103, 107, 114, 126, 127, 128], "puzzl": [10, 28, 38, 48, 58, 70, 77, 81, 92, 103, 114, 126, 128], "comprehens": [10, 28, 38, 48, 58, 67, 70, 81, 92, 103, 114, 126, 128], "workout": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "muscl": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "quick": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "seemsa": 10, "me": [10, 15, 21, 59], "aplquest": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126], "brief": [10, 28, 29, 38, 48, 58, 68, 70, 81, 92, 103, 114, 126], "descript": [10, 28, 37, 38, 48, 58, 66, 70, 74, 81, 89, 92, 98, 99, 103, 111, 114, 125, 126], "grade": [10, 16, 18, 33, 36, 62, 81], "ina": 10, "word": [10, 21, 26, 32, 33, 36, 43, 52, 86, 99], "balanc": [7, 10, 64, 67], "crisi": 10, "home": 10, "rang": [10, 18, 29, 69, 75, 80, 83, 104, 108, 112, 127], "float": [10, 15, 16, 18, 20], "boat": 10, "forth": [10, 18, 34, 83], "isa": 10, "salvat": 10, "click": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "navig": [10, 28, 38, 48, 52, 58, 70, 81, 92, 103, 114, 126, 127, 128], "menu": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "page": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 127, 128], "necessari": [10, 28, 33, 37, 38, 47, 48, 54, 55, 58, 59, 70, 71, 80, 81, 82, 87, 89, 92, 94, 99, 103, 104, 107, 108, 114, 116, 119, 125, 126, 128], "hint": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 127, 128], "guid": [10, 28, 38, 42, 48, 58, 70, 78, 80, 81, 89, 92, 103, 110, 112, 114, 126, 127, 128], "primit": [10, 19, 28, 38, 48, 58, 60, 70, 81, 84, 92, 96, 103, 114, 124, 126, 128], "strive": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "carefulli": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "simpler": [10, 15, 18, 28, 38, 48, 58, 65, 70, 77, 81, 92, 103, 111, 114, 126, 128], "build": [7, 10, 11, 18, 27, 28, 29, 33, 38, 48, 58, 70, 81, 92, 103, 114, 115, 119, 126, 128], "momentum": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "hesit": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "revisit": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "document": [10, 13, 28, 37, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "inspir": [10, 28, 38, 48, 58, 70, 81, 92, 103, 112, 114, 126, 128], "often": [10, 13, 21, 28, 29, 31, 37, 38, 40, 48, 50, 58, 59, 61, 70, 77, 81, 83, 92, 103, 106, 114, 126, 128], "luck": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "ever": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 127, 128], "favor": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "mj4wylkrbho": [7, 11], "com": [11, 12, 13, 14, 15, 16, 17, 18, 106], "blob": [11, 12, 13, 14, 15, 16, 17, 18, 106], "natur": [7, 11, 18, 22, 23, 24, 64, 69, 77, 107, 119], "etc": [7, 11, 18, 27], "preserv": [7, 11, 16, 21, 45, 123], "abov": [7, 11, 12, 14, 16, 25, 33, 47, 62, 64, 69, 73, 76, 101, 102, 113], "modulu": [7, 11, 17, 80, 100, 116], "comment": [11, 12, 14, 15, 16, 17, 18, 108], "overtak": [7, 11, 15, 16, 18], "pad": [7, 11, 15, 16, 19, 29, 35, 59, 99, 102, 123], "ex": [7, 11, 15], "item": [7, 11, 13, 16, 41, 47, 68, 73, 88, 96], "glyph": [11, 12, 13, 14, 15, 16, 17, 18], "describ": [7, 11, 69, 88, 89, 117], "modul": [7, 11], "summari": [11, 22, 33, 34, 53, 54, 64, 78, 91, 93, 116, 120, 122, 124], "inaugur": [7, 11], "ten": [7, 11, 15, 60, 83], "genter": 11, "consecut": [7, 11, 25, 35, 40, 52, 62, 64, 67, 113, 118], "option": [7, 11, 12, 13, 20, 64, 80, 84], "advantag": [7, 11, 41, 88, 91, 105, 119], "disadvantag": [7, 11], "benefit": [7, 11, 13, 23, 107], "person": [7, 11, 15], "yourself": [7, 11], "incorrect": [7, 11, 88, 96], "request": [7, 11, 59], "content": [7, 11, 54, 62], "locat": [7, 11, 15, 26, 40, 77, 85, 94, 97, 107, 109, 124], "longer": [7, 11, 19, 22, 29, 32], "mere": [7, 11, 32, 60, 68, 72, 88], "wish": [7, 11, 23], "o": [7, 11, 14, 18, 37, 47, 73, 113], "fantast": [7, 11, 31], "idea": [7, 11, 74, 88, 106, 115], "benefici": [7, 11], "occur": [7, 11, 13, 19, 32, 34, 46, 62, 66, 99, 116, 120, 123], "underbar": [7, 11, 15], "counterbalanc": [7, 11], "similarli": [7, 11, 14, 16, 32, 104, 107, 109, 113, 123], "still": [7, 11, 13, 14, 15, 16, 24, 29, 32, 34, 40, 44, 66, 68, 72, 76, 86], "correctli": [7, 11, 13, 24, 26, 41, 46, 54, 60, 62, 64, 75, 79, 80, 82, 88, 94, 96, 108], "emploi": [7, 11, 25, 29, 42, 50, 61, 64, 66, 69, 71, 74, 77, 79, 80, 85, 87, 89, 91, 108, 117, 122], "manner": [7, 11, 14, 15, 21, 34, 62, 65, 80, 113], "fascin": [7, 11, 52, 65, 116, 127], "overtaken": [7, 11], "appropri": [7, 11, 25, 29, 59, 73, 76, 79, 80, 88, 89, 113, 124], "did": [7, 11, 12, 14, 15, 18, 31], "influenc": [7, 11, 19, 31, 122], "began": [7, 11], "view": [7, 11, 25, 80, 111, 113, 124], "whatev": [7, 11, 13], "global": [7, 11], "current": [7, 11, 14, 16, 19, 20, 27, 34, 37, 54, 64, 118], "demonstr": [7, 11, 18, 21, 24, 34, 37, 46, 50, 51, 54, 59, 75, 79, 83, 85, 86, 88, 91, 93, 99, 107, 112, 115, 120, 122, 124], "tie": [7, 11, 15], "major": [7, 11, 13, 14, 15, 18, 34, 37], "symbol": [7, 11, 40, 44, 45, 50, 52, 73, 80, 82, 121], "percent": 12, "pass": [12, 14, 16, 27, 69, 73, 96, 111, 119], "pxo2btomxp4": 12, "scaler": [12, 13, 14, 15, 18], "fals": [12, 14, 16, 22, 35, 42, 49, 51, 98, 105, 122], "percentag": 12, "mathmat": 12, "siginific": 12, "penalti": 12, "evalut": [12, 13, 14], "librari": [12, 13, 14], "roll": [12, 13, 15, 18, 24, 70, 125], "workspac": [12, 13, 14, 99, 111], "baselin": [12, 13], "inner": [12, 22, 41, 76, 83, 84, 98, 120], "bound": [12, 32, 121], "constant": [12, 14, 15, 18, 20, 23, 60, 61, 68, 80, 86, 97, 122], "revers": [12, 14, 15, 16, 18, 23, 33, 46, 52, 66, 68, 83, 86, 87, 94, 99, 110, 111, 117, 119, 124, 126], "cuttoff": 12, "taken": [12, 18, 33, 104], "atop": [12, 14, 15, 16, 18, 41], "raveld": 12, "becuas": [12, 14, 15], "diamond": [12, 14, 15, 16, 40], "scientif": 12, "tack": [12, 14], "reus": [12, 27, 47], "extens": [12, 14, 15, 18, 37, 66, 106], "conform": [12, 76, 86, 91], "transcript": [12, 13, 14, 15, 16, 17, 18, 66, 98], "69": 12, "72": 12, "moment": 12, "big": [12, 15], "quit": [12, 15, 16, 18, 20, 34, 39, 41, 55, 83], "summat": [12, 18, 41, 89, 93, 98], "algebra": [12, 22, 29, 55], "magnet": [12, 13, 14, 15, 16, 19, 40], "forget": 12, "kind": [12, 13, 14, 15, 16, 46], "mgkm2qcpwa": 13, "axi": [13, 14, 15, 16, 18, 32, 44, 62, 87, 88, 94, 116], "regexr": 13, "quot": [13, 58], "fix": [13, 14, 35, 44, 46, 82, 115], "cut": [13, 21, 82, 123], "field": [13, 69], "pick": [13, 14, 16], "wise": [13, 18, 25, 35, 59], "caten": [13, 14, 15, 16, 18], "concatin": [13, 18], "bracket": [13, 14, 43, 53, 57, 85], "randomli": 13, "compat": [13, 31, 62], "mayb": [13, 18], "Or": [13, 14], "area": [13, 81], "petit": 13, "um": [13, 15, 18], "fairli": 13, "revel": [13, 15, 16, 35, 45, 66, 73, 106], "grab": [13, 16, 119], "num": 13, "noth": [13, 14, 16], "came": 13, "fine": [13, 15, 16], "e3": 13, "successfulli": [13, 47, 65, 73, 105, 115, 119], "token": [13, 69], "superior": 13, "cheat": [13, 20], "far": [13, 14, 20, 64, 118], "uh": [13, 15], "env": 13, "overlap": [13, 33, 52, 120], "becom": [13, 14, 15, 16, 18, 34, 35, 49, 55, 61, 76, 83, 86, 121], "shorter": [13, 19, 22, 24, 35, 37, 44, 48, 64, 77, 85, 101, 118], "line": [13, 14, 15, 29, 59, 71, 88, 91, 106, 113, 115], "front": [13, 14, 15, 29, 40, 48, 64, 92, 115, 123], "trigger": 13, "brace": [13, 14, 16, 18, 41, 42, 43, 44, 45, 50, 53, 124], "pretti": 13, "memori": [13, 33, 64, 89, 107, 112], "whole": [13, 14, 15, 16, 17, 18, 39, 40, 44, 49, 56, 57, 63, 73, 119, 121], "later": [13, 14, 61, 70, 74, 107, 112, 122], "spend": 13, "lot": [13, 15, 18, 36, 42, 44], "everyth": [13, 14, 15, 18, 40, 44, 66, 75, 94, 119, 123], "unicod": [13, 23, 36, 80, 82], "expens": [13, 23, 36], "somewhat": [13, 37], "rewrit": [13, 22, 40], "cheap": 13, "extend": [13, 18, 27, 34, 38, 52, 59, 65, 112, 121], "detect": [13, 23], "inequ": [13, 15, 105], "sub": [4, 13, 15, 35, 44, 62, 80], "spin": 13, "blow": 13, "water": 13, "slowest": 13, "gave": 13, "speed": [13, 14, 16, 74, 97, 99, 107, 119], "save": [13, 19, 68], "el0_rb4ttpa": 14, "paren": 14, "norrmal": 14, "merg": [14, 113, 117, 119], "trade": [14, 21], "act": [14, 40, 62, 72, 82, 119], "top": [14, 15, 16, 18, 19, 27, 62, 83, 88, 112, 124], "explanatori": 14, "bottom": [14, 32, 62, 112], "independ": [14, 32, 65, 91], "middl": [14, 15, 16, 44, 45, 67, 84, 86, 95, 104, 110], "iof": 14, "unmatch": 14, "aplwiki": [14, 15, 18], "idenit": 14, "meta": 14, "suffix": [14, 15], "condtion": 14, "realiz": [14, 19, 29, 69, 107, 112], "drop": [14, 21, 25, 35, 40, 66, 80, 84, 109, 110, 123], "simlar": 14, "nor": 14, "neither": 14, "outsid": [14, 15, 16, 54, 56, 95], "impli": [14, 18, 56, 66, 90, 101], "intersect": [14, 16, 23, 30, 32, 36, 67, 77, 80, 95, 113], "present": [14, 16, 30, 34, 36, 37, 47, 54, 66, 69, 73, 75, 79, 88, 104, 106, 122, 127], "iter": [14, 18, 27, 33, 86, 117, 118, 119], "glue": 14, "variant": [14, 121], "rotat": [14, 16, 26, 29, 68, 71, 84, 124], "maintain": [5, 14, 19, 27, 29, 46, 50, 64, 67, 71, 74, 75, 78, 79, 80, 88, 108, 113, 117, 118, 120], "parser": 14, "unpair": 14, "blank": 14, "1000": [14, 25, 30, 33, 35, 36, 37, 64, 74, 75, 91, 105, 111], "synchron": 14, "interrupt": 14, "seper": [14, 15, 16], "immedi": [14, 40, 44, 52, 68, 72, 73], "preced": [14, 40, 61, 66, 84], "evaul": 14, "lamin": 14, "rank_": [14, 18], "layer": [14, 83, 110, 117, 119], "typic": [14, 19, 29, 45, 49, 69, 89, 104, 119, 121], "conjunct": 14, "sixteen": 14, "amus": 14, "bouch": 14, "few": [14, 16, 20, 23, 30, 33, 36, 62, 87], "plan": [14, 23, 79], "lookup": [14, 69, 83, 93, 109], "wasn": [14, 15, 16], "pan": 14, "stack": [14, 15, 27, 35, 88, 92, 99, 124], "enclosur": [14, 15, 72, 84, 99], "leav": [14, 49, 53, 56, 84], "unaffect": 14, "symmetr": [14, 16], "cool": 14, "tine": 14, "tini": 14, "part": [14, 15, 31, 44, 50, 62, 84, 109, 118, 122], "haven": 14, "defens": 14, "ye": [14, 15, 16], "bigger": 14, "coupl": [14, 16, 18, 44, 46, 60, 75, 123], "meter": 14, "win": [14, 125], "goe": [14, 16, 57], "finish": 14, "dip": 14, "succinct": 14, "doubl": [14, 58, 62, 81, 107], "continu": [14, 21, 25, 27, 46, 49, 53, 59, 72, 75, 86, 104, 118], "suffici": [14, 20, 56], "invalid": [14, 51, 67], "spell": [14, 15], "yd": 14, "yeah": [14, 18], "nose": 14, "wherea": [14, 23], "termin": 14, "suppli": 14, "break": [14, 16, 18, 21, 22, 83, 86, 104, 116, 118], "got": [14, 15, 18], "anymor": [14, 16, 34, 44], "guess": 14, "OR": [14, 54], "squeez": 14, "powermatch": 14, "heavi": 14, "weight": [14, 83], "circumv": 14, "won": [14, 15, 20, 77, 89, 91, 104], "strand": [14, 84], "squar": [15, 19, 22, 31, 43, 58, 74, 77, 83, 85, 95, 100, 103], "vvaz3wedmpq": 15, "equailti": 15, "indec": 15, "eqal": 15, "beween": 15, "c": [15, 16, 17, 18, 19, 21, 23, 25, 26, 34, 35, 36, 50, 51, 52, 59, 69, 74, 75, 79, 80, 93, 106], "\u2099": 15, "20": [15, 27, 39, 41, 65, 69, 88, 104, 106, 110], "25": [15, 65, 74, 75, 83, 88, 110], "18": [15, 65, 69, 88, 101], "24": [15, 55, 62, 65, 88, 102], "industri": 15, "caus": [15, 16, 18, 40, 66], "singleton": 15, "prefix": [15, 49, 86], "5x5": 15, "saw": 15, "expand": [15, 18, 44, 52, 73, 117, 121], "prototyp": [15, 123], "negat": [15, 35, 42, 46, 47, 57, 66, 76, 79, 82, 99, 116], "echo": [15, 117], "concatent": 15, "reurn": 15, "identiri": 15, "encod": [15, 17, 18, 87, 115], "kei": [15, 18, 23, 45, 46, 47, 65, 69, 80, 102, 119, 126], "reorder": [15, 18, 43, 85, 117, 119], "direct": [15, 16, 18, 19, 24, 27, 32, 39, 45, 52, 61, 63, 66, 74, 77, 90, 91, 92, 98, 107, 112, 115, 116, 117, 119], "imaginari": [15, 22], "circular": [15, 18], "fo": 15, "45": [15, 20, 61], "degre": [15, 20, 55], "quarter": 15, "pi": [15, 18, 55, 58, 101], "785398163": 15, "radian": [15, 20], "triangl": [15, 22, 45, 74, 77, 101], "plane": [15, 22], "hypotenus": [15, 74, 77], "diagnal": 15, "root": [15, 18, 19, 31, 56, 74, 84], "vertial": 15, "bar": [15, 16, 18], "everywher": [15, 120], "mondad": [15, 18], "decod": [15, 18, 83, 115], "antibas": [15, 18], "absolut": [15, 18, 22, 71, 77, 89, 91], "innov": 15, "five": [15, 18, 40, 44, 59, 66, 68, 98, 104, 117, 119, 123, 125], "qualiti": [15, 47], "advanc": [15, 74, 106], "No": [15, 38, 94, 125], "illustr": [15, 19, 21, 23, 25, 30, 32, 49, 50, 59, 61, 62, 64, 68, 83, 84, 86, 88, 89, 91, 94, 96, 97, 107, 109, 119, 120, 121, 125], "attic": 15, "compromis": 15, "gate": 15, "been": [15, 16, 18, 37, 46, 76, 127], "updat": [15, 37, 44, 54, 69], "necessarili": 15, "awkward": 15, "coordin": [15, 77], "complic": [15, 23, 37, 84], "yo": 15, "onto": 15, "cyclic": [15, 26, 45, 69, 71, 104], "almost": [15, 31, 72, 74], "shift": [15, 18, 33, 67, 115, 119, 124], "plai": 15, "increment": [15, 24, 53], "trickeri": 15, "sine": 15, "i5": 15, "defend": [15, 125], "astronom": 15, "exceedingli": [15, 20], "unlik": 15, "exist": [15, 16, 24, 30, 47, 62, 73, 90, 96, 107, 109, 115, 123], "equat": [15, 20, 77, 101], "obscur": [15, 64, 86], "ineffici": [15, 25, 27, 35, 64, 89, 96, 112, 125], "api": 15, "hei": [15, 38], "descend": [15, 79, 83, 89, 108], "16": [15, 39, 53, 61, 65, 74, 77, 83, 88, 110, 116], "auto": 15, "size": [15, 24, 25, 33, 35, 59, 62, 72, 73, 91, 97, 108, 120], "nreship2": 15, "a1": [15, 32], "rear": [15, 111], "liter": [15, 33, 118, 121], "densiti": 15, "roundabout": 15, "conclus": [15, 32, 35, 63, 95, 99], "alpha": [15, 20, 34, 40, 41, 55, 60, 66, 82, 84, 105, 113, 115, 117, 120, 121], "nobodi": 15, "abl": [15, 41, 104], "wors": 15, "beta": 15, "recogn": [15, 18, 19, 29, 34, 41, 51, 80, 91, 99], "shouldn": [15, 91], "1i": 15, "3i": 15, "angl": [15, 20, 22, 27, 55, 70, 74], "785": 15, "reciproc": [15, 22, 74], "terribl": 15, "division": 15, "strength": 15, "accept": [15, 21, 26, 50, 69, 72, 86, 120], "36hlhsejuiq": 16, "min": [16, 32], "largest": 16, "catent": 16, "42": [16, 35], "pre": [16, 23, 74, 93, 104, 113], "foo": 16, "baz": 16, "3rd": [16, 108], "alphabeticlali": 16, "path": [16, 52], "sixth": [16, 43], "action": [16, 99, 115], "ado": 16, "smaller": [16, 18, 47, 100, 101, 118], "redund": [16, 84], "mostli": 16, "clariti": [16, 24, 32, 37, 42, 59, 61, 71, 96, 102, 111, 124], "great": [16, 79, 127], "neat": [16, 20, 41, 56, 64, 75, 85, 106, 113], "rev": 16, "wrapper": [16, 109], "syntax": [16, 19, 39, 50, 63, 127], "intermediari": [16, 27], "infin": 16, "beyond": [16, 33], "visibl": 16, "anywher": 16, "clearest": 16, "coerc": 16, "color": [16, 95], "ceas": 16, "idiom": [16, 36, 37], "slower": [16, 21, 32, 112], "rest": 16, "firstli": [16, 23], "carriag": 16, "strain": 16, "els": [16, 48, 57, 59, 117], "anywai": 16, "invis": 16, "eventu": [16, 45], "atom": 16, "unrel": 16, "travel": [16, 24, 125], "gravel": 16, "old": [16, 18], "rebel": 16, "made": [16, 24, 99, 122], "toler": 17, "decim": [17, 75, 83, 121], "poss": 17, "ibl": 17, "ft": 17, "o_l": 18, "njymdr": 18, "index_of": 18, "master": 18, "html": 18, "20product": 18, "index_gener": 18, "principl": [18, 22, 61, 84, 91], "scalar_extens": 18, "xpqz": 18, "cultiv": [18, 37], "arithmet": [18, 25, 44, 53, 55, 96, 116, 122], "q": [18, 26, 30, 44, 74, 97], "jwilson": 18, "coe": 18, "uga": 18, "edu": 18, "emat6680fa2012": 18, "faircloth": 18, "essay1alf": 18, "chinesestickmultipl": 18, "squash": 18, "unari": 18, "en": 18, "wikipedia": 18, "org": 18, "unary_numeral_system": 18, "outer_product": 18, "finger": 18, "power_": 18, "comparison_funct": 18, "learnapl": 18, "dyadictrn": 18, "ab": [18, 32, 33, 60, 83], "fill_el": 18, "functions7": 18, "matrix_divid": 18, "major_cel": 18, "pi_tim": 18, "scalar_funct": 18, "floor_and_ceiling_funct": 18, "ceil": [18, 53, 63, 118], "equal_to": 18, "ravel_ord": 18, "tacit_program": 18, "manip": 18, "awar": 18, "slash": [18, 46, 105, 120], "comma": [18, 40, 88, 111, 113], "varieti": [18, 39, 52, 106], "creativ": [18, 65, 112, 127], "altogeth": [18, 34], "reli": [7, 18, 79, 96], "scanner": 18, "six": [18, 34, 43, 59, 65, 98, 123], "tacitli": 18, "yode": 18, "fashion": [18, 27], "hash": 18, "namespac": [18, 37, 61], "placehold": [18, 50, 59, 80, 119], "j3": 18, "ignor": [18, 23, 36, 60, 67], "concat": 18, "cardin": 18, "distanc": [19, 20, 24, 28, 31, 35, 77, 81, 97], "half": [19, 23, 29, 100, 101, 116], "2d": [19, 44, 112], "4d": 19, "u_1": 19, "v_1": 19, "u_2": 19, "v_2": 19, "u1": 19, "v1": 19, "u2": 19, "v2": 19, "collect": [19, 65, 76, 78, 80, 86, 94, 96, 120], "flat": [19, 74, 97, 111], "contribut": [19, 65, 83, 122], "excit": 19, "exponenti": [19, 89], "furthermor": [19, 36], "static": [19, 80], "wast": [19, 36, 47], "technic": [19, 84], "feasibl": [19, 111], "clean": [19, 37, 46, 54, 68, 74, 105, 113], "aplcart": 19, "_u_": 19, "margin": 19, "aesthet": 19, "9th": [20, 40], "veloc": 20, "thrown": 20, "readi": [20, 60, 127], "translat": [20, 32, 51, 78, 82, 83, 102], "sin": 20, "theta": 20, "gravit": 20, "180": 20, "90": [20, 23, 39, 78], "displac": 20, "circl": [20, 24, 82], "taylor": 20, "expans": 20, "sum_": 20, "infti": 20, "2n": 20, "nativ": 20, "accuraci": [20, 46], "euler": 20, "isol": [20, 34, 67, 109, 113, 120, 124], "logarithm": 20, "0j": 20, "converg": [20, 22, 86], "slowli": 20, "999": 20, "99": [20, 41], "offici": 20, "satisfactori": 20, "extrem": [20, 44, 49], "delv": [21, 29, 32, 37, 49, 52, 54, 61, 62, 77], "solver": [21, 31], "vowel": [21, 40], "identif": 21, "insensit": [21, 34, 36], "uppercas": [21, 23, 33, 36, 68, 93], "ascertain": [21, 66, 87], "interior": 21, "aeiou": 21, "mistakenli": 21, "unwant": [21, 26, 69, 88], "streamlin": [21, 30, 46, 54, 61, 63, 65, 68, 71, 74, 77, 91, 94, 96, 100, 105, 115], "stencil": [21, 117], "neighborhood": 21, "weakest": 21, "dxb": 21, "t3": 21, "1e3": 21, "60": [21, 39, 55, 63, 91, 102], "cdr": 21, "face": [21, 40, 49, 96], "punctuat": [21, 23, 36, 60], "erron": 21, "mark": [21, 35, 36, 40, 53, 72, 75, 105, 118], "alphabet": [21, 23, 33, 34, 36, 40, 42, 51, 52, 57, 59, 60, 68, 78, 80, 83, 99, 105, 115], "neighbor": [21, 73, 104], "investig": [21, 74], "craft": 21, "behind": [21, 64], "ahead": 21, "boundari": [21, 32], "patterna": 21, "patternb": 21, "centric": 21, "suitabl": [21, 53, 56, 69], "analysi": [21, 25, 32, 46, 77, 79, 91, 94, 106], "pythagorean": [22, 74, 101], "theorem": [22, 74, 101], "left_argu": [22, 84], "right_argu": 22, "notabl": [7, 22, 42, 99, 119], "fold": [22, 23, 34, 36], "compon": [22, 29, 102], "bi": 22, "domino": 22, "unpack": 22, "fundament": [22, 43, 68, 91, 115], "geometri": 22, "fifth": [23, 31, 33, 47, 125], "palindrom": 23, "slight": [23, 76, 86], "panama": 23, "man": 23, "canal": 23, "cautiou": [23, 64], "lowercas": [23, 36, 72, 73], "supplement": 23, "ascii": [23, 82], "contigu": [23, 107], "97": 23, "122": 23, "fall": [23, 32, 54, 78, 82, 92], "32": [23, 65], "uc": [23, 82, 88], "recheck": 23, "implic": [23, 117], "raw": 23, "70": [23, 78, 108], "1e5": 23, "attach": 23, "5e4": 23, "abcd": [23, 36, 88], "sensit": [23, 60], "invit": 24, "imagin": [24, 47, 64], "touch": [24, 101], "stationari": 24, "surfac": 24, "seventh": [24, 34, 39], "align": [24, 29, 41, 56, 62, 66, 69, 71, 82, 87, 101, 116, 124], "motion": 24, "diamet": [24, 55, 101], "circumfer": [24, 55], "disregard": 24, "revolut": 24, "mobil": 24, "aim": [24, 32, 50, 66, 98, 100, 111, 115], "paramet": [24, 57, 120], "counter": [24, 88], "evenli": [24, 39, 68, 100], "physic": 24, "movement": [24, 120], "met": [24, 87], "enter": 24, "greatest": [24, 30], "common": [24, 30, 39, 46, 88, 113, 116, 124], "divisor": [24, 30], "gcd": [24, 30], "lcm": [24, 116, 121], "beauti": [7, 24], "exemplifi": [24, 101], "paradigm": [24, 112], "10th": [25, 41], "delta": [25, 27, 117], "monthli": 25, "80": [25, 39, 74, 78], "120": [25, 39], "140": [25, 82], "diff": 25, "subsequ": [25, 27, 35, 40, 46, 49, 59, 61, 64, 75, 87, 88, 97, 104, 118], "benchmark": [25, 107, 112], "5e": 25, "7e": [25, 36, 64], "4850": 25, "crucial": [25, 37, 62, 64, 111, 113, 117], "frequent": [25, 46], "27": [25, 65, 83], "upon": [25, 67, 69, 78, 94, 107, 112, 115, 117], "sampl": [25, 33, 54, 71, 91, 97, 99, 108, 123], "succinctli": [25, 39, 55, 112, 124], "visit": 26, "edit": 26, "excess": [26, 37, 47, 88], "condens": 26, "broader": [26, 66], "testcas": 26, "captur": [26, 63, 64, 106, 118, 119, 124], "trim": [26, 76], "performancetest": 26, "aresult": 26, "methoda": 26, "bresult": 26, "methodb": 26, "overal": [26, 27, 41, 54, 76, 95, 117, 119, 120], "usag": [26, 35, 101, 112], "iotag": 26, "nth": 27, "seed": 27, "stop": [27, 44, 45], "rec": 27, "slow": 27, "via": [27, 63, 73, 75, 84, 117], "overflow": [27, 63], "frame": 27, "therebi": [27, 33], "unus": 27, "tco": 27, "attack": [27, 125], "ap2": 27, "retriev": [27, 45, 47, 52, 63, 68, 80, 85, 123], "accumul": 27, "acc": 27, "golden": 27, "binomi": [27, 29], "binet": 27, "bin": 27, "nl": 27, "tweet": 28, "fib": 28, "frontier": 28, "mirror": [28, 40, 68, 94], "revolutionari": 28, "ballist": 28, "2015": [29, 30, 31, 32, 33, 35, 36, 37], "visual": [29, 33, 35, 37, 39, 41, 44, 50, 54, 55, 56, 65, 71, 77, 82, 94, 98, 102, 110, 112], "appeal": 29, "tradition": [29, 37, 44], "neatli": [29, 42, 55, 90], "rectangular": 29, "sidewai": 29, "progress": [29, 36, 49], "layout": [29, 69, 120], "accordingli": [29, 36, 69, 71, 97, 108, 109], "rf": 29, "rn": 29, "tn": 29, "50": [29, 41], "overview": [29, 59], "54": 29, "3e": [29, 36, 64, 111], "51": 29, "fast": 29, "wisdom": 29, "deliv": 29, "capl": [30, 32], "denomin": [30, 121], "ascend": [30, 89, 108], "exclud": [30, 100, 113, 123], "ii": 30, "ij": 30, "im": 30, "quotient": 30, "lastli": [30, 119, 124], "setup": [30, 61, 80], "coprim": 30, "enumer": [30, 62, 66], "g2": [30, 112], "qf": 30, "didn": [31, 123], "pleasur": 31, "ken": 31, "iverson": [31, 99, 127], "opportun": [31, 93, 127], "student": 31, "roger": 31, "huei": 31, "spirit": 31, "seen": [31, 118], "him": 31, "believ": 31, "he": [31, 38, 47], "squareroot": 31, "stddev": 31, "uniformli": [31, 88, 116], "integr": [31, 66], "bracketdev": 31, "earli": [31, 64, 99], "earlier": [31, 54, 61, 63, 68, 70, 72, 82, 107, 115, 122], "organ": [31, 42, 69, 88, 127], "symmetri": [31, 37, 74], "box": [31, 47, 111], "stddevu": 31, "verif": 31, "summar": [31, 49, 55, 65, 83, 90, 94, 100, 116], "incorpor": [31, 47, 53, 90, 115], "rectangl": [32, 55], "label": [32, 111], "xy": 32, "x_1": 32, "y_1": 32, "x_2": 32, "y_2": 32, "a_1": 32, "b_1": 32, "a_2": 32, "b_2": 32, "confus": [32, 59], "breakdown": [32, 65], "alter": [32, 53, 68, 80], "geometr": [32, 76, 77, 101], "xy1": 32, "xy0": 32, "horizontal_overlap": 32, "x1": 32, "a2": 32, "x2": 32, "vertical_overlap": 32, "b1": 32, "y1": 32, "b2": 32, "y2": 32, "minim": [32, 64, 72], "promis": 32, "partner": 33, "outlin": [33, 59, 66, 84, 109, 116], "easier": [33, 64, 67, 115], "abcdef": [33, 34], "abdcf": 33, "untouch": 33, "flippedword": 33, "travers": [33, 54, 73, 94], "chunk": 33, "piec": [33, 53, 82, 95, 107], "stenciledword": 33, "alloc": [33, 37], "medial": 33, "reorderedword": 33, "permutationword": 33, "abcdefghijklmnopqrstuvwxyz": [33, 115], "26": [33, 37, 65], "fghij": 33, "showcas": [33, 85, 120, 127], "randomlett": 34, "cdef": 34, "previous": [34, 46, 53, 74, 113], "tech": 34, "simultan": [34, 85], "highranklett": 34, "cdxy": 34, "queri": [34, 87], "receiv": [34, 37, 41, 53, 71, 86, 108, 113], "unexpect": 34, "tyadik": 34, "pose": 34, "longest": [35, 38, 43, 101], "volum": 35, "leftmost": [35, 105], "clip": 35, "backward": 35, "remedi": [35, 52, 73], "strictli": [35, 44, 91], "grow": [35, 91], "conveni": [35, 99, 104], "segment": [35, 40, 82, 86, 107, 109], "growth": 35, "intuit": [35, 106], "explicitli": [35, 41, 50, 52, 55, 56, 91], "dictat": [35, 66], "ineffci": 35, "introduc": [35, 37, 44, 46, 50, 54, 56, 64, 86, 115, 127], "concern": [35, 45, 62, 68, 75, 87], "sole": [35, 36, 80], "streak": [35, 38], "overestim": 35, "simplif": 35, "thousand": 35, "permut": 35, "ideal": 35, "suit": [35, 127], "capit": [36, 84], "nag": [36, 38], "ram": [36, 38], "rephras": 36, "arrang": [36, 56, 57, 66, 71, 74, 78, 79, 80, 86, 95, 100, 110, 115, 120], "scrambl": [36, 38], "shuffl": 36, "shortest": [36, 43, 59, 89], "quickli": [36, 47], "inadvert": 36, "unnecessarili": 36, "facilit": [36, 45, 56, 63, 69, 77, 116, 117, 124], "ta": 36, "tb": 36, "35": [36, 65], "52": [36, 83], "2e": 36, "55": 36, "acknowledg": 36, "state": [36, 37, 44, 71], "room": 36, "inclus": [36, 73, 122], "bj\u00f6rn": 36, "ma": 36, "d\u00e1": 36, "123": 36, "bj\u00f8rn": 36, "ad\u00e1m": [36, 120], "321": 36, "71": [36, 78], "pl": 36, "pm": 36, "pz": 36, "arriv": [36, 37, 68, 84, 85, 108, 118, 121], "consum": 37, "akin": 37, "decad": 37, "commonli": [37, 73, 120], "link": [37, 84, 89, 98, 111], "primarili": [37, 67, 79, 101, 116, 124], "landon": 37, "finnegan": 37, "previou": [37, 56, 64, 66, 72, 75, 82, 89, 90, 97, 118, 120, 122], "ax": [37, 44, 94, 120, 125], "inappropri": [37, 67], "accommod": [37, 56, 109], "misalign": 37, "133": 37, "macro": 37, "resourc": [37, 74, 125], "farei": 38, "tale": 38, "progess": 38, "standard": [38, 65, 78, 87, 95, 116], "deviat": [38, 59], "thisi": 38, "my": [38, 40, 44, 106], "justin": 38, "upper": [38, 116], "id": 38, "mine": 38, "blaze": 38, "2016": [39, 40, 41, 42, 43, 44, 45, 47], "cleanli": [39, 88, 107], "conceptu": [39, 49, 63], "30": [39, 63, 65, 102], "40": 39, "greek": [39, 40, 42, 51, 52, 57, 60, 72, 78, 99, 105], "semicolon": 40, "infix": 40, "user": [40, 59, 68, 106], "lambda": [40, 41, 42, 43, 44, 46, 49, 54, 56, 57, 61, 62, 64, 66, 72, 77, 78, 84, 85, 94, 95, 97, 98, 99, 105, 107, 111, 112, 113, 115, 118, 124], "denot": [40, 41, 42, 43, 44, 45, 50, 57, 63, 66, 72, 77, 101], "isdelimit": 40, "lose": [40, 125], "portion": 40, "loss": 40, "marker": 40, "proceed": [40, 71, 125], "opinion": 40, "control": 40, "scope": [40, 72], "pertain": 40, "forc": 40, "unfortun": 40, "terminologi": 40, "signifi": [40, 43, 57, 83, 87, 91, 125], "unbreak": 40, "criteria": [40, 98, 100, 118], "epl": 41, "price": 41, "quantiti": 41, "purchas": 41, "bought": 41, "automat": [41, 42, 44, 53, 55, 57, 84], "\u03b1": [41, 55, 82], "\u03c9": [41, 42, 52, 55, 56, 78, 79, 99], "serv": [41, 54, 74, 86, 99, 101], "cover": [41, 68, 89, 111], "chain": 41, "fed": 41, "instantli": 41, "underli": [41, 83], "record": 41, "henc": 41, "introduct": 41, "positivevalu": 42, "negativevalu": 42, "filtervalu": 42, "equip": [42, 61, 83], "anonym": [42, 45, 47, 60, 64, 66, 72, 107, 111, 112, 117, 118, 119], "redefin": [42, 44, 117], "positivemask": 42, "declar": [42, 56], "negativemask": 42, "tild": [42, 44, 47], "distinguish": [42, 57], "categori": [42, 79], "clarifi": [42, 44, 68, 85, 87], "sbl": 43, "averag": [4, 44, 76, 114], "gotcha": 44, "curli": [44, 124], "niceti": 44, "fanci": 44, "ridicul": 44, "short": [44, 54, 55, 59, 99], "bother": 44, "zelda": 44, "pronounc": 44, "mysteri": 44, "clamp": [44, 123], "style": [44, 55, 82], "multi": [44, 53, 65], "medianr": 45, "lack": [45, 50, 68, 83], "mediani": 45, "infinit": [45, 55], "modif": [45, 86], "\u03b4": 45, "mediand": 45, "AND": [46, 51, 87], "acceler": 46, "intact": [46, 123], "alli": 46, "swiftli": 46, "skip": [47, 68], "albeit": 47, "packag": 47, "ingeni": 47, "lol": 47, "wrd": 47, "statist": [48, 127], "median": 48, "mode": [48, 105], "everyon": 48, "onestoth": 48, "sand": 48, "outth": 48, "li": [49, 87], "surviv": 49, "backslash": 49, "associ": [49, 69, 82, 99, 119], "truth": 49, "draft": 49, "lessthanprint": 49, "lessthanreduct": 49, "lessthanscan": 49, "invoc": 49, "propag": 49, "essenc": [49, 84, 119, 122], "mechan": [49, 83, 98], "promin": 49, "attent": [49, 50, 55, 66, 85], "walk": [50, 54], "leftarrai": 50, "rightarrai": 50, "attacca": 50, "acgt": [50, 51, 59, 106], "referenc": 50, "ambigu": 50, "enabl": [50, 65, 66, 71, 73, 96], "encompass": 50, "core": 50, "vocabulari": [50, 106], "reusabl": [50, 65, 68, 90, 105, 120], "environ": 51, "among": [51, 100], "atgcttcagaaaggtcttacg": 51, "atgcttcagaaaggtxcttacg": 51, "presenc": [51, 67, 91, 93, 106], "syntact": 51, "meanwhil": 51, "mississippi": [52, 124], "39111": 52, "ny": 52, "incomplet": 52, "elsewher": 52, "inaccur": 52, "11193": 52, "ippississim": 52, "filler": 52, "reliabl": [52, 122], "cleaner": [52, 68, 71, 96, 106, 120], "topic": [52, 116, 122, 125], "configur": [53, 62, 65, 86, 95], "halv": 53, "tool": [53, 61, 64, 71, 74, 83], "unintend": 54, "quotat": 54, "deeper": [54, 83], "newlin": [54, 88], "flag": 54, "xor": 54, "NOT": 54, "TO": 54, "predefin": [54, 94], "transit": [54, 124], "sophist": 54, "solid": 54, "foundat": 54, "unrol": 55, "thin": 55, "slice": [55, 58, 59], "radiu": [55, 101], "recal": [55, 101], "360": 55, "sectorarea": 55, "consolid": 55, "1440": 55, "adequ": 55, "3x3": 56, "2x2": 56, "236067977": 56, "clutter": [56, 88], "gracefulli": [56, 59, 107], "2017": [57, 61], "programm": [57, 127], "latin": 57, "low": [57, 82], "gotten": 57, "adverbi": 57, "dna": [58, 114], "mer": [58, 59], "dnanucleotid": 58, "Be": [58, 126], "troubl": 58, "adenin": 59, "cytosin": 59, "guanin": 59, "thymin": 59, "slide": [59, 104], "inconsist": 59, "requested_length": 59, "data_length": 59, "vector_of": 59, "length_request": 59, "overcom": [59, 88], "inher": [59, 83, 91, 116], "spars": 59, "econom": 60, "worri": [60, 68, 117, 119, 127], "prepar": [60, 62, 71, 74, 109, 113], "albert": 60, "einstein": 60, "elit": 60, "brain": 60, "cab": 60, "carri": [60, 99], "without_spac": 60, "easi": [60, 63, 94, 116], "helper": 60, "alberteinstein": 60, "tenelitebrain": 60, "mind": [60, 74], "realm": [61, 77], "mundan": 61, "intrigu": [61, 83], "tempor": 61, "dialog": 61, "interact": 61, "entiti": [61, 73], "2018": [61, 68], "56": 61, "789": 61, "800": 61, "entri": [61, 88, 106], "dt": [61, 90, 116], "serial": [61, 116], "dai": [61, 69, 102], "epoch": 61, "1899": 61, "43190": 61, "52427": 61, "69806": 61, "42825": 61, "1737964236": 61, "365": 61, "prior": 61, "rich": 61, "intrins": 61, "knowledg": [61, 83], "characterist": [62, 79], "deem": 62, "2x5": 62, "primari": [62, 71], "meet": [62, 95, 96, 116, 118], "omit": [62, 105], "thoroughli": 62, "stylish": 63, "wall": 63, "2345": 63, "fractional_part": 63, "original_numb": 63, "math": [63, 67], "333333333": [63, 104], "reflect": [63, 69, 83, 86, 110, 111, 112, 122], "synthes": 63, "movi": 63, "96": 63, "minut": [63, 91], "hour": [63, 102], "metaphor": 63, "digest": 63, "36": [63, 65], "seamlessli": [63, 66, 73, 106, 108], "stand": [64, 72, 108, 112], "rule": 64, "lower": [64, 108], "taller": 64, "likewis": [64, 69], "necessit": [64, 87], "exit": 64, "58": 64, "68": [64, 82, 108], "softwar": 64, "frequenc": [65, 108], "cast": 65, "die": [65, 125], "land": 65, "6x6": 65, "coin": 65, "2x3x6": 65, "gather": 65, "19": [65, 69, 88], "21": [65, 69, 88, 106], "31": [65, 116], "22": [65, 69, 75, 88], "23": [65, 69, 88, 116], "28": [65, 101, 116], "33": [65, 116], "29": [65, 75, 90], "asterisk": 65, "cap": 65, "exceed": 65, "permit": 65, "behavior": [65, 72, 99], "engag": [65, 98, 100, 101, 125, 127], "combinatori": 65, "recommend": [66, 125], "review": [66, 89], "inlin": [66, 105], "decid": 66, "occupi": [66, 95, 108], "subset": 66, "draw": [66, 95], "moreov": 66, "culmin": 66, "encourag": [66, 89, 117, 127], "latter": 67, "misus": 67, "disrupt": [67, 91], "drake": 67, "mallard": 67, "adher": [67, 86, 91], "compound": 67, "branch": 67, "uninterrupt": 67, "closur": 67, "closest": [68, 100], "prolept": 68, "calendar": [68, 69, 116], "scrape": 68, "websit": 68, "dirti": 68, "clearer": [68, 93], "2006": 68, "2007": 68, "nine": 68, "monkei": [68, 81], "rooster": 68, "eleven": 68, "pig": 68, "monkeyroosterdogpigratoxtigerrabbitdragonsnakehorsegoat": 68, "compens": 68, "absenc": 68, "dog": [68, 79], "robustli": 68, "advis": 68, "tabular": 69, "machin": 69, "consumpt": 69, "cumbersom": 69, "ari": 69, "march": 69, "april": 69, "libra": 69, "septemb": 69, "octob": [69, 116], "tauru": 69, "scorpio": 69, "novemb": 69, "gemini": 69, "june": 69, "sagittariu": 69, "decemb": 69, "cancer": 69, "juli": 69, "capricorn": 69, "januari": [69, 116], "leo": 69, "august": 69, "aquariu": 69, "februari": [69, 90], "virgo": 69, "pisc": 69, "21st": 69, "gregorian": 69, "inspect": [69, 79, 94], "modular": 69, "standalon": 69, "pseudo": 69, "def": [69, 80, 117, 119], "get_zodiac_sign": 69, "uncondition": 70, "shifti": 70, "makinga": 70, "anagrammat": 70, "inscrib": 71, "anti": [71, 94, 99], "x_i": 71, "y_": 71, "y_i": 71, "x_": 71, "normalized_point": 71, "sum_diagonal_product": 71, "over_sum": 71, "vertex": 71, "ground": 71, "section": [72, 84, 109, 111, 119, 124], "restrict": [72, 83, 90, 100], "cat": [72, 79], "belong": [72, 78], "head": 72, "sep": 72, "pat": 72, "hat": 72, "sat": 72, "rho": 72, "alon": 72, "shorten": 72, "restructur": [73, 97], "newli": 73, "bookkeep": 73, "versu": 73, "incorrectli": [73, 113], "singular": 73, "saniti": 74, "connect": 74, "sqrt": 74, "rethink": 74, "fare": 74, "vastli": 74, "dabfc": 75, "abcdf": 75, "dddddddddaaabbbbbbbbffffccccccc": 75, "tidi": 75, "677419355": 75, "80645161": 75, "58064516": 75, "03225806": 75, "90322581": 75, "vulner": 75, "rout": 75, "tenth": 75, "mitig": 75, "risk": [75, 88], "orthogon": 76, "competitio": 76, "reposit": 76, "eas": [76, 120], "board": [77, 125], "fixat": 77, "8x8": 77, "irrespect": [77, 83], "legal": 77, "game": [77, 125], "82": 78, "81": 78, "84": 78, "59": 78, "fdcba": 78, "cbb": 78, "bbf": 78, "classif": 78, "sequenti": [78, 80], "endeavor": 78, "hors": 79, "fish": 79, "seal": 79, "mixtur": 79, "categor": 79, "python": 79, "pseudocod": 79, "odd_mask": 79, "len": [79, 117], "even_mask": 79, "odd_word": 79, "even_word": 79, "incom": 79, "regroup": 79, "correl": [80, 124], "ghi": 80, "jkl": 80, "mno": 80, "pqr": 80, "tuv": 80, "wxyz": 80, "adgjmptw": 80, "formal": [80, 122], "ur2cut": 80, "alphanumer": 80, "chunki": 81, "makingth": 81, "knight": 81, "telephon": 81, "center": [81, 110], "goingth": 81, "stream": 82, "yen": 82, "medium": 82, "possess": 82, "194": 82, "165": [82, 102], "226": 82, "141": [82, 111], "186": 82, "138": 82, "151": 82, "139": 82, "57": 82, "gc": 82, "191": 82, "emoji": 82, "chines": 82, "usabl": 82, "recogniz": 82, "192": 82, "excel": [83, 92], "sheet": 83, "decept": 83, "simplic": [83, 99], "aa": 83, "zz": 83, "carryov": 83, "az": 83, "unfold": 83, "1104": 83, "truli": 83, "comprehend": 83, "emul": 83, "enrich": 83, "seemingli": 84, "analog": 84, "dyalogapl": 84, "dya": [84, 109], "logapl": 84, "recur": 84, "strip": 84, "daunt": 84, "criterion": 85, "union": [85, 113], "exclus": 85, "unusu": 86, "plateau": 86, "clearli": [7, 86, 104], "outset": 86, "contrast": [86, 97], "abid": 86, "particular": 87, "trivial": [87, 94], "choic": 87, "ok": 87, "problemat": [87, 88], "uniform": [88, 102], "adam": 88, "michael": 88, "constitu": 88, "stage": 88, "basi": 88, "formatteddata": 88, "allrow": 88, "replicatedscalar": 88, "manual": [88, 100, 123], "transposit": 88, "log": 89, "Ones": [89, 122], "journei": 89, "100th": 90, "400th": 90, "redeem": 90, "2000": 90, "1900": 90, "despit": [90, 122], "1904": 90, "304": 90, "1905": 90, "305": 90, "prev": 90, "statu": 90, "date": [90, 116], "checkleapyear": 90, "validd": 90, "leapyearcheck": 90, "gone": 90, "shrink": 91, "percept": 91, "3141514131415": 91, "millisecond": 91, "autom": [91, 117, 123], "31415": 91, "suffic": 91, "discrep": [91, 107, 118, 125], "perfect": 91, "zigzag": [91, 92], "53141514131415": 91, "31141514131415": 91, "lent": 92, "takea": 92, "leap": 92, "steppinginth": 92, "movetoth": 92, "youina": 92, "riseand": 92, "gattacca": 93, "cg": 93, "total_cg": 93, "_cg": 93, "37": 93, "king": 95, "rook": 95, "bishop": 95, "white": 95, "black": 95, "queen": 95, "kr": 95, "rnbqkbnr": 95, "rbbnqnrk": 95, "brbkrnqn": 95, "rkr": 95, "tweak": 96, "diic": 96, "merit": 96, "speedup": 97, "sublist": 98, "glanc": [98, 122], "truncat": 99, "paus": [99, 125], "text1": 99, "text2": 99, "takeawai": 99, "erson": 99, "flatter": 99, "insuffici": 99, "advoc": 99, "nosrevi": 99, "facil": [99, 111], "weigh": 99, "prove": 99, "corner": [101, 112, 116], "_": 101, "attribut": 101, "archimed": 101, "circlesquarediffer": 101, "141592654": 101, "566370614": 101, "27433388": 101, "26548246": 101, "53981634": 101, "deploi": 101, "deduc": [101, 107], "150": 102, "315": 102, "bacteria": 103, "peg": 103, "hole": 103, "rect": 103, "ifi": 103, "fischer": 103, "chess": 103, "feelth": 103, "magic": 103, "timeto": 103, "makea": 103, "inth": [103, 114], "onth": 103, "simul": 104, "666666667": 104, "gagcctactaacgggat": 105, "catcgtaatgacggcct": 105, "bioinformat": 106, "genet": 106, "agcttttcattctgactgcaacgggcaatatgtctctgtgtggattaaaaaaagagtgtctgatagcagc": 106, "dummi": 106, "model": 106, "renam": 106, "dyalog_vis": 106, "quadequ": 106, "aplo": 106, "friendli": 106, "vital": 106, "inject": [107, 123], "797693135e308": 107, "1e7": 107, "nearli": 107, "discov": [107, 112, 124], "player": 108, "67": 108, "74": 108, "1st": 108, "2nd": 108, "4th": 108, "5th": 108, "6th": 108, "7th": 108, "aid": 108, "meant": 108, "cmp": 108, "5000": 108, "000": [108, 111], "5e3": 108, "1e4": 108, "thought": [108, 127], "splitter": 109, "dy": 109, "alog": 109, "decrement": 109, "adapt": [109, 119], "resembl": [110, 111, 121], "outward": 110, "10000": 111, "100000": 111, "1000000": 111, "10000000": 111, "100000000": 111, "1000000000": 111, "01": 111, "001": 111, "0001": 111, "00001": 111, "000001": 111, "0000001": 111, "00000001": 111, "000000001": 111, "0000000001": 111, "undesir": 111, "sublanguag": 111, "lookahead": 111, "lookbehind": 111, "period": [4, 111, 116], "breviti": 111, "opt": 111, "0123456789": 111, "0e": 111, "95": 111, "resort": 111, "boxi": 112, "assembl": 112, "triangular": 112, "quadio": 112, "h3": 112, "graphic": 113, "symmetric_differ": 113, "nucleotid": 114, "attackofth": 114, "mutat": 114, "qualifi": 114, "stairwayto": 114, "heaven": 114, "pyramid": 114, "golf": [114, 117], "windowora": 114, "anxieti": 114, "plaintext": 115, "indexofh": 115, "messag": 115, "encodedmessag": 115, "lippsd": 115, "svphw": 115, "decodedmessag": 115, "rotatedalphabet": 115, "defghijklmnopqrstuvwxyz": 115, "revis": 115, "originalmessag": 115, "dual": 115, "cycl": 116, "stem": 116, "birthdai": 116, "tripl": 116, "curv": 116, "analogi": 116, "cross": 116, "halfperiod": 116, "lcmtabl": 116, "322": 116, "379": 116, "462": 116, "1962": 116, "2023": [116, 127], "birthdat": 116, "eventd": 116, "timestamp": 116, "serialbirthd": 116, "laid": [116, 124], "briefli": 116, "criticaldai": 116, "nextdat": 116, "hing": 116, "intertwin": 116, "life": 116, "mileston": 116, "gela": [117, 119], "opton": [117, 119], "prospero": [117, 119], "lydia": 117, "toaza": [117, 119], "xena": 117, "taro": 117, "gamma": 117, "debt": 117, "qubit": 117, "bravo": 117, "charli": 117, "foxtrot": 117, "india": 117, "juliet": 117, "subarrai": 117, "profil": 117, "substanti": 117, "block": 117, "abil": [117, 120], "kept": 118, "stabil": 118, "computation": 118, "lysa": 119, "griselda": 119, "upton": 119, "delicia": 119, "topaza": 119, "clyde": 119, "elli": 119, "gill": 119, "hilari": 119, "sheridan": 119, "carol": 119, "clai": 119, "harlei": 119, "bellanc": 119, "nesta": 119, "dorian": 119, "sigurd": 119, "clinton": 119, "rene": 119, "nada": 119, "flip_adjac": 119, "arr": 119, "rebuild": 119, "clash": 119, "index_flip": 119, "cellular": 119, "automata": 119, "stencil_flip": 119, "colon": 120, "key1": 120, "value1": 120, "key2": 120, "value2": 120, "key3": 120, "value3": 120, "lend": 120, "cto": 120, "morten": 120, "ata": 120, "brian": 120, "hld": 120, "predict": 120, "kvp": 120, "greatli": 120, "perceiv": 121, "appar": 122, "newer": 122, "priorit": 122, "older": 122, "wonder": 122, "mislead": 122, "greedi": 123, "sensibl": 123, "postprocess": 123, "instruct": 123, "spread": 124, "issi": 124, "familiar": [125, 127], "battl": 125, "surround": 125, "armi": 125, "respons": 125, "lost": 125, "caesar": 126, "salad": 126, "riski": 126, "busi": 126, "ration": 126, "witha": 126, "annual": 127, "incept": 127, "provok": 127, "kenneth": 127, "1960": 127, "beginn": 127, "experienc": 127, "solvabl": 127, "jupyt": 127, "chronolog": 127, "jump": 127, "tip": 127, "expert": 127, "curiou": 127, "sharpen": 127, "sidebar": 127, "problem_list": 128, "linear": 8}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"float": [0, 17], "your": [0, 17], "boat": [0, 17], "2013": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "7": [0, 34], "get": [0, 5, 10, 28, 38, 48, 58, 63, 67, 70, 81, 92, 103, 113, 114, 126, 127, 128], "start": [0, 5, 10, 28, 38, 48, 58, 67, 70, 81, 92, 103, 113, 114, 126, 127, 128], "round": [0, 75], "tacit": [0, 55], "data": [0, 2, 4, 9, 23, 35, 37, 39, 43, 45, 46, 50, 66, 67, 68, 69, 71, 79, 88, 99, 104, 107, 111], "represent": [0, 22, 32, 55, 82, 87], "decim": 0, "point": [0, 19, 41, 50, 51, 74, 80, 124], "detect": 0, "mathemat": [0, 22, 122], "approach": [0, 4, 6, 9, 20, 22, 24, 25, 27, 29, 30, 33, 35, 37, 42, 45, 46, 61, 62, 64, 72, 77, 79, 84, 85, 88, 90, 91, 94, 96, 97, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 120, 122], "modulu": [0, 96, 98], "comparison": [0, 5, 24, 26, 27, 29, 33, 35, 36, 37, 47, 60, 61, 64, 73, 74, 85, 99, 108, 111, 112, 117, 122, 125], "toler": 0, "encod": [0, 3, 63, 82, 91], "subtract": [0, 61, 63], "A": [0, 9, 40, 50, 52, 61, 63, 67, 83, 90, 91, 105], "quirki": 0, "solut": [0, 1, 3, 4, 5, 7, 8, 21, 22, 24, 34, 37, 47, 49, 52, 53, 59, 79, 80, 83, 84, 91, 98, 100, 113, 116, 118, 121, 123], "glyph": [0, 7], "us": [0, 1, 3, 7, 22, 33, 39, 40, 41, 44, 45, 46, 50, 53, 54, 55, 63, 69, 71, 72, 74, 79, 85, 88, 89, 90, 98, 105, 106, 107, 108, 111, 113, 119, 120, 122], "concept": [0, 7, 22, 49, 50, 86, 110, 115, 116], "transcript": [0, 7], "welcom": [19, 22, 23, 24, 30, 39, 41, 43, 44, 45, 46, 47, 57, 127], "apl": [1, 10, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 53, 55, 57, 58, 61, 64, 70, 73, 78, 81, 84, 85, 87, 88, 89, 91, 92, 96, 98, 99, 103, 104, 108, 109, 112, 114, 118, 123, 125, 126, 127, 128], "quest": [1, 10, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 70, 81, 92, 103, 114, 123, 126, 127, 128], "todai": [1, 24, 46, 123], "": [1, 4, 24, 29, 39, 46, 61, 88, 123], "go": [1, 98], "forth": 1, "multipli": 1, "The": [1, 20, 32, 41, 49, 59, 61, 72, 78, 83, 91, 96, 115, 120, 125], "obviou": 1, "explor": [1, 21, 23, 65], "altern": [1, 5, 6, 30, 34, 45, 53, 59, 63, 64, 82, 88, 91, 106, 109, 112, 113, 117, 119, 120, 122, 124], "definit": [1, 9, 27, 32, 51, 56, 60, 94, 96, 112, 120], "outer": [1, 39, 50], "product": [1, 39, 41, 50, 71, 105], "gener": [1, 2, 3, 4, 29, 30, 33, 50, 57, 59, 80, 89, 108, 110, 111, 112], "indic": [1, 3, 45], "vector": [1, 33, 49, 51, 60, 62, 68, 72, 84, 85, 106, 107], "reshap": [1, 68], "fun": [1, 3], "test": [1, 9, 19, 20, 23, 33, 36, 39, 43, 45, 46, 55, 62, 64, 67, 72, 79, 86, 87, 109, 111], "further": [1, 2, 29], "cumul": [1, 64], "addit": [1, 5, 9, 29, 37, 112], "implement": [1, 2, 5, 6, 9, 20, 21, 25, 26, 27, 30, 31, 32, 35, 37, 46, 49, 51, 52, 54, 59, 62, 65, 66, 68, 74, 76, 78, 80, 82, 85, 88, 90, 97, 98, 104, 105, 106, 107, 108, 110, 113, 115, 116, 117, 118, 119], "function": [1, 2, 5, 6, 9, 20, 25, 27, 31, 32, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 64, 65, 68, 69, 72, 74, 76, 78, 79, 80, 82, 84, 85, 90, 96, 98, 105, 106, 107, 108, 110, 112, 113, 119, 120, 122], "without": 1, "oper": [1, 3, 39, 44, 49, 74, 79, 88, 98, 106, 107, 119, 120, 121], "find": [1, 8, 35, 46, 47, 52, 56, 63, 69, 94, 97, 100, 101, 107, 109, 113, 121, 124], "method": [1, 3, 45, 59, 63, 79, 82, 89, 108, 109, 111, 124], "reli": 1, "scalar": [1, 45, 66, 73, 88], "extens": 1, "final": [1, 9, 19, 20, 22, 24, 30, 36, 46, 47, 51, 52, 54, 60, 62, 67, 68, 69, 71, 75, 76, 80, 84, 86, 88, 91, 98, 99, 104, 105, 107, 109, 110], "challeng": [1, 20, 40, 95], "multipl": [1, 39, 73, 118, 121], "arithmet": 1, "conclus": [1, 2, 4, 5, 6, 8, 21, 22, 23, 25, 29, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125], "resourc": [1, 5, 9], "understand": [21, 24, 35, 36, 39, 49, 55, 64, 77, 80, 82, 83, 84, 86, 90, 91, 96, 105, 116, 119, 121, 122, 125], "numer": 85, "rang": [2, 16, 23, 82, 89], "calcul": [20, 31, 41, 42, 45, 55, 67, 71, 74, 76, 83, 90, 93, 101, 102, 104, 108, 111, 125], "sampl": [2, 35, 37, 40, 50, 66, 75, 82, 88, 106, 107], "handl": [2, 4, 9, 19, 24, 31, 45, 46, 47, 52, 54, 59, 62, 65, 66, 71, 73, 78, 80, 88, 90, 96, 106, 107, 108, 109, 113, 123], "matric": 2, "edg": [2, 9, 21, 24, 25, 52, 71, 104, 108, 109], "case": [2, 9, 21, 24, 25, 32, 33, 34, 36, 52, 62, 71, 72, 84, 104, 108, 109], "empti": [2, 3, 45, 54, 107, 123], "arrai": [2, 31, 34, 44, 47, 53, 56, 74, 77, 85, 88, 90, 117, 119, 124], "optim": [2, 9, 23, 27, 32, 51, 54, 71, 74, 91, 93, 94, 112, 117], "thi": 127, "episod": [], "an": [3, 8, 41, 53, 60, 64, 66, 100, 101, 112, 123, 124], "ident": [3, 15, 52, 73, 120], "matrix": [3, 27, 35, 37, 76, 80, 87, 110, 111, 112, 120], "1": [3, 7, 33, 45, 53, 60, 66, 79, 93, 96, 108, 111], "2": [3, 6, 33, 45, 53, 60, 66, 79, 93, 108, 111], "inequ": 3, "tabl": [3, 39, 47, 69, 75, 98, 106, 112, 125], "3": [3, 9, 33, 45, 53, 60, 66, 79, 93, 108, 111], "creat": [3, 23, 39, 41, 42, 43, 45, 50, 54, 61, 64, 66, 69, 76, 77, 80, 83, 96, 98, 105, 106, 112, 120], "4": [3, 5, 33, 45], "add": 3, "more": [3, 40, 52, 91], "innov": 3, "techniqu": [3, 8, 21, 29], "random": 3, "complex": [3, 22], "number": [3, 22, 24, 45, 53, 63, 68, 80, 86, 91, 97, 104, 110, 121, 122], "summari": [3, 26, 74, 100], "averag": [45, 104, 108], "over": [66, 87, 104], "sub": [], "period": [], "problem": [4, 6, 7, 9, 10, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 38, 41, 45, 48, 58, 59, 61, 70, 74, 77, 81, 89, 91, 92, 96, 97, 102, 103, 105, 108, 112, 114, 118, 119, 123, 124, 126, 128], "overview": [4, 6, 9, 10, 20, 26, 28, 31, 32, 34, 37, 38, 39, 42, 43, 48, 52, 58, 62, 66, 70, 71, 75, 81, 92, 99, 101, 103, 108, 110, 114, 125, 126, 128], "visual": [4, 32, 49, 124], "n": [4, 30], "wise": 4, "reduct": [4, 49, 50, 90, 104], "improv": [4, 34, 36, 47, 107, 112], "clamp": 4, "input": [4, 5, 66], "size": [4, 56, 104], "advanc": [4, 98], "error": [4, 37], "maintain": 4, "shape": [4, 62], "balanc": [5, 14], "parenthes": [5, 72], "normal": [5, 26, 34, 36, 71, 91, 99, 102], "perform": [5, 6, 9, 21, 23, 24, 25, 26, 27, 29, 30, 32, 33, 35, 36, 37, 64, 74, 75, 80, 97, 99, 107, 108, 111, 112, 117, 119], "determin": [5, 116, 125], "creativ": 5, "make": [6, 12], "grade": [6, 12, 43, 45, 75, 78, 85, 108], "comput": [6, 20, 27, 42, 45, 47, 55, 69, 71, 74, 75, 107, 116], "percentag": [6, 25, 75, 93], "pass": [6, 118], "consider": [6, 23, 25, 30, 35, 37, 64, 75, 80, 97, 99, 119], "analysi": [6, 9, 50, 122], "odd": [7, 11, 45, 53], "differ": [19, 65, 85, 91, 101, 102, 105, 113], "index": [43, 45, 69, 78, 89, 96, 112, 119], "origin": 112, "flexibl": [], "revisit": 73, "anoth": [79, 123, 124], "clever": 47, "solv": 21, "linear": [], "equat": 8, "set": [8, 42, 60, 61, 75, 77, 85, 112, 113], "up": [8, 60, 61, 75, 77, 86, 88, 112, 115], "system": 8, "miss": [8, 9], "valu": [8, 20, 55, 80, 100, 120], "iter": [8, 24, 46], "initi": [8, 9, 60, 88, 117, 118], "guess": 8, "what": [9, 13, 121, 127], "i": [7, 9, 121, 127], "word": [9, 13, 73, 76, 79], "prepar": [9, 68], "regular": [9, 21, 54, 111], "express": [9, 21, 40, 42, 54, 61, 111], "util": [9, 45, 61, 77, 85, 119], "built": [9, 47, 61, 90], "boolean": [9, 49, 54, 66, 72, 77, 106, 107], "mask": [9, 47, 54, 67, 82, 98, 105], "fix": 9, "transit": 9, "issu": [9, 34], "tip": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "success": [10, 28, 38, 48, 58, 70, 81, 92, 103, 114, 126, 128], "seem": [7, 11], "bit": [7, 11, 87], "To": [7, 11], "me": [7, 11], "keep": [5, 14, 66], "thing": [5, 14], "In": [14, 33, 61], "crisi": [3, 15], "home": [2, 16], "dimens": [19, 100], "code": [19, 32, 34, 88, 115, 117, 120, 124], "golf": [19, 108], "thought": [19, 24, 30, 36, 76, 99], "formula": [20, 71], "simplif": [20, 22, 29], "sine": 20, "pi": 20, "seri": 20, "text": [21, 26, 40, 52, 54, 59, 82, 99, 109, 123], "process": [21, 23, 25, 49, 87, 94, 96, 99, 118, 120], "compar": [21, 60, 61, 105, 107, 122], "address": [21, 68], "insight": 21, "statement": [22, 25, 45, 61, 97], "domain": 22, "simul": [24, 65], "recurs": [24, 27, 31, 45], "zero": [24, 52, 68, 89], "leverag": [24, 47], "theori": [24, 101], "analyz": [25, 35, 65, 86, 91, 108], "largest": 25, "increas": [25, 86], "step": [25, 26, 30, 46, 53, 54, 59, 60, 62, 66, 89, 93, 95, 98, 116, 118, 121, 122], "develop": [25, 117, 119], "exampl": [7, 25, 30, 35, 39, 45, 49, 50, 56, 62, 68, 72, 73, 83, 86, 87, 88, 89, 90, 95, 98, 99, 100, 102, 104, 108, 109, 116, 117, 119, 120, 122, 125], "space": [26, 60, 69, 76, 88, 115, 123], "methodologi": [26, 73, 122], "fibonacci": 27, "sequenc": [27, 30, 35, 57, 59, 82, 86, 97, 110], "effici": [27, 36, 89, 100, 107, 112, 118], "tail": 27, "call": [27, 68], "pairwis": [27, 73], "sum": [27, 47, 125], "transform": [27, 99], "other": 27, "2014": 28, "api": 29, "center": [29, 76], "pascal": 29, "triangl": 29, "introduct": [29, 30, 34, 40, 43, 54, 65, 66, 69, 73, 79, 82, 108], "breakdown": [29, 95], "flat": 29, "nest": 29, "row": [29, 34, 76, 87], "strategi": [29, 67, 98, 107, 108], "farei": 30, "5": [3, 30], "standard": 31, "deviat": 31, "defin": [31, 47, 51, 53, 74, 80, 107, 112], "mean": 31, "helper": [31, 54], "ani": 31, "rank": [31, 34, 44, 88, 108, 113], "compact": [31, 40], "style": [31, 51], "six": 32, "coordin": 32, "check": [32, 51, 73, 82, 86, 87, 94], "overlap": 32, "contain": 32, "build": [32, 64, 112], "swap": 33, "interior": 33, "letter": [33, 36, 50, 51, 73, 78, 80, 106], "descript": [7, 33, 42], "pair": [33, 60, 67, 71, 120], "flip": 33, "stencil": [33, 119, 120], "place": 33, "reorder": 33, "permut": [33, 62, 69], "from": [34, 69, 80, 118], "2015": [34, 38], "solver": 34, "competit": 34, "high": [34, 46], "full": [34, 83], "match": [34, 47, 62], "catch": 35, "length": [35, 59, 79, 97, 107], "correct": 35, "simplifi": [35, 42, 55, 60, 105, 124], "anagram": [36, 60], "filter": [36, 67, 98], "construct": [36, 72, 75, 110, 113, 121], "cap": 37, "wiki": 37, "progress": 37, "dyadic": [37, 62, 96], "iota": [37, 96], "argument": [37, 50, 60, 62, 75, 113], "modern": 37, "kei": [37, 79, 106, 120], "base": [37, 59, 83, 89, 111], "divis": [39, 63, 98], "long": 39, "right": [39, 99], "scope": 39, "appli": [39, 51, 76, 82, 115, 119, 120], "logic": [39, 61, 82, 90], "higher": [39, 41, 113], "order": [39, 41, 46, 79], "delimit": 40, "split": [40, 63, 69, 79, 109, 123], "identifi": [40, 66, 67, 77, 80, 93, 100, 107], "note": 40, "syntax": [40, 45], "membership": [40, 68], "modifi": [40, 113], "total": 41, "anonym": 41, "free": [41, 50, 51], "program": [41, 116], "why": 41, "dot": 41, "technic": 41, "reason": [41, 101], "practic": 41, "8th": 42, "implicit": 42, "map": [42, 66, 68, 80, 96], "avoid": [42, 107], "redund": [42, 94], "variat": [42, 86], "list": [43, 45, 64, 72, 79, 86, 97, 104, 107, 118], "element": [43, 45, 46, 47, 56, 85, 88, 117, 118, 119, 123], "convert": [43, 68, 78, 87, 90, 102], "concaten": [44, 52, 56, 87], "two": [44, 60, 86, 113, 124], "even": [45, 53], "singl": [45, 73, 106, 118], "median": 45, "sort": [45, 60, 79, 85, 108], "drop": [45, 88], "delta": 45, "result": [45, 50, 52, 54, 74, 78, 98, 107], "mode": 46, "compress": 46, "stabil": 46, "remain": 46, "adjust": [46, 47, 76, 80], "appeal": 47, "uniqu": 47, "multi": [47, 78, 117, 119], "dimension": [47, 65, 117, 119], "2016": 48, "scan": [49, 86], "properti": 49, "less": 49, "than": 49, "context": 49, "run": [49, 107], "count": [50, 64, 75, 105, 106, 125], "string": [50, 93, 105, 106], "guid": [50, 61, 90, 105], "summat": [50, 94], "densiti": 50, "composit": 50, "bind": 50, "purpos": 50, "charact": [51, 52, 60, 68, 93, 106, 109, 111, 115], "valid": [51, 62, 67, 77, 95], "locat": [52, 67], "lambda": [52, 60, 74, 79], "robust": 52, "safe": 52, "ad": 52, "ensur": 53, "becom": 53, "write": [53, 106], "remov": [54, 60, 69, 111, 118, 120], "between": [54, 101, 113], "doubl": [54, 116], "quot": 54, "pattern": [54, 57, 86], "intermedi": 54, "state": [54, 87], "machin": 54, "manag": 54, "area": [55, 71, 100, 101], "circl": [55, 101], "sector": 55, "fit": 56, "squar": [56, 94, 101], "scenario": [56, 109], "appropri": 56, "pad": [56, 76], "refin": [56, 61], "self": 56, "2017": 58, "chop": 59, "given": [59, 100, 121], "fake": 59, "dna": [59, 93, 105, 106], "maximum": [59, 64, 107], "box": 59, "level": 59, "checker": 60, "preprocess": 60, "date": [61, 69], "net": 61, "environ": [61, 112], "datetim": 61, "object": [61, 98], "convers": [61, 83, 87], "transpos": 62, "setup": [62, 74, 95], "criteria": 62, "invalid": [62, 95], "detail": [7, 62], "integ": [63, 89, 98, 111], "fraction": [63, 93, 121], "part": [63, 66], "remaind": [63, 98], "neat": 63, "trick": 63, "visibl": 64, "travers": 64, "dice": [65, 125], "roll": 65, "outcom": 65, "throw": [65, 125], "type": 65, "limit": 65, "shift": 66, "amount": 66, "placement": 66, "canva": 66, "combin": [66, 86, 101], "all": 66, "simpl": [67, 75, 115], "xml": 67, "rule": [67, 86, 90, 125], "angl": 67, "bracket": 67, "search": 67, "gregorian": 68, "year": [68, 90, 128], "chines": 68, "zodiac": [68, 69], "anim": 68, "work": 68, "cycl": 68, "sign": 69, "clean": [69, 88, 115], "column": [69, 83], "transposit": 69, "rotat": [69, 76, 115], "pars": [69, 120], "quad": 69, "vfi": 69, "cutoff": [69, 80], "interv": [69, 78], "2018": 70, "polygon": 71, "shoelac": 71, "extract": [71, 125], "diagon": [71, 94, 125], "chunk": 72, "segment": [72, 97, 123], "partit": [72, 84, 111, 119], "execut": 72, "reduc": [72, 87, 121], "consecut": [73, 97], "v": 73, "distanc": 74, "around": 74, "path": 74, "trigonometri": 74, "embrac": 74, "compil": [75, 80], "statist": 75, "safeti": 75, "mix": 76, "truncat": 76, "movement": 77, "chess": [77, 95], "knight": 77, "chessboard": 77, "move": [4, 77, 85], "pythagorean": 77, "theorem": 77, "score": [78, 108], "background": 78, "illustr": 78, "lookup": [78, 80], "non": [78, 86, 118], "posit": [78, 84, 108, 109], "translat": 80, "telephon": 80, "digit": [80, 91], "plain": 80, "keypad": 80, "flatten": 80, "relev": 80, "everyth": 80, "togeth": 80, "2019": 81, "byte": 82, "utf": 82, "8": [1, 82], "continu": 82, "label": 83, "spreadsheet": 83, "softwar": 83, "basic": 83, "z": 83, "overflow": 83, "26": 83, "power": 83, "group": [84, 98, 108], "specif": [84, 89, 102], "neg": 84, "condit": [84, 87, 96], "revers": [84, 115], "eleg": [84, 91], "structur": [84, 127], "front": 85, "tradit": 85, "manipul": 85, "intersect": 85, "decreas": [86, 118], "down": 86, "opposit": 86, "direct": 86, "violat": 86, "re": 86, "assess": 86, "binari": 87, "verif": 87, "emul": 88, "print": 88, "behavior": [88, 96], "format": 88, "each": [88, 120], "replic": 88, "default": [88, 96], "displai": 88, "extra": 88, "touch": 88, "unicod": 88, "inclus": 89, "leap": 90, "xor": 90, "except": 90, "growth": 91, "decod": 91, "core": 91, "2020": 92, "magic": 94, "elimin": 94, "cover": 96, "chang": 96, "better": 96, "One": [96, 124], "time": [96, 102], "post": 96, "explicit": 96, "longest": [97, 107], "expect": 98, "creation": 98, "forward": 98, "justifi": 99, "incom": 99, "justif": 99, "rectangl": 100, "12": 100, "candid": 100, "divisor": 100, "middl": 100, "inscrib": 101, "Its": 101, "circumscrib": 101, "symbol": 101, "absolut": 102, "minut": 102, "2021": 103, "window": 104, "extend": [104, 106], "wrap": [105, 119], "inner": 105, "neatli": 106, "Ones": 107, "commut": 107, "import": 107, "requir": 107, "librari": 107, "unnecessari": 107, "fork": [107, 113, 121], "ti": 108, "stabl": 108, "concentr": 110, "ring": 110, "expand": 110, "minimum": 110, "insert": [111, 123], "separ": 111, "larg": 111, "staircas": 112, "builder": 112, "symmetr": 113, "2022": 114, "caesar": 115, "cipher": 115, "uppercas": 115, "next": 116, "critic": 116, "dai": 116, "interchang": [117, 119], "horizont": 117, "adjac": [117, 119], "algorithm": [117, 119], "explan": [7, 118], "subarrai": 119, "emploi": 119, "custom": 120, "notat": 120, "cut": 120, "duplic": 120, "lowest": 121, "common": 121, "version": 122, "evalu": 122, "classic": 123, "wai": 123, "automat": 123, "merg": 123, "trail": 123, "excess": 123, "end": 124, "mechan": 125, "risk": 125, "player": 125, "loss": 125, "2023": 126, "about": 127, "book": 127, "join": 127, "6": 2, "It": 4, "experi": 4, "9": 4, "salvat": 8, "10": 8, "f": 7, "g": 7, "h": 7, "j": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Float your Boat 2013-7": [[0, "float-your-boat-2013-7"]], "Getting Started": [[0, "getting-started"], [10, "getting-started"], [28, "getting-started"], [38, "getting-started"], [48, "getting-started"], [58, "getting-started"], [67, "getting-started"], [70, "getting-started"], [81, "getting-started"], [92, "getting-started"], [103, "getting-started"], [113, "getting-started"], [114, "getting-started"], [126, "getting-started"], [127, "getting-started"], [128, "getting-started"], [5, "getting-started"]], "Rounding": [[0, "rounding"]], "Tacit": [[0, "tacit"]], "Data Representation": [[0, "data-representation"]], "Decimal Point Detection": [[0, "decimal-point-detection"]], "Mathematical Approaches": [[0, "mathematical-approaches"]], "Modulus": [[0, "modulus"]], "Comparison Tolerance": [[0, "comparison-tolerance"]], "Encode": [[0, "encode"]], "Subtract": [[0, "subtract"]], "A Quirky Solution": [[0, "a-quirky-solution"]], "Glyphs Used": [[0, "glyphs-used"], [7, "glyphs-used"]], "Concepts Used": [[0, "concepts-used"], [7, "concepts-used"]], "Transcript": [[0, "transcript"], [7, "transcript"]], "APL Quest 2013": [[10, "apl-quest-2013"]], "Overview": [[10, "overview"], [28, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [48, "overview"], [52, "overview"], [58, "overview"], [62, "overview"], [70, "overview"], [75, "overview"], [81, "overview"], [92, "overview"], [103, "overview"], [114, "overview"], [126, "overview"], [128, "overview"]], "Problems": [[10, "problems"], [28, "problems"], [38, "problems"], [48, "problems"], [58, "problems"], [70, "problems"], [81, "problems"], [92, "problems"], [103, "problems"], [114, "problems"], [126, "problems"], [128, "problems"]], "Tips for Success": [[10, "tips-for-success"], [28, "tips-for-success"], [38, "tips-for-success"], [48, "tips-for-success"], [58, "tips-for-success"], [70, "tips-for-success"], [81, "tips-for-success"], [92, "tips-for-success"], [103, "tips-for-success"], [114, "tips-for-success"], [126, "tips-for-success"], [128, "tips-for-success"]], "Making the Grade": [[12, "making-the-grade"]], "Whats in a Word": [[13, "whats-in-a-word"]], " Keeping Things In Balance": [[14, "keeping-things-in-balance"]], "Identity Crisis": [[15, "identity-crisis"]], "Home on the range": [[16, "home-on-the-range"]], "Float your Boat": [[17, "float-your-boat"]], "Welcome to the APL Quest": [[19, "welcome-to-the-apl-quest"], [22, "welcome-to-the-apl-quest"], [23, "welcome-to-the-apl-quest"], [24, "welcome-to-the-apl-quest"], [30, "welcome-to-the-apl-quest"], [39, "welcome-to-the-apl-quest"], [41, "welcome-to-the-apl-quest"], [43, "welcome-to-the-apl-quest"], [44, "welcome-to-the-apl-quest"], [45, "welcome-to-the-apl-quest"], [57, "welcome-to-the-apl-quest"]], "Testing in Different Dimensions": [[19, "testing-in-different-dimensions"]], "Handling Points with Different Dimensions": [[19, "handling-points-with-different-dimensions"]], "Code Golfing": [[19, "code-golfing"]], "Final Thoughts": [[19, "final-thoughts"], [24, "final-thoughts"], [30, "final-thoughts"], [36, "final-thoughts"], [76, "final-thoughts"], [99, "final-thoughts"]], "APL Quest": [[20, "apl-quest"], [35, "apl-quest"]], "Quest Overview": [[20, "quest-overview"], [43, "quest-overview"]], "The Formula": [[20, "the-formula"]], "Simplification": [[20, "simplification"], [22, "simplification"]], "Testing Values": [[20, "testing-values"]], "Challenge": [[20, "challenge"]], "Implementing Sine Function": [[20, "implementing-sine-function"]], "Implementing Pi": [[20, "implementing-pi"]], "Series Approach for Pi": [[20, "series-approach-for-pi"]], "Calculation": [[20, "calculation"]], "Final Computation": [[20, "final-computation"]], "Conclusion": [[21, "conclusion"], [22, "conclusion"], [23, "conclusion"], [25, "conclusion"], [29, "conclusion"], [31, "conclusion"], [33, "conclusion"], [34, "conclusion"], [37, "conclusion"], [39, "conclusion"], [40, "conclusion"], [41, "conclusion"], [42, "conclusion"], [43, "conclusion"], [44, "conclusion"], [45, "conclusion"], [46, "conclusion"], [47, "conclusion"], [49, "conclusion"], [50, "conclusion"], [51, "conclusion"], [52, "conclusion"], [53, "conclusion"], [54, "conclusion"], [55, "conclusion"], [56, "conclusion"], [59, "conclusion"], [60, "conclusion"], [61, "conclusion"], [62, "conclusion"], [64, "conclusion"], [65, "conclusion"], [66, "conclusion"], [67, "conclusion"], [68, "conclusion"], [69, "conclusion"], [71, "conclusion"], [73, "conclusion"], [74, "conclusion"], [75, "conclusion"], [77, "conclusion"], [78, "conclusion"], [79, "conclusion"], [80, "conclusion"], [82, "conclusion"], [83, "conclusion"], [84, "conclusion"], [85, "conclusion"], [86, "conclusion"], [88, "conclusion"], [89, "conclusion"], [90, "conclusion"], [91, "conclusion"], [93, "conclusion"], [94, "conclusion"], [96, "conclusion"], [97, "conclusion"], [98, "conclusion"], [101, "conclusion"], [102, "conclusion"], [104, "conclusion"], [105, "conclusion"], [106, "conclusion"], [107, "conclusion"], [108, "conclusion"], [109, "conclusion"], [112, "conclusion"], [113, "conclusion"], [115, "conclusion"], [116, "conclusion"], [117, "conclusion"], [118, "conclusion"], [119, "conclusion"], [120, "conclusion"], [121, "conclusion"], [122, "conclusion"], [124, "conclusion"], [125, "conclusion"], [1, "conclusion"], [2, "conclusion"], [4, "conclusion"], [5, "conclusion"], [6, "conclusion"], [8, "conclusion"]], "APL Quest: Problem Solving and Performance of Text Processing Techniques": [[21, "apl-quest-problem-solving-and-performance-of-text-processing-techniques"]], "Understanding the Problem": [[21, "understanding-the-problem"], [24, "understanding-the-problem"], [35, "understanding-the-problem"], [91, "understanding-the-problem"], [105, "understanding-the-problem"], [119, "understanding-the-problem"]], "Implementing the Solution": [[21, "implementing-the-solution"], [80, "implementing-the-solution"], [113, "implementing-the-solution"]], "Comparing Performance": [[21, "comparing-performance"]], "Addressing Edge Cases": [[21, "addressing-edge-cases"]], "Exploring Regular Expressions": [[21, "exploring-regular-expressions"]], "Performance Insights": [[21, "performance-insights"]], "Problem Statement": [[22, "problem-statement"], [25, "problem-statement"], [45, "problem-statement"], [97, "problem-statement"]], "Approach": [[22, "approach"], [25, "approach"], [42, "approach"], [97, "approach"], [109, "approach"]], "Mathematical Representation": [[22, "mathematical-representation"]], "Complex Number Approach": [[22, "complex-number-approach"]], "Final Solution Using Domain Concepts": [[22, "final-solution-using-domain-concepts"]], "Performance Considerations": [[23, "performance-considerations"], [25, "performance-considerations"], [30, "performance-considerations"], [64, "performance-considerations"], [80, "performance-considerations"], [99, "performance-considerations"], [119, "performance-considerations"], [6, "performance-considerations"]], "Test Data": [[23, "test-data"], [45, "test-data"], [67, "test-data"], [79, "test-data"]], "Optimizing the Process": [[23, "optimizing-the-process"]], "Exploring Ranges": [[23, "exploring-ranges"]], "Creating Test Data": [[23, "creating-test-data"], [39, "creating-test-data"], [43, "creating-test-data"]], "": [[23, "id1"]], "Today\u2019s Quest": [[24, "today-s-quest"], [123, "today-s-quest"]], "Simulation Approach": [[24, "simulation-approach"]], "Recursive Solution": [[24, "recursive-solution"]], "Handling Edge Cases with Zero": [[24, "handling-edge-cases-with-zero"]], "Iterative Solution": [[24, "iterative-solution"]], "Performance Comparison": [[24, "performance-comparison"], [26, "performance-comparison"], [27, "performance-comparison"], [29, "performance-comparison"], [33, "performance-comparison"], [35, "performance-comparison"], [36, "performance-comparison"], [37, "performance-comparison"], [99, "performance-comparison"], [108, "performance-comparison"], [111, "performance-comparison"], [112, "performance-comparison"], [117, "performance-comparison"]], "Leveraging Number Theory": [[24, "leveraging-number-theory"]], "APL Quest: Analyzing the Largest Percentage Increase": [[25, "apl-quest-analyzing-the-largest-percentage-increase"]], "Step-by-Step Process": [[25, "step-by-step-process"], [118, "step-by-step-process"]], "Function Development": [[25, "function-development"]], "Edge Cases": [[25, "edge-cases"]], "APL Implementation Examples": [[25, "apl-implementation-examples"]], "Summary": [[26, "summary"], [3, "summary"]], "Problem Overview": [[26, "problem-overview"], [31, "problem-overview"], [34, "problem-overview"], [108, "problem-overview"], [4, "problem-overview"], [6, "problem-overview"], [9, "problem-overview"]], "APL Quest: Normalizing Text Spaces": [[26, "apl-quest-normalizing-text-spaces"]], "Methodology": [[26, "methodology"], [73, "methodology"]], "Implementation Steps": [[26, "implementation-steps"], [46, "implementation-steps"]], "Implementation in APL": [[26, "implementation-in-apl"]], "Computing the Fibonacci Sequence": [[27, "computing-the-fibonacci-sequence"]], "Fibonacci Sequence Definition": [[27, "fibonacci-sequence-definition"]], "Efficient Computation": [[27, "efficient-computation"]], "Recursive Function Implementation": [[27, "recursive-function-implementation"]], "Tail Call Optimization": [[27, "tail-call-optimization"]], "Pairwise Sum": [[27, "pairwise-sum"]], "Transformation Matrix": [[27, "transformation-matrix"]], "Other Approaches": [[27, "other-approaches"]], "APL Quest 2014": [[28, "apl-quest-2014"]], "API Quest: Generating a Centered Pascal\u2019s Triangle": [[29, "api-quest-generating-a-centered-pascal-s-triangle"]], "Introduction": [[29, "introduction"], [30, "introduction"], [34, "introduction"], [40, "introduction"], [43, "introduction"], [54, "introduction"], [65, "introduction"], [69, "introduction"], [73, "introduction"], [79, "introduction"], [108, "introduction"]], "Problem Breakdown": [[29, "problem-breakdown"]], "Generating Pascal\u2019s Triangle": [[29, "generating-pascal-s-triangle"]], "Flat Approach": [[29, "flat-approach"]], "Nested Approach": [[29, "nested-approach"]], "Centering the Rows": [[29, "centering-the-rows"]], "Strategy for Centering": [[29, "strategy-for-centering"]], "Further Techniques": [[29, "further-techniques"]], "Simplification and Additional Approaches": [[29, "simplification-and-additional-approaches"]], "Alternative Approaches": [[30, "alternative-approaches"], [64, "alternative-approaches"], [88, "alternative-approaches"], [112, "alternative-approaches"], [117, "alternative-approaches"], [119, "alternative-approaches"], [120, "alternative-approaches"], [6, "alternative-approaches"]], "Farey Sequence": [[30, "farey-sequence"]], "Example: n = 5": [[30, "example-n-5"]], "Generating the Sequence": [[30, "generating-the-sequence"], [57, "generating-the-sequence"], [110, "generating-the-sequence"]], "Step-by-step Implementation": [[30, "step-by-step-implementation"], [66, "step-by-step-implementation"]], "APL Quest: Standard Deviation Calculation": [[31, "apl-quest-standard-deviation-calculation"]], "Defining the Mean and Deviation": [[31, "defining-the-mean-and-deviation"]], "Helper Functions": [[31, "helper-functions"]], "Handling Arrays of Any Rank": [[31, "handling-arrays-of-any-rank"]], "Compact Style": [[31, "compact-style"]], "Implementing Recursion": [[31, "implementing-recursion"]], "APL Quest: Swapping Interior Letters": [[33, "apl-quest-swapping-interior-letters"]], "Problem Description": [[33, "problem-description"], [7, "problem-description"]], "Test Cases": [[33, "test-cases"]], "Approach 1: Pairing and Flipping": [[33, "approach-1-pairing-and-flipping"]], "Approach 2: Using Stencil": [[33, "approach-2-using-stencil"]], "Approach 3: In-Place Reordering": [[33, "approach-3-in-place-reordering"]], "Approach 4: Generating a Permutation Vector": [[33, "approach-4-generating-a-permutation-vector"]], "APL Quest: Problem 7 from the 2015 APL Problem Solver Competition": [[34, "apl-quest-problem-7-from-the-2015-apl-problem-solver-competition"]], "Normalizing Case": [[34, "normalizing-case"]], "Improving the Code": [[34, "improving-the-code"]], "High Rank Arrays Issue": [[34, "high-rank-arrays-issue"]], "Full Row Match": [[34, "full-row-match"]], "Alternative Solution": [[34, "alternative-solution"]], "Example Catch": [[35, "example-catch"]], "Analyzing Sample Data": [[35, "analyzing-sample-data"]], "Function Implementation": [[35, "function-implementation"]], "Matrix Considerations": [[35, "matrix-considerations"]], "Finding Lengths of Sequences": [[35, "finding-lengths-of-sequences"]], "Correcting the Approach": [[35, "correcting-the-approach"]], "Simplifying the Problem": [[35, "simplifying-the-problem"]], "APL Quest: Anagrams Problem": [[36, "apl-quest-anagrams-problem"]], "Understanding Anagrams": [[36, "understanding-anagrams"]], "Filtering Letters": [[36, "filtering-letters"]], "Normalization and Comparison": [[36, "normalization-and-comparison"]], "Efficiency Improvements": [[36, "efficiency-improvements"]], "Testing the Function": [[36, "testing-the-function"]], "Constructing Test Cases": [[36, "constructing-test-cases"]], "Conclusion: Understanding Anagrams": [[36, "conclusion-understanding-anagrams"]], "Implementing the Function": [[37, "implementing-the-function"], [74, "implementing-the-function"], [76, "implementing-the-function"], [2, "implementing-the-function"], [5, "implementing-the-function"]], "APL Quest Cap Wiki: Progressive Dyadic Iota": [[37, "apl-quest-cap-wiki-progressive-dyadic-iota"]], "Sample Data": [[37, "sample-data"], [88, "sample-data"], [107, "sample-data"]], "Error with Matrix Arguments": [[37, "error-with-matrix-arguments"]], "Modernized Solution": [[37, "modernized-solution"]], "Key-Based Approach": [[37, "key-based-approach"]], "Additional Considerations": [[37, "additional-considerations"]], "APL Quest 2015": [[38, "apl-quest-2015"]], "Understanding APL\u2019s Outer Product": [[39, "understanding-apl-s-outer-product"]], "Example: Multiplication Table": [[39, "example-multiplication-table"]], "Creating a Divisibility Table": [[39, "creating-a-divisibility-table"]], "Using APL\u2019s Long Right Scope": [[39, "using-apl-s-long-right-scope"]], "Applying Logical Operations": [[39, "applying-logical-operations"]], "Creating a Higher Order Function": [[39, "creating-a-higher-order-function"]], "APL Quest: Delimiter Splitting Challenge": [[40, "apl-quest-delimiter-splitting-challenge"]], "Sample Text": [[40, "sample-text"], [82, "sample-text"]], "Identifying Delimiters": [[40, "identifying-delimiters"]], "A Note on Syntax": [[40, "a-note-on-syntax"]], "Using Membership and Modifiers": [[40, "using-membership-and-modifiers"]], "A More Compact Expression": [[40, "a-more-compact-expression"]], "The Problem": [[41, "the-problem"], [59, "the-problem"], [96, "the-problem"]], "Calculating the Total": [[41, "calculating-the-total"]], "Creating an Anonymous Function": [[41, "creating-an-anonymous-function"]], "Point-Free Programming": [[41, "point-free-programming"]], "Higher-Order Functions": [[41, "higher-order-functions"]], "Why Use Dot Product?": [[41, "why-use-dot-product"]], "Technical Reasons": [[41, "technical-reasons"]], "Practical Reasons": [[41, "practical-reasons"]], "APL Quest: 8th Quest Overview": [[42, "apl-quest-8th-quest-overview"]], "Quest Description": [[42, "quest-description"]], "Implicit Mapping in APL": [[42, "implicit-mapping-in-apl"]], "Creating a Function": [[42, "creating-a-function"], [50, "creating-a-function"], [106, "creating-a-function"]], "Simplifying the Expression": [[42, "simplifying-the-expression"]], "Avoiding Redundant Calculations": [[42, "avoiding-redundant-calculations"]], "Set Computations Variation": [[42, "set-computations-variation"]], "Testing the List": [[43, "testing-the-list"]], "Grading the Elements": [[43, "grading-the-elements"]], "Indexing the Elements": [[43, "indexing-the-elements"]], "Converting to a Function": [[43, "converting-to-a-function"]], "Concatenate Two Arrays": [[44, "concatenate-two-arrays"]], "Using the Rank Operator": [[44, "using-the-rank-operator"]], "Example 1: Odd Number of Elements": [[45, "example-1-odd-number-of-elements"]], "Example 2: Even Number of Elements": [[45, "example-2-even-number-of-elements"]], "Example 3: Single Element": [[45, "example-3-single-element"]], "Example 4: Empty List": [[45, "example-4-empty-list"]], "APL Syntax": [[45, "apl-syntax"]], "Approaching the Computation of the Median": [[45, "approaching-the-computation-of-the-median"]], "Sorting and Dropping Elements": [[45, "sorting-and-dropping-elements"]], "Handling Scalars": [[45, "handling-scalars"], [73, "handling-scalars"], [88, "handling-scalars"]], "Utilizing the Grade Function": [[45, "utilizing-the-grade-function"], [85, "utilizing-the-grade-function"]], "Indexing to Create a Sorted List": [[45, "indexing-to-create-a-sorted-list"]], "Recursive Function for Median Calculation": [[45, "recursive-function-for-median-calculation"]], "Using Delta for Recursion": [[45, "using-delta-for-recursion"]], "Averaging the Result": [[45, "averaging-the-result"]], "Alternative Method: Dropping Indices": [[45, "alternative-method-dropping-indices"]], "Welcome to APL Quest": [[46, "welcome-to-apl-quest"], [127, "welcome-to-apl-quest"]], "Today\u2019s Quest: Find the Mode": [[46, "today-s-quest-find-the-mode"]], "Test Data and Approach": [[46, "test-data-and-approach"]], "Compressing the Data": [[46, "compressing-the-data"]], "Iteration and Stability": [[46, "iteration-and-stability"]], "Handling Remaining Elements": [[46, "handling-remaining-elements"]], "Final Adjustments for Order": [[46, "final-adjustments-for-order"]], "Using a High Order Function": [[46, "using-a-high-order-function"]], "Welcome to the Appeal Quest": [[47, "welcome-to-the-appeal-quest"]], "Defining the Function": [[47, "defining-the-function"], [107, "defining-the-function"], [112, "defining-the-function"]], "Comparison Table": [[47, "comparison-table"], [125, "comparison-table"]], "Summing Matches": [[47, "summing-matches"]], "Improving Computation": [[47, "improving-computation"]], "Finding Unique Elements": [[47, "finding-unique-elements"]], "Leveraging Built-in Functions": [[47, "leveraging-built-in-functions"]], "Final Adjustments": [[47, "final-adjustments"], [80, "final-adjustments"]], "Handling Multi-dimensional Arrays": [[47, "handling-multi-dimensional-arrays"]], "Clever Solutions with unique mask": [[47, "clever-solutions-with-unique-mask"]], "APL Quest 2016": [[48, "apl-quest-2016"]], "Understanding Boolean Vector Processing in APL": [[49, "understanding-boolean-vector-processing-in-apl"]], "The APL Solution": [[49, "the-apl-solution"]], "The Concept of Scan": [[49, "the-concept-of-scan"]], "Properties of Less Than in Boolean Context": [[49, "properties-of-less-than-in-boolean-context"]], "The Reduction Process": [[49, "the-reduction-process"]], "Visualizing the Operation": [[49, "visualizing-the-operation"]], "Example Implementation": [[49, "example-implementation"], [90, "example-implementation"]], "Running the Functions": [[49, "running-the-functions"]], "Counting Letters in a String: A Guide": [[50, "counting-letters-in-a-string-a-guide"]], "Sample Data Analysis": [[50, "sample-data-analysis"]], "Outer Product Concept": [[50, "outer-product-concept"]], "Example of Outer Product Result": [[50, "example-of-outer-product-result"]], "Summation and Reduction": [[50, "summation-and-reduction"]], "Point-Free Function": [[50, "point-free-function"]], "Using Density Function": [[50, "using-density-function"]], "Function Composition": [[50, "function-composition"]], "Binding Arguments": [[50, "binding-arguments"]], "Creating a General Purpose Function": [[50, "creating-a-general-purpose-function"]], "Checking Character Vectors for Valid Letters": [[51, "checking-character-vectors-for-valid-letters"]], "Defining the Character Vector": [[51, "defining-the-character-vector"]], "Function Definition": [[51, "function-definition"], [120, "function-definition"]], "Function Optimization": [[51, "function-optimization"]], "Point-Free Style": [[51, "point-free-style"]], "Final Implementation": [[51, "final-implementation"], [104, "final-implementation"], [110, "final-implementation"]], "Applying the Function": [[51, "applying-the-function"]], "Handling Edge Cases": [[52, "handling-edge-cases"], [71, "handling-edge-cases"], [108, "handling-edge-cases"], [109, "handling-edge-cases"], [9, "handling-edge-cases"]], "Finding Locations of Identical Characters in Text": [[52, "finding-locations-of-identical-characters-in-text"]], "Implementation with Lambda Function": [[52, "implementation-with-lambda-function"]], "A More Robust Solution": [[52, "a-more-robust-solution"]], "Concatenating for a Safe Result": [[52, "concatenating-for-a-safe-result"]], "Adding the Final Zero": [[52, "adding-the-final-zero"]], "Ensure Odd Numbers Become Even Using APL": [[53, "ensure-odd-numbers-become-even-using-apl"]], "Step 1: Define an Array": [[53, "step-1-define-an-array"]], "Step 2: Write the Function": [[53, "step-2-write-the-function"]], "Step 3: Alternative Solution": [[53, "step-3-alternative-solution"]], "Removing Text Between Double Quotes Using Regular Expressions": [[54, "removing-text-between-double-quotes-using-regular-expressions"]], "Using Regular Expressions": [[54, "using-regular-expressions"]], "Regular Expression Pattern": [[54, "regular-expression-pattern"]], "Handling Empty Quotes": [[54, "handling-empty-quotes"]], "Intermediate Steps": [[54, "intermediate-steps"]], "Helper Function": [[54, "helper-function"]], "Creating the Mask": [[54, "creating-the-mask"]], "Boolean Mask Optimization": [[54, "boolean-mask-optimization"]], "Implementation of a State Machine": [[54, "implementation-of-a-state-machine"]], "State Management": [[54, "state-management"]], "Final Result": [[54, "final-result"]], "Computing Areas of Circle Sectors Using APL": [[55, "computing-areas-of-circle-sectors-using-apl"]], "Understanding the Area of a Circle": [[55, "understanding-the-area-of-a-circle"]], "APL Representation": [[55, "apl-representation"]], "Testing with Values": [[55, "testing-with-values"]], "Computing Area of Circle Sectors": [[55, "computing-area-of-circle-sectors"]], "Simplifying the Calculation": [[55, "simplifying-the-calculation"]], "Using Tacit Functions": [[55, "using-tacit-functions"]], "Fitting Elements into a Square Array": [[56, "fitting-elements-into-a-square-array"]], "Example Scenario": [[56, "example-scenario"], [109, "example-scenario"]], "Finding the Appropriate Size": [[56, "finding-the-appropriate-size"]], "Padding the Array": [[56, "padding-the-array"]], "Refining the Definition": [[56, "refining-the-definition"]], "Self-Concatenation": [[56, "self-concatenation"]], "Function Patterns": [[57, "function-patterns"]], "APL Quest 2017": [[58, "apl-quest-2017"]], "Chopping Text into Sequences of a Given Length": [[59, "chopping-text-into-sequences-of-a-given-length"]], "Generating Fake DNA": [[59, "generating-fake-dna"]], "DNA Bases": [[59, "dna-bases"]], "Handling Maximum Boxing Levels": [[59, "handling-maximum-boxing-levels"]], "The Solution": [[59, "the-solution"]], "Alternative Method": [[59, "alternative-method"], [109, "alternative-method"]], "Implementation Steps:": [[59, "implementation-steps"]], "Comparing Two Character Vectors: An Anagram Checker": [[60, "comparing-two-character-vectors-an-anagram-checker"]], "Anagram Definition": [[60, "anagram-definition"]], "Setting Up Arguments": [[60, "setting-up-arguments"]], "Initial Pairing": [[60, "initial-pairing"]], "Preprocessing Steps": [[60, "preprocessing-steps"]], "Step 1: Removing Spaces": [[60, "step-1-removing-spaces"]], "Step 2: Sorting Characters": [[60, "step-2-sorting-characters"]], "Step 3: Comparison": [[60, "step-3-comparison"]], "Simplifying with a Lambda Function": [[60, "simplifying-with-a-lambda-function"]], "Final Steps": [[60, "final-steps"]], "Comparing Dates in APL: A Guide": [[61, "comparing-dates-in-apl-a-guide"]], "The Problem Statement": [[61, "the-problem-statement"]], "Approaching the Problem": [[61, "approaching-the-problem"]], "Setting Up .NET Environment": [[61, "setting-up-net-environment"]], "Creating DateTime Objects": [[61, "creating-datetime-objects"]], "Comparison Logic": [[61, "comparison-logic"]], "Utilizing APL\u2019s Built-In Functionality": [[61, "utilizing-apls-built-in-functionality"]], "Conversion and Subtraction": [[61, "conversion-and-subtraction"]], "Refined Function Expression": [[61, "refined-function-expression"]], "Validating Dyadic Transpose Arguments": [[62, "validating-dyadic-transpose-arguments"]], "Test Cases Setup": [[62, "test-cases-setup"]], "Validity Criteria": [[62, "validity-criteria"]], "Examples of Valid and Invalid Cases": [[62, "examples-of-valid-and-invalid-cases"]], "Detailed Approach": [[62, "detailed-approach"]], "Handling Permutation Vectors": [[62, "handling-permutation-vectors"]], "Matching Shapes": [[62, "matching-shapes"]], "Final Steps and Implementation": [[62, "final-steps-and-implementation"]], "Splitting Numbers into Integer and Fractional Parts": [[63, "splitting-numbers-into-integer-and-fractional-parts"]], "Getting the Integer Part": [[63, "getting-the-integer-part"]], "Subtracting to Find the Fractional Part": [[63, "subtracting-to-find-the-fractional-part"]], "Alternative Methods: Division Remainder": [[63, "alternative-methods-division-remainder"]], "A Neat Trick Using Encode": [[63, "a-neat-trick-using-encode"]], "Counting Visible Buildings": [[64, "counting-visible-buildings"], [64, "id1"]], "Understanding Visibility": [[64, "understanding-visibility"]], "Creating an APL Function": [[64, "creating-an-apl-function"]], "Traversing the List": [[64, "traversing-the-list"]], "Cumulative Maximum Comparison": [[64, "cumulative-maximum-comparison"]], "Performance Testing": [[64, "performance-testing"]], "Simulating Dice Rolls and Analyzing Outcomes": [[65, "simulating-dice-rolls-and-analyzing-outcomes"]], "Simulating Dice Throws": [[65, "simulating-dice-throws"]], "Exploring Different Types of Dice": [[65, "exploring-different-types-of-dice"]], "Analyzing Outcomes": [[65, "analyzing-outcomes"]], "Handling Dimensional Limitations": [[65, "handling-dimensional-limitations"]], "Implementation of a Function": [[65, "implementation-of-a-function"]], "Shifting Boolean Data: An Introduction": [[66, "shifting-boolean-data-an-introduction"]], "Overview of Boolean Data Shifting": [[66, "overview-of-boolean-data-shifting"]], "Sample Data and Shifting Amounts": [[66, "sample-data-and-shifting-amounts"]], "Mapping Over the Shifting Amounts": [[66, "mapping-over-the-shifting-amounts"]], "Step 1: Identifying Data to Keep": [[66, "step-1-identifying-data-to-keep"]], "Step 2: Identifying Placement for Data": [[66, "step-2-identifying-placement-for-data"]], "Step 3: Creating a Canvas": [[66, "step-3-creating-a-canvas"]], "Handling Scalar Inputs": [[66, "handling-scalar-inputs"]], "Combining All Parts": [[66, "combining-all-parts"]], "A Simple Test for XML Validity": [[67, "a-simple-test-for-xml-validity"]], "Rules for XML Validity": [[67, "rules-for-xml-validity"]], "Filtering Angle Brackets": [[67, "filtering-angle-brackets"]], "Strategy to Identify Paired Brackets": [[67, "strategy-to-identify-paired-brackets"]], "Searching for Angle Bracket Locations": [[67, "searching-for-angle-bracket-locations"]], "Validating the Mask": [[67, "validating-the-mask"]], "Final Calculation": [[67, "final-calculation"]], "Final Function Implementation": [[68, "final-function-implementation"], [9, "final-function-implementation"]], "Converting Gregorian Year Numbers to Chinese Zodiac Animals": [[68, "converting-gregorian-year-numbers-to-chinese-zodiac-animals"]], "Data Preparation": [[68, "data-preparation"]], "Reshaping the Data": [[68, "reshaping-the-data"]], "Working with the Zodiac Cycle": [[68, "working-with-the-zodiac-cycle"]], "Mapping Years to Zodiac Animals": [[68, "mapping-years-to-zodiac-animals"]], "Character Vector Membership": [[68, "character-vector-membership"]], "Addressing Year Zero": [[68, "addressing-year-zero"]], "Examples of Function Calls": [[68, "examples-of-function-calls"]], "Computing Zodiac Signs from Dates": [[69, "computing-zodiac-signs-from-dates"]], "Cleaning the Data": [[69, "cleaning-the-data"]], "Column Permutation": [[69, "column-permutation"]], "Data Transposition": [[69, "data-transposition"]], "Table Rotation": [[69, "table-rotation"]], "Splitting the Table": [[69, "splitting-the-table"]], "Removing Spaces": [[69, "removing-spaces"]], "Date Parsing": [[69, "date-parsing"]], "Using Quad VFI": [[69, "using-quad-vfi"]], "Creating a Cutoff Table": [[69, "creating-a-cutoff-table"]], "Finding Zodiac Signs": [[69, "finding-zodiac-signs"]], "Interval Index": [[69, "interval-index"]], "Final Function": [[69, "final-function"]], "APL Quest 2018": [[70, "apl-quest-2018"]], "Calculating the Area of a Polygon Using the Shoelace Formula": [[71, "calculating-the-area-of-a-polygon-using-the-shoelace-formula"]], "Overview of the Shoelace Formula": [[71, "overview-of-the-shoelace-formula"]], "Data Normalization": [[71, "data-normalization"]], "Extracting Diagonal Pairs": [[71, "extracting-diagonal-pairs"]], "Computing the Diagonal Products": [[71, "computing-the-diagonal-products"]], "Final Optimizations": [[71, "final-optimizations"]], "Chunking a List into Segments": [[72, "chunking-a-list-into-segments"]], "The Approach Using Partitioning": [[72, "the-approach-using-partitioning"]], "Test Case Example": [[72, "test-case-example"]], "Constructing a Boolean Vector": [[72, "constructing-a-boolean-vector"]], "Function Execution": [[72, "function-execution"]], "Reducing Parentheses": [[72, "reducing-parentheses"]], "Testing the Functionality": [[72, "testing-the-functionality"]], "Checking for Consecutive Identical Letters in Words": [[73, "checking-for-consecutive-identical-letters-in-words"]], "APL Example:": [[73, "apl-example"], [73, "id1"], [73, "id2"], [73, "id3"], [73, "id4"]], "Pairwise Comparison": [[73, "pairwise-comparison"]], "Revisiting Multiple Words": [[73, "revisiting-multiple-words"]], "Single Word vs. Multiple Words": [[73, "single-word-vs-multiple-words"]], "Performance Comparisons": [[74, "performance-comparisons"], [5, "performance-comparisons"]], "Computing the Distance Around a Path Defined by Points": [[74, "computing-the-distance-around-a-path-defined-by-points"]], "Problem Setup": [[74, "problem-setup"]], "Defining the Lambda Function": [[74, "defining-the-lambda-function"]], "Calculating Distances": [[74, "calculating-distances"]], "Using Trigonometry": [[74, "using-trigonometry"]], "Optimizing the Function": [[74, "optimizing-the-function"]], "Embracing Array Operations": [[74, "embracing-array-operations"]], "Results Summary": [[74, "results-summary"]], "Compiling Simple Statistics on Grades": [[75, "compiling-simple-statistics-on-grades"]], "Sample Grades": [[75, "sample-grades"]], "Setting Up the Arguments": [[75, "setting-up-the-arguments"]], "Counting Grades": [[75, "counting-grades"]], "Computing Percentages": [[75, "computing-percentages"]], "Rounding Percentages": [[75, "rounding-percentages"]], "Constructing the Final Table": [[75, "constructing-the-final-table"]], "Safety and Performance Considerations": [[75, "safety-and-performance-considerations"]], "Centering Words in a Matrix": [[76, "centering-words-in-a-matrix"]], "Creating the Matrix": [[76, "creating-the-matrix"], [120, "creating-the-matrix"]], "Applying the Mix Function": [[76, "applying-the-mix-function"]], "Truncating Rows": [[76, "truncating-rows"]], "Adjusting Spaces": [[76, "adjusting-spaces"]], "Calculating Space Padding": [[76, "calculating-space-padding"]], "Rotating Rows for Centering": [[76, "rotating-rows-for-centering"]], "Understanding the Movement of a Chess Knight": [[77, "understanding-the-movement-of-a-chess-knight"]], "Approaches to the Problem": [[77, "approaches-to-the-problem"]], "Setting Up the Chessboard": [[77, "setting-up-the-chessboard"]], "Identifying Valid Moves": [[77, "identifying-valid-moves"]], "Creating the Boolean Array": [[77, "creating-the-boolean-array"]], "Utilizing the Pythagorean Theorem": [[77, "utilizing-the-pythagorean-theorem"]], "Converting Scores into Letter Grades": [[78, "converting-scores-into-letter-grades"]], "Background": [[78, "background"]], "Implementation": [[78, "implementation"], [97, "implementation"]], "The Interval Index Function": [[78, "the-interval-index-function"]], "Illustration of Interval Lookups": [[78, "illustration-of-interval-lookups"]], "Handling Non-positive Scores": [[78, "handling-non-positive-scores"]], "Multi-indexing in APL": [[78, "multi-indexing-in-apl"]], "Resulting Letter Grades": [[78, "resulting-letter-grades"]], "Splitting a List of Words by Length": [[79, "splitting-a-list-of-words-by-length"]], "Method 1: Using Lambda Functions": [[79, "method-1-using-lambda-functions"]], "Method 2: Using the Key Operator": [[79, "method-2-using-the-key-operator"]], "Solution to Ordering": [[79, "solution-to-ordering"]], "Another Approach": [[79, "another-approach"]], "Method 3: Sorting by Length": [[79, "method-3-sorting-by-length"]], "Translating Telephone Numbers from Digits and Letters to Plain Numbers": [[80, "translating-telephone-numbers-from-digits-and-letters-to-plain-numbers"]], "Understanding the Telephone Keypad": [[80, "understanding-the-telephone-keypad"]], "Creating Cutoff Points": [[80, "creating-cutoff-points"]], "Flattening the Matrix": [[80, "flattening-the-matrix"]], "Identifying Relevant Letters": [[80, "identifying-relevant-letters"]], "Mapping Letters and Digits to Numbers": [[80, "mapping-letters-and-digits-to-numbers"]], "Handling Digits": [[80, "handling-digits"]], "Compiling Everything Together": [[80, "compiling-everything-together"]], "Generating Values": [[80, "generating-values"]], "Defining a Lookup Function": [[80, "defining-a-lookup-function"]], "APL Quest 2019": [[81, "apl-quest-2019"]], "Understanding Byte Sequences and UTF-8 Encoding": [[82, "understanding-byte-sequences-and-utf-8-encoding"]], "Introduction to Byte Sequences": [[82, "introduction-to-byte-sequences"]], "Understanding UTF-8": [[82, "understanding-utf-8"]], "Byte Representation": [[82, "byte-representation"]], "Continuation Bytes": [[82, "continuation-bytes"]], "Checking Byte Ranges": [[82, "checking-byte-ranges"]], "Applying Logical Functions": [[82, "applying-logical-functions"]], "Implementing Masking": [[82, "implementing-masking"]], "Alternative Methods": [[82, "alternative-methods"]], "Understanding Column Label Conversion in Spreadsheet Software": [[83, "understanding-column-label-conversion-in-spreadsheet-software"]], "The Basics: A to Z": [[83, "the-basics-a-to-z"]], "Understanding Overflow in Base 26": [[83, "understanding-overflow-in-base-26"]], "Example Calculation": [[83, "example-calculation"]], "Creating a Full Solution": [[83, "creating-a-full-solution"]], "The Powers in Column Conversion": [[83, "the-powers-in-column-conversion"]], "Understanding Vector Partitioning in APL": [[84, "understanding-vector-partitioning-in-apl"]], "Group Specification": [[84, "group-specification"]], "Solution Approach": [[84, "solution-approach"]], "Positive Case": [[84, "positive-case"]], "Negative Case": [[84, "negative-case"]], "Conditional Reversal": [[84, "conditional-reversal"]], "Elegance in Reversal": [[84, "elegance-in-reversal"]], "Final Function Structure": [[84, "final-function-structure"]], "Moving Elements in a Numeric Vector to the Front in APL": [[85, "moving-elements-in-a-numeric-vector-to-the-front-in-apl"]], "Traditional Approach": [[85, "traditional-approach"]], "Using Comparisons and Sorting": [[85, "using-comparisons-and-sorting"]], "Array Manipulation Using Grading": [[85, "array-manipulation-using-grading"]], "Set Functions Approach": [[85, "set-functions-approach"]], "Implementing Set Difference and Intersection": [[85, "implementing-set-difference-and-intersection"]], "Analyzing Non-Decreasing and Non-Increasing Patterns in a List of Numbers": [[86, "analyzing-non-decreasing-and-non-increasing-patterns-in-a-list-of-numbers"]], "Understanding the Concept": [[86, "understanding-the-concept"], [116, "understanding-the-concept"]], "Example: Up and Down Sequence": [[86, "example-up-and-down-sequence"]], "Scanning in the Opposite Direction": [[86, "scanning-in-the-opposite-direction"]], "Combining the Two Scans": [[86, "combining-the-two-scans"]], "Testing for Rule Violations": [[86, "testing-for-rule-violations"]], "Re-assessing with Variations": [[86, "re-assessing-with-variations"]], "Final Checks": [[86, "final-checks"]], "Checking Bit States in APL": [[87, "checking-bit-states-in-apl"]], "Example": [[87, "example"], [89, "example"], [98, "example"], [108, "example"], [122, "example"]], "Converting to Binary": [[87, "converting-to-binary"]], "Concatenation and Conversion": [[87, "concatenation-and-conversion"]], "Binary Representation": [[87, "binary-representation"]], "Checking Bit Conditions": [[87, "checking-bit-conditions"]], "Processing the Matrix": [[87, "processing-the-matrix"]], "Reducing Over Rows": [[87, "reducing-over-rows"]], "Verification of Conditions": [[87, "verification-of-conditions"]], "Conclusion and Testing": [[87, "conclusion-and-testing"]], "Initial Approach": [[88, "initial-approach"], [118, "initial-approach"], [9, "initial-approach"]], "Emulating APL Array Printing Behavior": [[88, "emulating-apl-array-printing-behavior"]], "Formatting Each Element": [[88, "formatting-each-element"]], "Example Code": [[88, "example-code"]], "Using Replication": [[88, "using-replication"]], "Using APL\u2019s Default Display": [[88, "using-apl-s-default-display"]], "Dropping Extra Spaces": [[88, "dropping-extra-spaces"]], "Rank Operator": [[88, "rank-operator"]], "Final Touches": [[88, "final-touches"]], "Example Unicode Implementation": [[88, "example-unicode-implementation"]], "Clean Up": [[88, "clean-up"]], "Generating Inclusive Integer Ranges in APL": [[89, "generating-inclusive-integer-ranges-in-apl"]], "Problem Specification": [[89, "problem-specification"]], "Steps to Generate the Range": [[89, "steps-to-generate-the-range"]], "Efficient Method": [[89, "efficient-method"]], "Using Zero-Based Indexing": [[89, "using-zero-based-indexing"]], "Understanding Leap Years: A Guide": [[90, "understanding-leap-years-a-guide"]], "Leap Year Rules": [[90, "leap-year-rules"]], "Examples": [[90, "examples"]], "Approach to Implementation": [[90, "approach-to-implementation"]], "Logic for Leap Year Calculation": [[90, "logic-for-leap-year-calculation"]], "Handling Arrays": [[90, "handling-arrays"]], "XOR Reduction for Exception Handling": [[90, "xor-reduction-for-exception-handling"]], "Converting to Function": [[90, "converting-to-function"]], "Using Built-in Functions": [[90, "using-built-in-functions"]], "Analyzing Alternating Digit Growth in Numbers": [[91, "analyzing-alternating-digit-growth-in-numbers"]], "Encoding and Decoding in APL": [[91, "encoding-and-decoding-in-apl"]], "The Core of the Solution": [[91, "the-core-of-the-solution"]], "Normalizing Differences": [[91, "normalizing-differences"]], "A More Elegant Approach": [[91, "a-more-elegant-approach"]], "Final Optimization": [[91, "final-optimization"]], "APL Quest 2020": [[92, "apl-quest-2020"]], "Calculating Percentage of Characters in a DNA String": [[93, "calculating-percentage-of-characters-in-a-dna-string"]], "Step 1: Identify Characters": [[93, "step-1-identify-characters"]], "Step 2: Calculate the Fraction": [[93, "step-2-calculate-the-fraction"]], "Step 3: Optimize the Calculation": [[93, "step-3-optimize-the-calculation"]], "Checking for Magic Squares": [[94, "checking-for-magic-squares"]], "Definition of Magic Squares": [[94, "definition-of-magic-squares"]], "Approach to Checking for Magic Squares": [[94, "approach-to-checking-for-magic-squares"]], "Finding the Diagonal": [[94, "finding-the-diagonal"]], "Summation Process": [[94, "summation-process"]], "Optimization and Elimination of Redundancy": [[94, "optimization-and-elimination-of-redundancy"]], "Chess Setup Challenge": [[95, "chess-setup-challenge"]], "Examples of Setups": [[95, "examples-of-setups"]], "Valid Setup": [[95, "valid-setup"]], "Invalid Setups": [[95, "invalid-setups"]], "Step-by-Step Breakdown": [[95, "step-by-step-breakdown"]], "Creating a Cover for the Dyadic Iota in APL": [[96, "creating-a-cover-for-the-dyadic-iota-in-apl"]], "Understanding the Default Behavior": [[96, "understanding-the-default-behavior"]], "Approaches to Change the Behavior": [[96, "approaches-to-change-the-behavior"]], "Approach 1: Conditional Mapping": [[96, "approach-1-conditional-mapping"]], "Better Conditional Handling": [[96, "better-conditional-handling"]], "One-time Index Function": [[96, "one-time-index-function"]], "Post-processing with Modulus": [[96, "post-processing-with-modulus"]], "Explicit Function Definition": [[96, "explicit-function-definition"]], "Finding the Longest Consecutive Sequence in a List of Numbers": [[97, "finding-the-longest-consecutive-sequence-in-a-list-of-numbers"]], "Length of Segments": [[97, "length-of-segments"]], "Performance Consideration": [[97, "performance-consideration"]], "Grouping Integers by Divisibility": [[98, "grouping-integers-by-divisibility"]], "Objective": [[98, "objective"]], "Expected Results:": [[98, "expected-results"]], "Implementation Strategy": [[98, "implementation-strategy"]], "Using the Modulus Operator": [[98, "using-the-modulus-operator"]], "APL Example for Mask Creation": [[98, "apl-example-for-mask-creation"]], "Filtering Function": [[98, "filtering-function"]], "APL Example for Filtering": [[98, "apl-example-for-filtering"]], "Advanced Solution": [[98, "advanced-solution"]], "Creating a Remainder Table in APL": [[98, "creating-a-remainder-table-in-apl"]], "Steps Going Forward": [[98, "steps-going-forward"]], "Final APL Solution for Grouping": [[98, "final-apl-solution-for-grouping"]], "Justified Text Transformation in APL": [[99, "justified-text-transformation-in-apl"]], "Example Overview": [[99, "example-overview"]], "Normalizing Incoming Data": [[99, "normalizing-incoming-data"]], "Right Justification Process": [[99, "right-justification-process"]], "Finding Rectangle Dimensions with Given Area": [[100, "finding-rectangle-dimensions-with-given-area"]], "Example: An Area of 12": [[100, "example-an-area-of-12"]], "Finding Candidates": [[100, "finding-candidates"]], "Divisors of 12": [[100, "divisors-of-12"]], "Identifying the Middle Values": [[100, "identifying-the-middle-values"]], "Efficiently Finding Dimensions": [[100, "efficiently-finding-dimensions"]], "Solution Summary": [[100, "solution-summary"]], "Finding the Difference in Area Between an Inscribed Square and Its Circumscribing Circle": [[101, "finding-the-difference-in-area-between-an-inscribed-square-and-its-circumscribing-circle"]], "Theory Overview": [[101, "theory-overview"]], "Symbolic Reasoning": [[101, "symbolic-reasoning"]], "Calculating the Area of the Circle": [[101, "calculating-the-area-of-the-circle"]], "Combining Areas": [[101, "combining-areas"]], "Calculating Absolute Time Difference in Minutes": [[102, "calculating-absolute-time-difference-in-minutes"]], "Example Problem": [[102, "example-problem"]], "Normalization of Time Specifications": [[102, "normalization-of-time-specifications"]], "Converting to Minutes": [[102, "converting-to-minutes"]], "Calculating the Absolute Difference": [[102, "calculating-the-absolute-difference"]], "APL Quest 2021": [[103, "apl-quest-2021"]], "Calculating the Window Average of a List of Numbers in APL": [[104, "calculating-the-window-average-of-a-list-of-numbers-in-apl"]], "Example Data": [[104, "example-data"]], "Window Size Calculation": [[104, "window-size-calculation"]], "Reduction Over Windows": [[104, "reduction-over-windows"]], "Average Calculation": [[104, "average-calculation"]], "Edge Cases and Extending the Data": [[104, "edge-cases-and-extending-the-data"]], "Comparing DNA Strings: A Guide": [[105, "comparing-dna-strings-a-guide"]], "Creating a Mask": [[105, "creating-a-mask"]], "Counting Differences": [[105, "counting-differences"]], "Wrapping in a Function": [[105, "wrapping-in-a-function"]], "Simplifying the Function": [[105, "simplifying-the-function"]], "Using Inner Product": [[105, "using-inner-product"]], "Implementing the Final Function": [[105, "implementing-the-final-function"]], "Counting DNA Letters in a Character Vector": [[106, "counting-dna-letters-in-a-character-vector"]], "Sample DNA String": [[106, "sample-dna-string"]], "Creating the Boolean Table": [[106, "creating-the-boolean-table"]], "Handling Single Letters": [[106, "handling-single-letters"]], "Alternative Approach: Using the Key Operator": [[106, "alternative-approach-using-the-key-operator"]], "Writing the Function Neatly": [[106, "writing-the-function-neatly"]], "Implementation of the Extended Key Operator": [[106, "implementation-of-the-extended-key-operator"]], "Finding the Longest Run of Ones in a Boolean Vector": [[107, "finding-the-longest-run-of-ones-in-a-boolean-vector"]], "Using Commutative Operators": [[107, "using-commutative-operators"]], "Finding the Maximum Length": [[107, "finding-the-maximum-length"]], "Handling Empty Lists": [[107, "handling-empty-lists"]], "Importing Required Libraries": [[107, "importing-required-libraries"]], "Improving Performance": [[107, "improving-performance"], [112, "improving-performance"]], "Performance Results": [[107, "performance-results"]], "Avoiding Unnecessary Computation": [[107, "avoiding-unnecessary-computation"]], "Identifying Runs": [[107, "identifying-runs"]], "Final Implementation Strategy": [[107, "final-implementation-strategy"]], "Using Forks for Efficiency": [[107, "using-forks-for-efficiency"]], "Comparing Approaches": [[107, "comparing-approaches"]], "Analyzing Golf Scores: Rank Calculation with Average Position for Tied Scores": [[108, "analyzing-golf-scores-rank-calculation-with-average-position-for-tied-scores"]], "General Approach": [[108, "general-approach"]], "Implementation Strategies": [[108, "implementation-strategies"]], "Method 1: Grading and Grouping": [[108, "method-1-grading-and-grouping"]], "Method 2: Stable Sorting and Averaging": [[108, "method-2-stable-sorting-and-averaging"]], "Method 3: Using Functions in APL": [[108, "method-3-using-functions-in-apl"]], "Splitting Text in APL": [[109, "splitting-text-in-apl"]], "Finding Character Positions": [[109, "finding-character-positions"]], "Splitting the Text": [[109, "splitting-the-text"]], "Testing and Finalizing": [[109, "testing-and-finalizing"]], "Constructing Concentric Rings of Numbers": [[110, "constructing-concentric-rings-of-numbers"]], "Concept Overview": [[110, "concept-overview"]], "Expanding to a Matrix": [[110, "expanding-to-a-matrix"]], "Minimum Function": [[110, "minimum-function"]], "Inserting Separators in Large Integers": [[111, "inserting-separators-in-large-integers"]], "Generating Test Data": [[111, "generating-test-data"]], "Approach 1: Using Partitioning": [[111, "approach-1-using-partitioning"]], "Approach 2: Using Regular Expressions": [[111, "approach-2-using-regular-expressions"]], "Approach 3: Using a Matrix-Based Method": [[111, "approach-3-using-a-matrix-based-method"]], "Calculating Characters to Remove": [[111, "calculating-characters-to-remove"]], "Problem Definition": [[112, "problem-definition"], [32, "problem-definition"]], "Building a Staircase in APL": [[112, "building-a-staircase-in-apl"]], "Setting Up the Environment": [[112, "setting-up-the-environment"]], "Generating the Matrix": [[112, "generating-the-matrix"]], "Creating the Addition Table": [[112, "creating-the-addition-table"]], "Optimization with Index Origin": [[112, "optimization-with-index-origin"]], "An Efficient Matrix Builder": [[112, "an-efficient-matrix-builder"]], "Finding the Symmetric Difference Between Two Sets": [[113, "finding-the-symmetric-difference-between-two-sets"]], "Using the Fork Construct": [[113, "using-the-fork-construct"]], "Alternative Approach": [[113, "alternative-approach"]], "Modifying the Set Difference Function": [[113, "modifying-the-set-difference-function"]], "Handling Higher-Rank Arguments": [[113, "handling-higher-rank-arguments"]], "APL Quest 2022": [[114, "apl-quest-2022"]], "Implementing a Simple Caesar Cipher for Uppercase Characters and Spaces": [[115, "implementing-a-simple-caesar-cipher-for-uppercase-characters-and-spaces"]], "The Concept": [[115, "the-concept"]], "Implementing the Cipher": [[115, "implementing-the-cipher"]], "Applying the Cipher": [[115, "applying-the-cipher"]], "Rotation": [[115, "rotation"]], "Code Clean-Up": [[115, "code-clean-up"]], "Reversing the Cipher": [[115, "reversing-the-cipher"]], "Computing the Next Double Critical Day": [[116, "computing-the-next-double-critical-day"]], "Steps to Determine the Next Double Critical Day": [[116, "steps-to-determine-the-next-double-critical-day"]], "Programming the Solution": [[116, "programming-the-solution"]], "Implementation Example": [[116, "implementation-example"], [119, "implementation-example"]], "Interchanging Horizontally Adjacent Elements in a Multi-Dimensional Array": [[117, "interchanging-horizontally-adjacent-elements-in-a-multi-dimensional-array"]], "Example Initialization": [[117, "example-initialization"]], "Initial Algorithm Development": [[117, "initial-algorithm-development"]], "Example Code Implementation": [[117, "example-code-implementation"]], "Optimizing the Approach": [[117, "optimizing-the-approach"]], "Removing Non-Decreasing Elements from a List": [[118, "removing-non-decreasing-elements-from-a-list"]], "Problem Explanation": [[118, "problem-explanation"]], "APL Implementation": [[118, "apl-implementation"]], "Multiple Passes": [[118, "multiple-passes"]], "Efficient Approach: Single Pass": [[118, "efficient-approach-single-pass"]], "Steps to Implement the Single-Pass Solution": [[118, "steps-to-implement-the-single-pass-solution"]], "APL Implementation for Single Pass": [[118, "apl-implementation-for-single-pass"]], "Interchanging Adjacent Elements in a Multi-Dimensional Array": [[119, "interchanging-adjacent-elements-in-a-multi-dimensional-array"]], "Developing the Algorithm": [[119, "developing-the-algorithm"]], "Utilizing Partitioning and Function Wrapping": [[119, "utilizing-partitioning-and-function-wrapping"]], "Applying to Subarrays": [[119, "applying-to-subarrays"]], "Using Indexing": [[119, "using-indexing"]], "Employing the Stencil Operator": [[119, "employing-the-stencil-operator"]], "Parsing Key-Value Pairs into a Matrix": [[120, "parsing-key-value-pairs-into-a-matrix"]], "Custom Notation Example": [[120, "custom-notation-example"]], "The Cutting Process": [[120, "the-cutting-process"]], "Applying the Identity Function": [[120, "applying-the-identity-function"]], "Parsing Each Key-Value Pair": [[120, "parsing-each-key-value-pair"]], "Removing Code Duplication": [[120, "removing-code-duplication"]], "Using the Stencil Operator": [[120, "using-the-stencil-operator"]], "Finding a Reduced Fraction for a Given Number": [[121, "finding-a-reduced-fraction-for-a-given-number"]], "Step-by-Step Solution": [[121, "step-by-step-solution"]], "Understanding the Fork Operation": [[121, "understanding-the-fork-operation"]], "What is the Lowest Common Multiple?": [[121, "what-is-the-lowest-common-multiple"]], "Constructing the Fraction": [[121, "constructing-the-fraction"]], "Comparing Version Numbers": [[122, "comparing-version-numbers"]], "Step-by-Step Comparison": [[122, "step-by-step-comparison"]], "Using Mathematical Approaches": [[122, "using-mathematical-approaches"]], "Functional Analysis": [[122, "functional-analysis"]], "Alternative Evaluation": [[122, "alternative-evaluation"]], "Understanding the Methodology": [[122, "understanding-the-methodology"]], "APL Quest: Splitting Text on Spaces": [[123, "apl-quest-splitting-text-on-spaces"]], "Classic Ways to Split on Spaces": [[123, "classic-ways-to-split-on-spaces"]], "Automatically Inserting an Empty Segment": [[123, "automatically-inserting-an-empty-segment"]], "Merging Trailing Elements": [[123, "merging-trailing-elements"]], "Another Solution to the Problem": [[123, "another-solution-to-the-problem"]], "Handling Excess Segments": [[123, "handling-excess-segments"]], "Finding End Points of One Array in Another": [[124, "finding-end-points-of-one-array-in-another"]], "Visualizing the Problem": [[124, "visualizing-the-problem"]], "Two Methods to Find End Points": [[124, "two-methods-to-find-end-points"]], "Simplifying the Code": [[124, "simplifying-the-code"]], "An Alternative Method": [[124, "an-alternative-method"]], "Understanding Dice Mechanics in Risk": [[125, "understanding-dice-mechanics-in-risk"]], "Overview of the Mechanics": [[125, "overview-of-the-mechanics"]], "The Players": [[125, "the-players"]], "Example Dice Throws": [[125, "example-dice-throws"]], "Determining Losses": [[125, "determining-losses"]], "APL Calculation": [[125, "apl-calculation"]], "Dice Comparison Rules": [[125, "dice-comparison-rules"]], "APL Comparison Table": [[125, "apl-comparison-table"]], "Extracting the Diagonal": [[125, "extracting-the-diagonal"]], "Counting Losses": [[125, "counting-losses"]], "Summing the Losses": [[125, "summing-the-losses"]], "APL Quest 2023": [[126, "apl-quest-2023"]], "What is APL?": [[127, "what-is-apl"]], "About APL Quest": [[127, "about-apl-quest"]], "Structure of This Book": [[127, "structure-of-this-book"]], "Join the Quest!": [[127, "join-the-quest"]], "APL Quest {year}": [[128, "apl-quest-year"]], "Go forth and Multiply 2013-8": [[1, "go-forth-and-multiply-2013-8"]], "Today\u2019s Quest: Go forth and Multiply": [[1, "today-s-quest-go-forth-and-multiply"]], "The Obvious Solution": [[1, "the-obvious-solution"]], "Exploring Alternative Solutions": [[1, "exploring-alternative-solutions"]], "Using the Definition of the Outer Product": [[1, "using-the-definition-of-the-outer-product"]], "Generating Indices as Vectors": [[1, "generating-indices-as-vectors"]], "Reshaping for Fun": [[1, "reshaping-for-fun"]], "Testing and Further Exploration": [[1, "testing-and-further-exploration"]], "Using Cumulative Additions": [[1, "using-cumulative-additions"]], "Going Further: Implementing Functions without Operators": [[1, "going-further-implementing-functions-without-operators"]], "Finding Alternative Methods": [[1, "finding-alternative-methods"]], "Relying on APL\u2019s Scalar Extension": [[1, "relying-on-apl-s-scalar-extension"]], "Final Challenge: Multiplication without Arithmetic": [[1, "final-challenge-multiplication-without-arithmetic"]], "Additional Resources": [[1, "additional-resources"], [5, "additional-resources"], [9, "additional-resources"]], "Home on the range 2013-6": [[2, "home-on-the-range-2013-6"]], "Generating Sample Data": [[2, "generating-sample-data"]], "Handling Matrices": [[2, "handling-matrices"]], "Edge Case: Empty Arrays": [[2, "edge-case-empty-arrays"]], "Further Optimizations": [[2, "further-optimizations"]], "Identity Crisis 2013-5": [[3, "identity-crisis-2013-5"]], "Generating an Identity Matrix": [[3, "generating-an-identity-matrix"]], "Method 1: Using Indices": [[3, "method-1-using-indices"]], "Method 2: Inequality Table": [[3, "method-2-inequality-table"]], "Method 3: Creating an Empty Matrix": [[3, "method-3-creating-an-empty-matrix"]], "Method 4: Using the Add Operator": [[3, "method-4-using-the-add-operator"]], "More Innovative Solutions": [[3, "more-innovative-solutions"]], "Encoding": [[3, "encoding"]], "Fun Techniques with Randomness": [[3, "fun-techniques-with-randomness"]], "Complex Numbers": [[3, "complex-numbers"]], "It\u2019s a moving experience 2013-9": [[4, "it-s-a-moving-experience-2013-9"]], "Visualizing n-wise Reduction": [[4, "visualizing-n-wise-reduction"]], "Improving the Approach": [[4, "improving-the-approach"]], "Clamping Input Size": [[4, "clamping-input-size"]], "Generalized Solutions": [[4, "generalized-solutions"]], "Advanced Error Handling": [[4, "advanced-error-handling"]], "Maintaining Data Shape": [[4, "maintaining-data-shape"]], "Keeping things in balance 2013-4": [[5, "keeping-things-in-balance-2013-4"]], "Normalizing Input": [[5, "normalizing-input"]], "Determining Balanced Parentheses": [[5, "determining-balanced-parentheses"]], "Alternative Solutions": [[5, "alternative-solutions"]], "Creative Solutions": [[5, "creative-solutions"]], "Making the Grade 2013-2": [[6, "making-the-grade-2013-2"]], "Computing the Percentage of Passes": [[6, "computing-the-percentage-of-passes"]], "Alternative Function Implementations": [[6, "alternative-function-implementations"]], "Analysis of Function Performance": [[6, "analysis-of-function-performance"]], "Solution Salvation 2013-10": [[8, "solution-salvation-2013-10"]], "Setting Up the Equation System": [[8, "setting-up-the-equation-system"]], "Finding the Missing Values": [[8, "finding-the-missing-values"]], "Iterative Techniques": [[8, "iterative-techniques"]], "Finding an Initial Guess": [[8, "finding-an-initial-guess"]], "What is in a Word? 2013-3": [[9, "what-is-in-a-word-2013-3"]], "Definition of a Word": [[9, "definition-of-a-word"]], "Test Data Preparation": [[9, "test-data-preparation"]], "A Regular Expression Approach": [[9, "a-regular-expression-approach"]], "Utilizing Built-in Functions": [[9, "utilizing-built-in-functions"]], "Optimizing with Boolean Masks": [[9, "optimizing-with-boolean-masks"]], "Fixing Missing Transition Issues": [[9, "fixing-missing-transition-issues"]], "Performance Analysis": [[9, "performance-analysis"]], "Seems a Bit Odd To Me": [[11, "seems-a-bit-odd-to-me"]], "Seems a Bit Odd To Me 2013-1": [[7, "seems-a-bit-odd-to-me-2013-1"]], "Example Solutions": [[7, "example-solutions"]], "Detailed Explanations": [[7, "detailed-explanations"]], "Solution F": [[7, "solution-f"]], "Solution G": [[7, "solution-g"]], "Solution H": [[7, "solution-h"]], "Solution I": [[7, "solution-i"]], "Solution J": [[7, "solution-j"]], "APL Quest: Problem Six Overview": [[32, "apl-quest-problem-six-overview"]], "Coordinate Representation": [[32, "coordinate-representation"]], "Visualization": [[32, "visualization"]], "Checking Overlaps": [[32, "checking-overlaps"]], "Cases of Containment": [[32, "cases-of-containment"]], "Coding Implementation": [[32, "coding-implementation"]], "Building The Function": [[32, "building-the-function"]], "Optimization and Performance": [[32, "optimization-and-performance"]]}, "indexentries": {}})